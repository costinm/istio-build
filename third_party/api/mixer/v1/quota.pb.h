// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/quota.proto

#ifndef PROTOBUF_mixer_2fv1_2fquota_2eproto__INCLUDED
#define PROTOBUF_mixer_2fv1_2fquota_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include "mixer/v1/attributes.pb.h"
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class Duration;
class DurationDefaultTypeInternal;
extern DurationDefaultTypeInternal _Duration_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace istio {
namespace mixer {
namespace v1 {
class Attributes;
class AttributesDefaultTypeInternal;
extern AttributesDefaultTypeInternal _Attributes_default_instance_;
class QuotaRequest;
class QuotaRequestDefaultTypeInternal;
extern QuotaRequestDefaultTypeInternal _QuotaRequest_default_instance_;
class QuotaResponse;
class QuotaResponseDefaultTypeInternal;
extern QuotaResponseDefaultTypeInternal _QuotaResponse_default_instance_;
class StringMap;
class StringMapDefaultTypeInternal;
extern StringMapDefaultTypeInternal _StringMap_default_instance_;
}  // namespace v1
}  // namespace mixer
}  // namespace istio

namespace istio {
namespace mixer {
namespace v1 {

namespace protobuf_mixer_2fv1_2fquota_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mixer_2fv1_2fquota_2eproto

// ===================================================================

class QuotaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.QuotaRequest) */ {
 public:
  QuotaRequest();
  virtual ~QuotaRequest();

  QuotaRequest(const QuotaRequest& from);

  inline QuotaRequest& operator=(const QuotaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaRequest& default_instance();

  static inline const QuotaRequest* internal_default_instance() {
    return reinterpret_cast<const QuotaRequest*>(
               &_QuotaRequest_default_instance_);
  }

  void Swap(QuotaRequest* other);

  // implements Message ----------------------------------------------

  inline QuotaRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  QuotaRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuotaRequest& from);
  void MergeFrom(const QuotaRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuotaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string deduplication_id = 2;
  void clear_deduplication_id();
  static const int kDeduplicationIdFieldNumber = 2;
  const ::std::string& deduplication_id() const;
  void set_deduplication_id(const ::std::string& value);
  #if LANG_CXX11
  void set_deduplication_id(::std::string&& value);
  #endif
  void set_deduplication_id(const char* value);
  void set_deduplication_id(const char* value, size_t size);
  ::std::string* mutable_deduplication_id();
  ::std::string* release_deduplication_id();
  void set_allocated_deduplication_id(::std::string* deduplication_id);

  // string quota = 3;
  void clear_quota();
  static const int kQuotaFieldNumber = 3;
  const ::std::string& quota() const;
  void set_quota(const ::std::string& value);
  #if LANG_CXX11
  void set_quota(::std::string&& value);
  #endif
  void set_quota(const char* value);
  void set_quota(const char* value, size_t size);
  ::std::string* mutable_quota();
  ::std::string* release_quota();
  void set_allocated_quota(::std::string* quota);

  // .istio.mixer.v1.Attributes attributes = 1;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::istio::mixer::v1::Attributes& attributes() const;
  ::istio::mixer::v1::Attributes* mutable_attributes();
  ::istio::mixer::v1::Attributes* release_attributes();
  void set_allocated_attributes(::istio::mixer::v1::Attributes* attributes);

  // int64 amount = 4;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // bool best_effort = 5;
  void clear_best_effort();
  static const int kBestEffortFieldNumber = 5;
  bool best_effort() const;
  void set_best_effort(bool value);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.QuotaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deduplication_id_;
  ::google::protobuf::internal::ArenaStringPtr quota_;
  ::istio::mixer::v1::Attributes* attributes_;
  ::google::protobuf::int64 amount_;
  bool best_effort_;
  mutable int _cached_size_;
  friend struct  protobuf_mixer_2fv1_2fquota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuotaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.QuotaResponse) */ {
 public:
  QuotaResponse();
  virtual ~QuotaResponse();

  QuotaResponse(const QuotaResponse& from);

  inline QuotaResponse& operator=(const QuotaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaResponse& default_instance();

  static inline const QuotaResponse* internal_default_instance() {
    return reinterpret_cast<const QuotaResponse*>(
               &_QuotaResponse_default_instance_);
  }

  void Swap(QuotaResponse* other);

  // implements Message ----------------------------------------------

  inline QuotaResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  QuotaResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuotaResponse& from);
  void MergeFrom(const QuotaResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuotaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration expiration = 1;
  bool has_expiration() const;
  void clear_expiration();
  static const int kExpirationFieldNumber = 1;
  const ::google::protobuf::Duration& expiration() const;
  ::google::protobuf::Duration* mutable_expiration();
  ::google::protobuf::Duration* release_expiration();
  void set_allocated_expiration(::google::protobuf::Duration* expiration);

  // int64 amount = 2;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.QuotaResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* expiration_;
  ::google::protobuf::int64 amount_;
  mutable int _cached_size_;
  friend struct  protobuf_mixer_2fv1_2fquota_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// QuotaRequest

// .istio.mixer.v1.Attributes attributes = 1;
inline bool QuotaRequest::has_attributes() const {
  return this != internal_default_instance() && attributes_ != NULL;
}
inline void QuotaRequest::clear_attributes() {
  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) delete attributes_;
  attributes_ = NULL;
}
inline const ::istio::mixer::v1::Attributes& QuotaRequest::attributes() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.QuotaRequest.attributes)
  return attributes_ != NULL ? *attributes_
                         : *::istio::mixer::v1::Attributes::internal_default_instance();
}
inline ::istio::mixer::v1::Attributes* QuotaRequest::mutable_attributes() {
  
  if (attributes_ == NULL) {
    attributes_ = new ::istio::mixer::v1::Attributes;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.QuotaRequest.attributes)
  return attributes_;
}
inline ::istio::mixer::v1::Attributes* QuotaRequest::release_attributes() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.QuotaRequest.attributes)
  
  ::istio::mixer::v1::Attributes* temp = attributes_;
  attributes_ = NULL;
  return temp;
}
inline void QuotaRequest::set_allocated_attributes(::istio::mixer::v1::Attributes* attributes) {
  delete attributes_;
  attributes_ = attributes;
  if (attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.QuotaRequest.attributes)
}

// string deduplication_id = 2;
inline void QuotaRequest::clear_deduplication_id() {
  deduplication_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuotaRequest::deduplication_id() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.QuotaRequest.deduplication_id)
  return deduplication_id_.GetNoArena();
}
inline void QuotaRequest::set_deduplication_id(const ::std::string& value) {
  
  deduplication_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.QuotaRequest.deduplication_id)
}
#if LANG_CXX11
inline void QuotaRequest::set_deduplication_id(::std::string&& value) {
  
  deduplication_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.QuotaRequest.deduplication_id)
}
#endif
inline void QuotaRequest::set_deduplication_id(const char* value) {
  
  deduplication_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.QuotaRequest.deduplication_id)
}
inline void QuotaRequest::set_deduplication_id(const char* value, size_t size) {
  
  deduplication_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.QuotaRequest.deduplication_id)
}
inline ::std::string* QuotaRequest::mutable_deduplication_id() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.QuotaRequest.deduplication_id)
  return deduplication_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuotaRequest::release_deduplication_id() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.QuotaRequest.deduplication_id)
  
  return deduplication_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaRequest::set_allocated_deduplication_id(::std::string* deduplication_id) {
  if (deduplication_id != NULL) {
    
  } else {
    
  }
  deduplication_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deduplication_id);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.QuotaRequest.deduplication_id)
}

// string quota = 3;
inline void QuotaRequest::clear_quota() {
  quota_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuotaRequest::quota() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.QuotaRequest.quota)
  return quota_.GetNoArena();
}
inline void QuotaRequest::set_quota(const ::std::string& value) {
  
  quota_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.QuotaRequest.quota)
}
#if LANG_CXX11
inline void QuotaRequest::set_quota(::std::string&& value) {
  
  quota_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.QuotaRequest.quota)
}
#endif
inline void QuotaRequest::set_quota(const char* value) {
  
  quota_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.QuotaRequest.quota)
}
inline void QuotaRequest::set_quota(const char* value, size_t size) {
  
  quota_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.QuotaRequest.quota)
}
inline ::std::string* QuotaRequest::mutable_quota() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.QuotaRequest.quota)
  return quota_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuotaRequest::release_quota() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.QuotaRequest.quota)
  
  return quota_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaRequest::set_allocated_quota(::std::string* quota) {
  if (quota != NULL) {
    
  } else {
    
  }
  quota_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quota);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.QuotaRequest.quota)
}

// int64 amount = 4;
inline void QuotaRequest::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QuotaRequest::amount() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.QuotaRequest.amount)
  return amount_;
}
inline void QuotaRequest::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.QuotaRequest.amount)
}

// bool best_effort = 5;
inline void QuotaRequest::clear_best_effort() {
  best_effort_ = false;
}
inline bool QuotaRequest::best_effort() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.QuotaRequest.best_effort)
  return best_effort_;
}
inline void QuotaRequest::set_best_effort(bool value) {
  
  best_effort_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.QuotaRequest.best_effort)
}

// -------------------------------------------------------------------

// QuotaResponse

// .google.protobuf.Duration expiration = 1;
inline bool QuotaResponse::has_expiration() const {
  return this != internal_default_instance() && expiration_ != NULL;
}
inline void QuotaResponse::clear_expiration() {
  if (GetArenaNoVirtual() == NULL && expiration_ != NULL) delete expiration_;
  expiration_ = NULL;
}
inline const ::google::protobuf::Duration& QuotaResponse::expiration() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.QuotaResponse.expiration)
  return expiration_ != NULL ? *expiration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* QuotaResponse::mutable_expiration() {
  
  if (expiration_ == NULL) {
    expiration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.QuotaResponse.expiration)
  return expiration_;
}
inline ::google::protobuf::Duration* QuotaResponse::release_expiration() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.QuotaResponse.expiration)
  
  ::google::protobuf::Duration* temp = expiration_;
  expiration_ = NULL;
  return temp;
}
inline void QuotaResponse::set_allocated_expiration(::google::protobuf::Duration* expiration) {
  delete expiration_;
  if (expiration != NULL && expiration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_expiration = new ::google::protobuf::Duration;
    new_expiration->CopyFrom(*expiration);
    expiration = new_expiration;
  }
  expiration_ = expiration;
  if (expiration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.QuotaResponse.expiration)
}

// int64 amount = 2;
inline void QuotaResponse::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QuotaResponse::amount() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.QuotaResponse.amount)
  return amount_;
}
inline void QuotaResponse::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.QuotaResponse.amount)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mixer_2fv1_2fquota_2eproto__INCLUDED
