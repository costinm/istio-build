// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lightstep_carrier.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lightstep_carrier.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace lightstep {
class BinaryCarrierDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BinaryCarrier>
     _instance;
} _BinaryCarrier_default_instance_;
class BasicTracerCarrier_BaggageItemsEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BasicTracerCarrier::BasicTracerCarrier_BaggageItemsEntry>
     _instance;
} _BasicTracerCarrier_BaggageItemsEntry_default_instance_;
class BasicTracerCarrierDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BasicTracerCarrier>
     _instance;
} _BasicTracerCarrier_default_instance_;
class TextCarrierPairDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TextCarrierPair>
     _instance;
} _TextCarrierPair_default_instance_;

namespace protobuf_lightstep_5fcarrier_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryCarrier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryCarrier, text_ctx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryCarrier, basic_ctx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTracerCarrier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTracerCarrier, trace_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTracerCarrier, span_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTracerCarrier, sampled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTracerCarrier, baggage_items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCarrierPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCarrierPair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextCarrierPair, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(BinaryCarrier)},
  { 7, -1, sizeof(BasicTracerCarrier)},
  { 16, -1, sizeof(TextCarrierPair)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BinaryCarrier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BasicTracerCarrier_BaggageItemsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BasicTracerCarrier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TextCarrierPair_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "lightstep_carrier.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[1].reflection = BasicTracerCarrier::BasicTracerCarrier_BaggageItemsEntry::CreateReflection(file_level_metadata[1].descriptor, _BasicTracerCarrier_BaggageItemsEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BinaryCarrier_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BinaryCarrier_default_instance_);_BasicTracerCarrier_BaggageItemsEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BasicTracerCarrier_BaggageItemsEntry_default_instance_);_BasicTracerCarrier_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BasicTracerCarrier_default_instance_);_TextCarrierPair_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TextCarrierPair_default_instance_);_BinaryCarrier_default_instance_._instance.get_mutable()->basic_ctx_ = const_cast< ::lightstep::BasicTracerCarrier*>(
      ::lightstep::BasicTracerCarrier::internal_default_instance());
  _BasicTracerCarrier_BaggageItemsEntry_default_instance_._instance.get_mutable()->set_default_instance(_BasicTracerCarrier_BaggageItemsEntry_default_instance_._instance.get_mutable());
  _BasicTracerCarrier_BaggageItemsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027lightstep_carrier.proto\022\tlightstep\"o\n\r"
      "BinaryCarrier\022,\n\010text_ctx\030\001 \003(\0132\032.lights"
      "tep.TextCarrierPair\0220\n\tbasic_ctx\030\002 \001(\0132\035"
      ".lightstep.BasicTracerCarrier\"\305\001\n\022BasicT"
      "racerCarrier\022\020\n\010trace_id\030\001 \001(\006\022\017\n\007span_i"
      "d\030\002 \001(\006\022\017\n\007sampled\030\003 \001(\010\022F\n\rbaggage_item"
      "s\030\004 \003(\0132/.lightstep.BasicTracerCarrier.B"
      "aggageItemsEntry\0323\n\021BaggageItemsEntry\022\013\n"
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"-\n\017TextCar"
      "rierPair\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\tb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 404);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lightstep_carrier.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_lightstep_5fcarrier_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinaryCarrier::kTextCtxFieldNumber;
const int BinaryCarrier::kBasicCtxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinaryCarrier::BinaryCarrier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lightstep_5fcarrier_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.BinaryCarrier)
}
BinaryCarrier::BinaryCarrier(const BinaryCarrier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      text_ctx_(from.text_ctx_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic_ctx()) {
    basic_ctx_ = new ::lightstep::BasicTracerCarrier(*from.basic_ctx_);
  } else {
    basic_ctx_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:lightstep.BinaryCarrier)
}

void BinaryCarrier::SharedCtor() {
  basic_ctx_ = NULL;
  _cached_size_ = 0;
}

BinaryCarrier::~BinaryCarrier() {
  // @@protoc_insertion_point(destructor:lightstep.BinaryCarrier)
  SharedDtor();
}

void BinaryCarrier::SharedDtor() {
  if (this != internal_default_instance()) delete basic_ctx_;
}

void BinaryCarrier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BinaryCarrier::descriptor() {
  protobuf_lightstep_5fcarrier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightstep_5fcarrier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BinaryCarrier& BinaryCarrier::default_instance() {
  protobuf_lightstep_5fcarrier_2eproto::InitDefaults();
  return *internal_default_instance();
}

BinaryCarrier* BinaryCarrier::New(::google::protobuf::Arena* arena) const {
  BinaryCarrier* n = new BinaryCarrier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BinaryCarrier::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.BinaryCarrier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_ctx_.Clear();
  if (GetArenaNoVirtual() == NULL && basic_ctx_ != NULL) {
    delete basic_ctx_;
  }
  basic_ctx_ = NULL;
  _internal_metadata_.Clear();
}

bool BinaryCarrier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.BinaryCarrier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .lightstep.TextCarrierPair text_ctx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_text_ctx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lightstep.BasicTracerCarrier basic_ctx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_ctx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.BinaryCarrier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.BinaryCarrier)
  return false;
#undef DO_
}

void BinaryCarrier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.BinaryCarrier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lightstep.TextCarrierPair text_ctx = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->text_ctx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->text_ctx(static_cast<int>(i)), output);
  }

  // .lightstep.BasicTracerCarrier basic_ctx = 2;
  if (this->has_basic_ctx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->basic_ctx_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.BinaryCarrier)
}

::google::protobuf::uint8* BinaryCarrier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.BinaryCarrier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lightstep.TextCarrierPair text_ctx = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->text_ctx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->text_ctx(static_cast<int>(i)), deterministic, target);
  }

  // .lightstep.BasicTracerCarrier basic_ctx = 2;
  if (this->has_basic_ctx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->basic_ctx_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.BinaryCarrier)
  return target;
}

size_t BinaryCarrier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.BinaryCarrier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .lightstep.TextCarrierPair text_ctx = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->text_ctx_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->text_ctx(static_cast<int>(i)));
    }
  }

  // .lightstep.BasicTracerCarrier basic_ctx = 2;
  if (this->has_basic_ctx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basic_ctx_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BinaryCarrier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.BinaryCarrier)
  GOOGLE_DCHECK_NE(&from, this);
  const BinaryCarrier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BinaryCarrier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.BinaryCarrier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.BinaryCarrier)
    MergeFrom(*source);
  }
}

void BinaryCarrier::MergeFrom(const BinaryCarrier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.BinaryCarrier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  text_ctx_.MergeFrom(from.text_ctx_);
  if (from.has_basic_ctx()) {
    mutable_basic_ctx()->::lightstep::BasicTracerCarrier::MergeFrom(from.basic_ctx());
  }
}

void BinaryCarrier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.BinaryCarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryCarrier::CopyFrom(const BinaryCarrier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.BinaryCarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinaryCarrier::IsInitialized() const {
  return true;
}

void BinaryCarrier::Swap(BinaryCarrier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinaryCarrier::InternalSwap(BinaryCarrier* other) {
  using std::swap;
  text_ctx_.InternalSwap(&other->text_ctx_);
  swap(basic_ctx_, other->basic_ctx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BinaryCarrier::GetMetadata() const {
  protobuf_lightstep_5fcarrier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightstep_5fcarrier_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BinaryCarrier

// repeated .lightstep.TextCarrierPair text_ctx = 1;
int BinaryCarrier::text_ctx_size() const {
  return text_ctx_.size();
}
void BinaryCarrier::clear_text_ctx() {
  text_ctx_.Clear();
}
const ::lightstep::TextCarrierPair& BinaryCarrier::text_ctx(int index) const {
  // @@protoc_insertion_point(field_get:lightstep.BinaryCarrier.text_ctx)
  return text_ctx_.Get(index);
}
::lightstep::TextCarrierPair* BinaryCarrier::mutable_text_ctx(int index) {
  // @@protoc_insertion_point(field_mutable:lightstep.BinaryCarrier.text_ctx)
  return text_ctx_.Mutable(index);
}
::lightstep::TextCarrierPair* BinaryCarrier::add_text_ctx() {
  // @@protoc_insertion_point(field_add:lightstep.BinaryCarrier.text_ctx)
  return text_ctx_.Add();
}
::google::protobuf::RepeatedPtrField< ::lightstep::TextCarrierPair >*
BinaryCarrier::mutable_text_ctx() {
  // @@protoc_insertion_point(field_mutable_list:lightstep.BinaryCarrier.text_ctx)
  return &text_ctx_;
}
const ::google::protobuf::RepeatedPtrField< ::lightstep::TextCarrierPair >&
BinaryCarrier::text_ctx() const {
  // @@protoc_insertion_point(field_list:lightstep.BinaryCarrier.text_ctx)
  return text_ctx_;
}

// .lightstep.BasicTracerCarrier basic_ctx = 2;
bool BinaryCarrier::has_basic_ctx() const {
  return this != internal_default_instance() && basic_ctx_ != NULL;
}
void BinaryCarrier::clear_basic_ctx() {
  if (GetArenaNoVirtual() == NULL && basic_ctx_ != NULL) delete basic_ctx_;
  basic_ctx_ = NULL;
}
const ::lightstep::BasicTracerCarrier& BinaryCarrier::basic_ctx() const {
  const ::lightstep::BasicTracerCarrier* p = basic_ctx_;
  // @@protoc_insertion_point(field_get:lightstep.BinaryCarrier.basic_ctx)
  return p != NULL ? *p : *reinterpret_cast<const ::lightstep::BasicTracerCarrier*>(
      &::lightstep::_BasicTracerCarrier_default_instance_);
}
::lightstep::BasicTracerCarrier* BinaryCarrier::mutable_basic_ctx() {
  
  if (basic_ctx_ == NULL) {
    basic_ctx_ = new ::lightstep::BasicTracerCarrier;
  }
  // @@protoc_insertion_point(field_mutable:lightstep.BinaryCarrier.basic_ctx)
  return basic_ctx_;
}
::lightstep::BasicTracerCarrier* BinaryCarrier::release_basic_ctx() {
  // @@protoc_insertion_point(field_release:lightstep.BinaryCarrier.basic_ctx)
  
  ::lightstep::BasicTracerCarrier* temp = basic_ctx_;
  basic_ctx_ = NULL;
  return temp;
}
void BinaryCarrier::set_allocated_basic_ctx(::lightstep::BasicTracerCarrier* basic_ctx) {
  delete basic_ctx_;
  basic_ctx_ = basic_ctx;
  if (basic_ctx) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:lightstep.BinaryCarrier.basic_ctx)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

BasicTracerCarrier::BasicTracerCarrier_BaggageItemsEntry::BasicTracerCarrier_BaggageItemsEntry() {}
BasicTracerCarrier::BasicTracerCarrier_BaggageItemsEntry::BasicTracerCarrier_BaggageItemsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata BasicTracerCarrier::BasicTracerCarrier_BaggageItemsEntry::GetMetadata() const {
  protobuf_lightstep_5fcarrier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightstep_5fcarrier_2eproto::file_level_metadata[1];
}
void BasicTracerCarrier::BasicTracerCarrier_BaggageItemsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void BasicTracerCarrier::BasicTracerCarrier_BaggageItemsEntry::MergeFrom(const BasicTracerCarrier_BaggageItemsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicTracerCarrier::kTraceIdFieldNumber;
const int BasicTracerCarrier::kSpanIdFieldNumber;
const int BasicTracerCarrier::kSampledFieldNumber;
const int BasicTracerCarrier::kBaggageItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicTracerCarrier::BasicTracerCarrier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lightstep_5fcarrier_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.BasicTracerCarrier)
}
BasicTracerCarrier::BasicTracerCarrier(const BasicTracerCarrier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  baggage_items_.MergeFrom(from.baggage_items_);
  ::memcpy(&trace_id_, &from.trace_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sampled_) -
    reinterpret_cast<char*>(&trace_id_)) + sizeof(sampled_));
  // @@protoc_insertion_point(copy_constructor:lightstep.BasicTracerCarrier)
}

void BasicTracerCarrier::SharedCtor() {
  ::memset(&trace_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sampled_) -
      reinterpret_cast<char*>(&trace_id_)) + sizeof(sampled_));
  _cached_size_ = 0;
}

BasicTracerCarrier::~BasicTracerCarrier() {
  // @@protoc_insertion_point(destructor:lightstep.BasicTracerCarrier)
  SharedDtor();
}

void BasicTracerCarrier::SharedDtor() {
}

void BasicTracerCarrier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicTracerCarrier::descriptor() {
  protobuf_lightstep_5fcarrier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightstep_5fcarrier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BasicTracerCarrier& BasicTracerCarrier::default_instance() {
  protobuf_lightstep_5fcarrier_2eproto::InitDefaults();
  return *internal_default_instance();
}

BasicTracerCarrier* BasicTracerCarrier::New(::google::protobuf::Arena* arena) const {
  BasicTracerCarrier* n = new BasicTracerCarrier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicTracerCarrier::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.BasicTracerCarrier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  baggage_items_.Clear();
  ::memset(&trace_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sampled_) -
      reinterpret_cast<char*>(&trace_id_)) + sizeof(sampled_));
  _internal_metadata_.Clear();
}

bool BasicTracerCarrier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.BasicTracerCarrier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 trace_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &trace_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 span_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &span_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sampled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sampled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> baggage_items = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          BasicTracerCarrier_BaggageItemsEntry::Parser< ::google::protobuf::internal::MapField<
              BasicTracerCarrier_BaggageItemsEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&baggage_items_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.BasicTracerCarrier.BaggageItemsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.BasicTracerCarrier.BaggageItemsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.BasicTracerCarrier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.BasicTracerCarrier)
  return false;
#undef DO_
}

void BasicTracerCarrier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.BasicTracerCarrier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 trace_id = 1;
  if (this->trace_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->trace_id(), output);
  }

  // fixed64 span_id = 2;
  if (this->span_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->span_id(), output);
  }

  // bool sampled = 3;
  if (this->sampled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->sampled(), output);
  }

  // map<string, string> baggage_items = 4;
  if (!this->baggage_items().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "lightstep.BasicTracerCarrier.BaggageItemsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "lightstep.BasicTracerCarrier.BaggageItemsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->baggage_items().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->baggage_items().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->baggage_items().begin();
          it != this->baggage_items().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BasicTracerCarrier_BaggageItemsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(baggage_items_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BasicTracerCarrier_BaggageItemsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->baggage_items().begin();
          it != this->baggage_items().end(); ++it) {
        entry.reset(baggage_items_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.BasicTracerCarrier)
}

::google::protobuf::uint8* BasicTracerCarrier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.BasicTracerCarrier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 trace_id = 1;
  if (this->trace_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->trace_id(), target);
  }

  // fixed64 span_id = 2;
  if (this->span_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->span_id(), target);
  }

  // bool sampled = 3;
  if (this->sampled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->sampled(), target);
  }

  // map<string, string> baggage_items = 4;
  if (!this->baggage_items().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "lightstep.BasicTracerCarrier.BaggageItemsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "lightstep.BasicTracerCarrier.BaggageItemsEntry.value");
      }
    };

    if (deterministic &&
        this->baggage_items().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->baggage_items().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->baggage_items().begin();
          it != this->baggage_items().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BasicTracerCarrier_BaggageItemsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(baggage_items_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BasicTracerCarrier_BaggageItemsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->baggage_items().begin();
          it != this->baggage_items().end(); ++it) {
        entry.reset(baggage_items_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.BasicTracerCarrier)
  return target;
}

size_t BasicTracerCarrier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.BasicTracerCarrier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> baggage_items = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->baggage_items_size());
  {
    ::google::protobuf::scoped_ptr<BasicTracerCarrier_BaggageItemsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->baggage_items().begin();
        it != this->baggage_items().end(); ++it) {
      entry.reset(baggage_items_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // fixed64 trace_id = 1;
  if (this->trace_id() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 span_id = 2;
  if (this->span_id() != 0) {
    total_size += 1 + 8;
  }

  // bool sampled = 3;
  if (this->sampled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicTracerCarrier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.BasicTracerCarrier)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicTracerCarrier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicTracerCarrier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.BasicTracerCarrier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.BasicTracerCarrier)
    MergeFrom(*source);
  }
}

void BasicTracerCarrier::MergeFrom(const BasicTracerCarrier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.BasicTracerCarrier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  baggage_items_.MergeFrom(from.baggage_items_);
  if (from.trace_id() != 0) {
    set_trace_id(from.trace_id());
  }
  if (from.span_id() != 0) {
    set_span_id(from.span_id());
  }
  if (from.sampled() != 0) {
    set_sampled(from.sampled());
  }
}

void BasicTracerCarrier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.BasicTracerCarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicTracerCarrier::CopyFrom(const BasicTracerCarrier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.BasicTracerCarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicTracerCarrier::IsInitialized() const {
  return true;
}

void BasicTracerCarrier::Swap(BasicTracerCarrier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicTracerCarrier::InternalSwap(BasicTracerCarrier* other) {
  using std::swap;
  baggage_items_.Swap(&other->baggage_items_);
  swap(trace_id_, other->trace_id_);
  swap(span_id_, other->span_id_);
  swap(sampled_, other->sampled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicTracerCarrier::GetMetadata() const {
  protobuf_lightstep_5fcarrier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightstep_5fcarrier_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicTracerCarrier

// fixed64 trace_id = 1;
void BasicTracerCarrier::clear_trace_id() {
  trace_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 BasicTracerCarrier::trace_id() const {
  // @@protoc_insertion_point(field_get:lightstep.BasicTracerCarrier.trace_id)
  return trace_id_;
}
void BasicTracerCarrier::set_trace_id(::google::protobuf::uint64 value) {
  
  trace_id_ = value;
  // @@protoc_insertion_point(field_set:lightstep.BasicTracerCarrier.trace_id)
}

// fixed64 span_id = 2;
void BasicTracerCarrier::clear_span_id() {
  span_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 BasicTracerCarrier::span_id() const {
  // @@protoc_insertion_point(field_get:lightstep.BasicTracerCarrier.span_id)
  return span_id_;
}
void BasicTracerCarrier::set_span_id(::google::protobuf::uint64 value) {
  
  span_id_ = value;
  // @@protoc_insertion_point(field_set:lightstep.BasicTracerCarrier.span_id)
}

// bool sampled = 3;
void BasicTracerCarrier::clear_sampled() {
  sampled_ = false;
}
bool BasicTracerCarrier::sampled() const {
  // @@protoc_insertion_point(field_get:lightstep.BasicTracerCarrier.sampled)
  return sampled_;
}
void BasicTracerCarrier::set_sampled(bool value) {
  
  sampled_ = value;
  // @@protoc_insertion_point(field_set:lightstep.BasicTracerCarrier.sampled)
}

// map<string, string> baggage_items = 4;
int BasicTracerCarrier::baggage_items_size() const {
  return baggage_items_.size();
}
void BasicTracerCarrier::clear_baggage_items() {
  baggage_items_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
BasicTracerCarrier::baggage_items() const {
  // @@protoc_insertion_point(field_map:lightstep.BasicTracerCarrier.baggage_items)
  return baggage_items_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
BasicTracerCarrier::mutable_baggage_items() {
  // @@protoc_insertion_point(field_mutable_map:lightstep.BasicTracerCarrier.baggage_items)
  return baggage_items_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextCarrierPair::kKeyFieldNumber;
const int TextCarrierPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextCarrierPair::TextCarrierPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lightstep_5fcarrier_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lightstep.TextCarrierPair)
}
TextCarrierPair::TextCarrierPair(const TextCarrierPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:lightstep.TextCarrierPair)
}

void TextCarrierPair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TextCarrierPair::~TextCarrierPair() {
  // @@protoc_insertion_point(destructor:lightstep.TextCarrierPair)
  SharedDtor();
}

void TextCarrierPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextCarrierPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextCarrierPair::descriptor() {
  protobuf_lightstep_5fcarrier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightstep_5fcarrier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextCarrierPair& TextCarrierPair::default_instance() {
  protobuf_lightstep_5fcarrier_2eproto::InitDefaults();
  return *internal_default_instance();
}

TextCarrierPair* TextCarrierPair::New(::google::protobuf::Arena* arena) const {
  TextCarrierPair* n = new TextCarrierPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TextCarrierPair::Clear() {
// @@protoc_insertion_point(message_clear_start:lightstep.TextCarrierPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TextCarrierPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lightstep.TextCarrierPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.TextCarrierPair.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lightstep.TextCarrierPair.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lightstep.TextCarrierPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lightstep.TextCarrierPair)
  return false;
#undef DO_
}

void TextCarrierPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lightstep.TextCarrierPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.TextCarrierPair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.TextCarrierPair.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:lightstep.TextCarrierPair)
}

::google::protobuf::uint8* TextCarrierPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lightstep.TextCarrierPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.TextCarrierPair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lightstep.TextCarrierPair.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lightstep.TextCarrierPair)
  return target;
}

size_t TextCarrierPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lightstep.TextCarrierPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextCarrierPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lightstep.TextCarrierPair)
  GOOGLE_DCHECK_NE(&from, this);
  const TextCarrierPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextCarrierPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lightstep.TextCarrierPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lightstep.TextCarrierPair)
    MergeFrom(*source);
  }
}

void TextCarrierPair::MergeFrom(const TextCarrierPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lightstep.TextCarrierPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void TextCarrierPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lightstep.TextCarrierPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextCarrierPair::CopyFrom(const TextCarrierPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lightstep.TextCarrierPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextCarrierPair::IsInitialized() const {
  return true;
}

void TextCarrierPair::Swap(TextCarrierPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextCarrierPair::InternalSwap(TextCarrierPair* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextCarrierPair::GetMetadata() const {
  protobuf_lightstep_5fcarrier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lightstep_5fcarrier_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextCarrierPair

// string key = 1;
void TextCarrierPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TextCarrierPair::key() const {
  // @@protoc_insertion_point(field_get:lightstep.TextCarrierPair.key)
  return key_.GetNoArena();
}
void TextCarrierPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lightstep.TextCarrierPair.key)
}
#if LANG_CXX11
void TextCarrierPair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lightstep.TextCarrierPair.key)
}
#endif
void TextCarrierPair::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lightstep.TextCarrierPair.key)
}
void TextCarrierPair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lightstep.TextCarrierPair.key)
}
::std::string* TextCarrierPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:lightstep.TextCarrierPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TextCarrierPair::release_key() {
  // @@protoc_insertion_point(field_release:lightstep.TextCarrierPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TextCarrierPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:lightstep.TextCarrierPair.key)
}

// string value = 2;
void TextCarrierPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TextCarrierPair::value() const {
  // @@protoc_insertion_point(field_get:lightstep.TextCarrierPair.value)
  return value_.GetNoArena();
}
void TextCarrierPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lightstep.TextCarrierPair.value)
}
#if LANG_CXX11
void TextCarrierPair::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lightstep.TextCarrierPair.value)
}
#endif
void TextCarrierPair::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lightstep.TextCarrierPair.value)
}
void TextCarrierPair::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lightstep.TextCarrierPair.value)
}
::std::string* TextCarrierPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:lightstep.TextCarrierPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TextCarrierPair::release_value() {
  // @@protoc_insertion_point(field_release:lightstep.TextCarrierPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TextCarrierPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:lightstep.TextCarrierPair.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace lightstep

// @@protoc_insertion_point(global_scope)
