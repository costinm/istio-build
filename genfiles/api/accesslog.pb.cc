// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/accesslog.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/accesslog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace envoy {
namespace api {
namespace v2 {
class EnvoyAccessLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnvoyAccessLog> {
} _EnvoyAccessLog_default_instance_;

namespace protobuf_api_2faccesslog_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, request_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, protocol_variant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, response_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, upstream_host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, upstream_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, destination_host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, request_body_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, response_body_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, request_headers_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, response_headers_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, secure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, health_check_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, response_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, user_agent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, referer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, forwarded_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, authority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, response_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, upstream_service_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, original_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, request_headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, response_headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, tls_sni_hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, tls_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvoyAccessLog, tls_cipher_suite_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(EnvoyAccessLog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnvoyAccessLog_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/accesslog.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _EnvoyAccessLog_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  _EnvoyAccessLog_default_instance_.DefaultConstruct();
  _EnvoyAccessLog_default_instance_.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->request_body_bytes_ = const_cast< ::google::protobuf::UInt64Value*>(
      ::google::protobuf::UInt64Value::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->response_body_bytes_ = const_cast< ::google::protobuf::UInt64Value*>(
      ::google::protobuf::UInt64Value::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->request_headers_bytes_ = const_cast< ::google::protobuf::UInt64Value*>(
      ::google::protobuf::UInt64Value::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->response_headers_bytes_ = const_cast< ::google::protobuf::UInt64Value*>(
      ::google::protobuf::UInt64Value::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->secure_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->health_check_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->response_code_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->response_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->upstream_service_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->metadata_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  _EnvoyAccessLog_default_instance_.get_mutable()->tls_cipher_suite_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\023api/accesslog.proto\022\014envoy.api.v2\032\016api"
      "/base.proto\032\036google/protobuf/duration.pr"
      "oto\032\034google/protobuf/struct.proto\032\037googl"
      "e/protobuf/timestamp.proto\032\036google/proto"
      "buf/wrappers.proto\"\325\016\n\016EnvoyAccessLog\022B\n"
      "\016request_method\030\001 \001(\0162*.envoy.api.v2.Env"
      "oyAccessLog.RequestMethod\022.\n\nstart_time\030"
      "\002 \001(\0132\032.google.protobuf.Timestamp\022\?\n\020pro"
      "tocol_variant\030\003 \001(\0162%.envoy.api.v2.Envoy"
      "AccessLog.Protocol\022A\n\016response_flags\030\004 \003"
      "(\0162).envoy.api.v2.EnvoyAccessLog.Respons"
      "eFlag\022\025\n\rupstream_host\030\005 \001(\t\022\030\n\020upstream"
      "_cluster\030\006 \001(\t\022\030\n\020destination_host\030\007 \001(\t"
      "\0228\n\022request_body_bytes\030\010 \001(\0132\034.google.pr"
      "otobuf.UInt64Value\0229\n\023response_body_byte"
      "s\030\t \001(\0132\034.google.protobuf.UInt64Value\022;\n"
      "\025request_headers_bytes\030\n \001(\0132\034.google.pr"
      "otobuf.UInt64Value\022<\n\026response_headers_b"
      "ytes\030\013 \001(\0132\034.google.protobuf.UInt64Value"
      "\022*\n\006secure\030\014 \001(\0132\032.google.protobuf.BoolV"
      "alue\0220\n\014health_check\030\r \001(\0132\032.google.prot"
      "obuf.BoolValue\0223\n\rresponse_code\030\016 \001(\0132\034."
      "google.protobuf.UInt32Value\022\022\n\nuser_agen"
      "t\030\017 \001(\t\022\014\n\004path\030\021 \001(\t\022\017\n\007referer\030\022 \001(\t\022\025"
      "\n\rforwarded_for\030\023 \001(\t\022\022\n\nrequest_id\030\024 \001("
      "\t\022\021\n\tauthority\030\025 \001(\t\0224\n\021response_duratio"
      "n\030\026 \001(\0132\031.google.protobuf.Duration\022<\n\031up"
      "stream_service_duration\030\027 \001(\0132\031.google.p"
      "rotobuf.Duration\022\025\n\roriginal_path\030\030 \001(\t\022"
      ")\n\010metadata\030\031 \001(\0132\027.google.protobuf.Stru"
      "ct\0222\n\017request_headers\030\032 \003(\0132\031.envoy.api."
      "v2.HeaderValue\0223\n\020response_headers\030\033 \003(\013"
      "2\031.envoy.api.v2.HeaderValue\022\030\n\020tls_sni_h"
      "ostname\030\034 \001(\t\022<\n\013tls_version\030\035 \001(\0162\'.env"
      "oy.api.v2.EnvoyAccessLog.TLSVersion\0226\n\020t"
      "ls_cipher_suite\030\036 \001(\0132\034.google.protobuf."
      "UInt32Value\"~\n\rRequestMethod\022\026\n\022METHOD_U"
      "NSPECIFIED\020\000\022\007\n\003GET\020\001\022\010\n\004HEAD\020\002\022\010\n\004POST\020"
      "\003\022\007\n\003PUT\020\004\022\n\n\006DELETE\020\005\022\013\n\007CONNECT\020\006\022\013\n\007O"
      "PTIONS\020\007\022\t\n\005TRACE\020\010\"G\n\010Protocol\022\030\n\024PROTO"
      "COL_UNSPECIFIED\020\000\022\n\n\006HTTP10\020\001\022\n\n\006HTTP11\020"
      "\002\022\t\n\005HTTP2\020\003\"\272\002\n\014ResponseFlag\022\034\n\030FAILED_"
      "LOCAL_HEALTHCHECK\020\000\022\027\n\023NO_HEALTHY_UPSTRE"
      "AM\020\001\022\034\n\030UPSTREAM_REQUEST_TIMEOUT\020\002\022\017\n\013LO"
      "CAL_RESET\020\003\022\031\n\025UPSTREAM_REMOTE_RESET\020\004\022\037"
      "\n\033UPSTREAM_CONNECTION_FAILURE\020\005\022#\n\037UPSTR"
      "EAM_CONNECTION_TERMINATION\020\006\022\025\n\021UPSTREAM"
      "_OVERFLOW\020\007\022\022\n\016NO_ROUTE_FOUND\020\010\022\022\n\016DELAY"
      "_INJECTED\020\t\022\022\n\016FAULT_INJECTED\020\n\022\020\n\014RATE_"
      "LIMITED\020\013\"W\n\nTLSVersion\022\027\n\023VERSION_UNSPE"
      "CIFIED\020\000\022\t\n\005TLSv1\020\001\022\013\n\007TLSv1_1\020\002\022\013\n\007TLSv"
      "1_2\020\003\022\013\n\007TLSv1_3\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2066);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/accesslog.proto", &protobuf_RegisterTypes);
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2faccesslog_2eproto

const ::google::protobuf::EnumDescriptor* EnvoyAccessLog_RequestMethod_descriptor() {
  protobuf_api_2faccesslog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2faccesslog_2eproto::file_level_enum_descriptors[0];
}
bool EnvoyAccessLog_RequestMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::METHOD_UNSPECIFIED;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::GET;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::HEAD;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::POST;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::PUT;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::DELETE;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::CONNECT;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::OPTIONS;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::TRACE;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::RequestMethod_MIN;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog::RequestMethod_MAX;
const int EnvoyAccessLog::RequestMethod_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnvoyAccessLog_Protocol_descriptor() {
  protobuf_api_2faccesslog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2faccesslog_2eproto::file_level_enum_descriptors[1];
}
bool EnvoyAccessLog_Protocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnvoyAccessLog_Protocol EnvoyAccessLog::PROTOCOL_UNSPECIFIED;
const EnvoyAccessLog_Protocol EnvoyAccessLog::HTTP10;
const EnvoyAccessLog_Protocol EnvoyAccessLog::HTTP11;
const EnvoyAccessLog_Protocol EnvoyAccessLog::HTTP2;
const EnvoyAccessLog_Protocol EnvoyAccessLog::Protocol_MIN;
const EnvoyAccessLog_Protocol EnvoyAccessLog::Protocol_MAX;
const int EnvoyAccessLog::Protocol_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnvoyAccessLog_ResponseFlag_descriptor() {
  protobuf_api_2faccesslog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2faccesslog_2eproto::file_level_enum_descriptors[2];
}
bool EnvoyAccessLog_ResponseFlag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::FAILED_LOCAL_HEALTHCHECK;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::NO_HEALTHY_UPSTREAM;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::UPSTREAM_REQUEST_TIMEOUT;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::LOCAL_RESET;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::UPSTREAM_REMOTE_RESET;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::UPSTREAM_CONNECTION_FAILURE;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::UPSTREAM_CONNECTION_TERMINATION;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::UPSTREAM_OVERFLOW;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::NO_ROUTE_FOUND;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::DELAY_INJECTED;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::FAULT_INJECTED;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::RATE_LIMITED;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::ResponseFlag_MIN;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog::ResponseFlag_MAX;
const int EnvoyAccessLog::ResponseFlag_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnvoyAccessLog_TLSVersion_descriptor() {
  protobuf_api_2faccesslog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2faccesslog_2eproto::file_level_enum_descriptors[3];
}
bool EnvoyAccessLog_TLSVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnvoyAccessLog_TLSVersion EnvoyAccessLog::VERSION_UNSPECIFIED;
const EnvoyAccessLog_TLSVersion EnvoyAccessLog::TLSv1;
const EnvoyAccessLog_TLSVersion EnvoyAccessLog::TLSv1_1;
const EnvoyAccessLog_TLSVersion EnvoyAccessLog::TLSv1_2;
const EnvoyAccessLog_TLSVersion EnvoyAccessLog::TLSv1_3;
const EnvoyAccessLog_TLSVersion EnvoyAccessLog::TLSVersion_MIN;
const EnvoyAccessLog_TLSVersion EnvoyAccessLog::TLSVersion_MAX;
const int EnvoyAccessLog::TLSVersion_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnvoyAccessLog::kRequestMethodFieldNumber;
const int EnvoyAccessLog::kStartTimeFieldNumber;
const int EnvoyAccessLog::kProtocolVariantFieldNumber;
const int EnvoyAccessLog::kResponseFlagsFieldNumber;
const int EnvoyAccessLog::kUpstreamHostFieldNumber;
const int EnvoyAccessLog::kUpstreamClusterFieldNumber;
const int EnvoyAccessLog::kDestinationHostFieldNumber;
const int EnvoyAccessLog::kRequestBodyBytesFieldNumber;
const int EnvoyAccessLog::kResponseBodyBytesFieldNumber;
const int EnvoyAccessLog::kRequestHeadersBytesFieldNumber;
const int EnvoyAccessLog::kResponseHeadersBytesFieldNumber;
const int EnvoyAccessLog::kSecureFieldNumber;
const int EnvoyAccessLog::kHealthCheckFieldNumber;
const int EnvoyAccessLog::kResponseCodeFieldNumber;
const int EnvoyAccessLog::kUserAgentFieldNumber;
const int EnvoyAccessLog::kPathFieldNumber;
const int EnvoyAccessLog::kRefererFieldNumber;
const int EnvoyAccessLog::kForwardedForFieldNumber;
const int EnvoyAccessLog::kRequestIdFieldNumber;
const int EnvoyAccessLog::kAuthorityFieldNumber;
const int EnvoyAccessLog::kResponseDurationFieldNumber;
const int EnvoyAccessLog::kUpstreamServiceDurationFieldNumber;
const int EnvoyAccessLog::kOriginalPathFieldNumber;
const int EnvoyAccessLog::kMetadataFieldNumber;
const int EnvoyAccessLog::kRequestHeadersFieldNumber;
const int EnvoyAccessLog::kResponseHeadersFieldNumber;
const int EnvoyAccessLog::kTlsSniHostnameFieldNumber;
const int EnvoyAccessLog::kTlsVersionFieldNumber;
const int EnvoyAccessLog::kTlsCipherSuiteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnvoyAccessLog::EnvoyAccessLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2faccesslog_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.EnvoyAccessLog)
}
EnvoyAccessLog::EnvoyAccessLog(const EnvoyAccessLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      response_flags_(from.response_flags_),
      request_headers_(from.request_headers_),
      response_headers_(from.response_headers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  upstream_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.upstream_host().size() > 0) {
    upstream_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upstream_host_);
  }
  upstream_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.upstream_cluster().size() > 0) {
    upstream_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upstream_cluster_);
  }
  destination_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destination_host().size() > 0) {
    destination_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_host_);
  }
  user_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_agent().size() > 0) {
    user_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_agent_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  referer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.referer().size() > 0) {
    referer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referer_);
  }
  forwarded_for_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.forwarded_for().size() > 0) {
    forwarded_for_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forwarded_for_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  authority_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.authority().size() > 0) {
    authority_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authority_);
  }
  original_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_path().size() > 0) {
    original_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_path_);
  }
  tls_sni_hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tls_sni_hostname().size() > 0) {
    tls_sni_hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tls_sni_hostname_);
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_request_body_bytes()) {
    request_body_bytes_ = new ::google::protobuf::UInt64Value(*from.request_body_bytes_);
  } else {
    request_body_bytes_ = NULL;
  }
  if (from.has_response_body_bytes()) {
    response_body_bytes_ = new ::google::protobuf::UInt64Value(*from.response_body_bytes_);
  } else {
    response_body_bytes_ = NULL;
  }
  if (from.has_request_headers_bytes()) {
    request_headers_bytes_ = new ::google::protobuf::UInt64Value(*from.request_headers_bytes_);
  } else {
    request_headers_bytes_ = NULL;
  }
  if (from.has_response_headers_bytes()) {
    response_headers_bytes_ = new ::google::protobuf::UInt64Value(*from.response_headers_bytes_);
  } else {
    response_headers_bytes_ = NULL;
  }
  if (from.has_secure()) {
    secure_ = new ::google::protobuf::BoolValue(*from.secure_);
  } else {
    secure_ = NULL;
  }
  if (from.has_health_check()) {
    health_check_ = new ::google::protobuf::BoolValue(*from.health_check_);
  } else {
    health_check_ = NULL;
  }
  if (from.has_response_code()) {
    response_code_ = new ::google::protobuf::UInt32Value(*from.response_code_);
  } else {
    response_code_ = NULL;
  }
  if (from.has_response_duration()) {
    response_duration_ = new ::google::protobuf::Duration(*from.response_duration_);
  } else {
    response_duration_ = NULL;
  }
  if (from.has_upstream_service_duration()) {
    upstream_service_duration_ = new ::google::protobuf::Duration(*from.upstream_service_duration_);
  } else {
    upstream_service_duration_ = NULL;
  }
  if (from.has_metadata()) {
    metadata_ = new ::google::protobuf::Struct(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_tls_cipher_suite()) {
    tls_cipher_suite_ = new ::google::protobuf::UInt32Value(*from.tls_cipher_suite_);
  } else {
    tls_cipher_suite_ = NULL;
  }
  ::memcpy(&request_method_, &from.request_method_,
    reinterpret_cast<char*>(&tls_version_) -
    reinterpret_cast<char*>(&request_method_) + sizeof(tls_version_));
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.EnvoyAccessLog)
}

void EnvoyAccessLog::SharedCtor() {
  upstream_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upstream_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forwarded_for_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authority_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tls_sni_hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, reinterpret_cast<char*>(&tls_version_) -
    reinterpret_cast<char*>(&start_time_) + sizeof(tls_version_));
  _cached_size_ = 0;
}

EnvoyAccessLog::~EnvoyAccessLog() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.EnvoyAccessLog)
  SharedDtor();
}

void EnvoyAccessLog::SharedDtor() {
  upstream_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upstream_cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forwarded_for_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authority_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tls_sni_hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete start_time_;
  }
  if (this != internal_default_instance()) {
    delete request_body_bytes_;
  }
  if (this != internal_default_instance()) {
    delete response_body_bytes_;
  }
  if (this != internal_default_instance()) {
    delete request_headers_bytes_;
  }
  if (this != internal_default_instance()) {
    delete response_headers_bytes_;
  }
  if (this != internal_default_instance()) {
    delete secure_;
  }
  if (this != internal_default_instance()) {
    delete health_check_;
  }
  if (this != internal_default_instance()) {
    delete response_code_;
  }
  if (this != internal_default_instance()) {
    delete response_duration_;
  }
  if (this != internal_default_instance()) {
    delete upstream_service_duration_;
  }
  if (this != internal_default_instance()) {
    delete metadata_;
  }
  if (this != internal_default_instance()) {
    delete tls_cipher_suite_;
  }
}

void EnvoyAccessLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnvoyAccessLog::descriptor() {
  protobuf_api_2faccesslog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2faccesslog_2eproto::file_level_metadata[0].descriptor;
}

const EnvoyAccessLog& EnvoyAccessLog::default_instance() {
  protobuf_api_2faccesslog_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnvoyAccessLog* EnvoyAccessLog::New(::google::protobuf::Arena* arena) const {
  EnvoyAccessLog* n = new EnvoyAccessLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnvoyAccessLog::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.EnvoyAccessLog)
  response_flags_.Clear();
  request_headers_.Clear();
  response_headers_.Clear();
  upstream_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upstream_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forwarded_for_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authority_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tls_sni_hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_body_bytes_ != NULL) {
    delete request_body_bytes_;
  }
  request_body_bytes_ = NULL;
  if (GetArenaNoVirtual() == NULL && response_body_bytes_ != NULL) {
    delete response_body_bytes_;
  }
  response_body_bytes_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_headers_bytes_ != NULL) {
    delete request_headers_bytes_;
  }
  request_headers_bytes_ = NULL;
  if (GetArenaNoVirtual() == NULL && response_headers_bytes_ != NULL) {
    delete response_headers_bytes_;
  }
  response_headers_bytes_ = NULL;
  if (GetArenaNoVirtual() == NULL && secure_ != NULL) {
    delete secure_;
  }
  secure_ = NULL;
  if (GetArenaNoVirtual() == NULL && health_check_ != NULL) {
    delete health_check_;
  }
  health_check_ = NULL;
  if (GetArenaNoVirtual() == NULL && response_code_ != NULL) {
    delete response_code_;
  }
  response_code_ = NULL;
  if (GetArenaNoVirtual() == NULL && response_duration_ != NULL) {
    delete response_duration_;
  }
  response_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && upstream_service_duration_ != NULL) {
    delete upstream_service_duration_;
  }
  upstream_service_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && tls_cipher_suite_ != NULL) {
    delete tls_cipher_suite_;
  }
  tls_cipher_suite_ = NULL;
  ::memset(&request_method_, 0, reinterpret_cast<char*>(&tls_version_) -
    reinterpret_cast<char*>(&request_method_) + sizeof(tls_version_));
}

bool EnvoyAccessLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.EnvoyAccessLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.EnvoyAccessLog.RequestMethod request_method = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_request_method(static_cast< ::envoy::api::v2::EnvoyAccessLog_RequestMethod >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.EnvoyAccessLog.Protocol protocol_variant = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol_variant(static_cast< ::envoy::api::v2::EnvoyAccessLog_Protocol >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.EnvoyAccessLog.ResponseFlag response_flags = 4;
      case 4: {
        if (tag == 34u) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_response_flags(static_cast< ::envoy::api::v2::EnvoyAccessLog_ResponseFlag >(value));
          }
          input->PopLimit(limit);
        } else if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_response_flags(static_cast< ::envoy::api::v2::EnvoyAccessLog_ResponseFlag >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string upstream_host = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upstream_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->upstream_host().data(), this->upstream_host().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.upstream_host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string upstream_cluster = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upstream_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->upstream_cluster().data(), this->upstream_cluster().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.upstream_cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination_host = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination_host().data(), this->destination_host().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.destination_host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt64Value request_body_bytes = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_body_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt64Value response_body_bytes = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_body_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt64Value request_headers_bytes = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_headers_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt64Value response_headers_bytes = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_headers_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue secure = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_secure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue health_check = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_health_check()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value response_code = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_agent = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_agent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_agent().data(), this->user_agent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.user_agent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 17;
      case 17: {
        if (tag == 138u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string referer = 18;
      case 18: {
        if (tag == 146u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->referer().data(), this->referer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.referer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string forwarded_for = 19;
      case 19: {
        if (tag == 154u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_forwarded_for()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->forwarded_for().data(), this->forwarded_for().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.forwarded_for"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_id = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string authority = 21;
      case 21: {
        if (tag == 170u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authority()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authority().data(), this->authority().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.authority"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration response_duration = 22;
      case 22: {
        if (tag == 178u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration upstream_service_duration = 23;
      case 23: {
        if (tag == 186u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_upstream_service_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_path = 24;
      case 24: {
        if (tag == 194u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_path().data(), this->original_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.original_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct metadata = 25;
      case 25: {
        if (tag == 202u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.HeaderValue request_headers = 26;
      case 26: {
        if (tag == 210u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_request_headers()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .envoy.api.v2.HeaderValue response_headers = 27;
      case 27: {
        if (tag == 218u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_response_headers()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string tls_sni_hostname = 28;
      case 28: {
        if (tag == 226u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tls_sni_hostname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tls_sni_hostname().data(), this->tls_sni_hostname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EnvoyAccessLog.tls_sni_hostname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.EnvoyAccessLog.TLSVersion tls_version = 29;
      case 29: {
        if (tag == 232u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tls_version(static_cast< ::envoy::api::v2::EnvoyAccessLog_TLSVersion >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value tls_cipher_suite = 30;
      case 30: {
        if (tag == 242u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tls_cipher_suite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.EnvoyAccessLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.EnvoyAccessLog)
  return false;
#undef DO_
}

void EnvoyAccessLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.EnvoyAccessLog)
  // .envoy.api.v2.EnvoyAccessLog.RequestMethod request_method = 1;
  if (this->request_method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->request_method(), output);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->start_time_, output);
  }

  // .envoy.api.v2.EnvoyAccessLog.Protocol protocol_variant = 3;
  if (this->protocol_variant() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->protocol_variant(), output);
  }

  // repeated .envoy.api.v2.EnvoyAccessLog.ResponseFlag response_flags = 4;
  if (this->response_flags_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_response_flags_cached_byte_size_);
  }
  for (int i = 0; i < this->response_flags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->response_flags(i), output);
  }

  // string upstream_host = 5;
  if (this->upstream_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upstream_host().data(), this->upstream_host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.upstream_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->upstream_host(), output);
  }

  // string upstream_cluster = 6;
  if (this->upstream_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upstream_cluster().data(), this->upstream_cluster().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.upstream_cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->upstream_cluster(), output);
  }

  // string destination_host = 7;
  if (this->destination_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_host().data(), this->destination_host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.destination_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->destination_host(), output);
  }

  // .google.protobuf.UInt64Value request_body_bytes = 8;
  if (this->has_request_body_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->request_body_bytes_, output);
  }

  // .google.protobuf.UInt64Value response_body_bytes = 9;
  if (this->has_response_body_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->response_body_bytes_, output);
  }

  // .google.protobuf.UInt64Value request_headers_bytes = 10;
  if (this->has_request_headers_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->request_headers_bytes_, output);
  }

  // .google.protobuf.UInt64Value response_headers_bytes = 11;
  if (this->has_response_headers_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->response_headers_bytes_, output);
  }

  // .google.protobuf.BoolValue secure = 12;
  if (this->has_secure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->secure_, output);
  }

  // .google.protobuf.BoolValue health_check = 13;
  if (this->has_health_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->health_check_, output);
  }

  // .google.protobuf.UInt32Value response_code = 14;
  if (this->has_response_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->response_code_, output);
  }

  // string user_agent = 15;
  if (this->user_agent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_agent().data(), this->user_agent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.user_agent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->user_agent(), output);
  }

  // string path = 17;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->path(), output);
  }

  // string referer = 18;
  if (this->referer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referer().data(), this->referer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.referer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->referer(), output);
  }

  // string forwarded_for = 19;
  if (this->forwarded_for().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forwarded_for().data(), this->forwarded_for().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.forwarded_for");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->forwarded_for(), output);
  }

  // string request_id = 20;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->request_id(), output);
  }

  // string authority = 21;
  if (this->authority().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authority().data(), this->authority().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.authority");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->authority(), output);
  }

  // .google.protobuf.Duration response_duration = 22;
  if (this->has_response_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->response_duration_, output);
  }

  // .google.protobuf.Duration upstream_service_duration = 23;
  if (this->has_upstream_service_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->upstream_service_duration_, output);
  }

  // string original_path = 24;
  if (this->original_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_path().data(), this->original_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.original_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->original_path(), output);
  }

  // .google.protobuf.Struct metadata = 25;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->metadata_, output);
  }

  // repeated .envoy.api.v2.HeaderValue request_headers = 26;
  for (unsigned int i = 0, n = this->request_headers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->request_headers(i), output);
  }

  // repeated .envoy.api.v2.HeaderValue response_headers = 27;
  for (unsigned int i = 0, n = this->response_headers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->response_headers(i), output);
  }

  // string tls_sni_hostname = 28;
  if (this->tls_sni_hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tls_sni_hostname().data(), this->tls_sni_hostname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.tls_sni_hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->tls_sni_hostname(), output);
  }

  // .envoy.api.v2.EnvoyAccessLog.TLSVersion tls_version = 29;
  if (this->tls_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      29, this->tls_version(), output);
  }

  // .google.protobuf.UInt32Value tls_cipher_suite = 30;
  if (this->has_tls_cipher_suite()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->tls_cipher_suite_, output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.EnvoyAccessLog)
}

::google::protobuf::uint8* EnvoyAccessLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.EnvoyAccessLog)
  // .envoy.api.v2.EnvoyAccessLog.RequestMethod request_method = 1;
  if (this->request_method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->request_method(), target);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->start_time_, false, target);
  }

  // .envoy.api.v2.EnvoyAccessLog.Protocol protocol_variant = 3;
  if (this->protocol_variant() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->protocol_variant(), target);
  }

  // repeated .envoy.api.v2.EnvoyAccessLog.ResponseFlag response_flags = 4;
  if (this->response_flags_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _response_flags_cached_byte_size_, target);
  }
  for (int i = 0; i < this->response_flags_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->response_flags(i), target);
  }

  // string upstream_host = 5;
  if (this->upstream_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upstream_host().data(), this->upstream_host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.upstream_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->upstream_host(), target);
  }

  // string upstream_cluster = 6;
  if (this->upstream_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upstream_cluster().data(), this->upstream_cluster().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.upstream_cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->upstream_cluster(), target);
  }

  // string destination_host = 7;
  if (this->destination_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_host().data(), this->destination_host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.destination_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->destination_host(), target);
  }

  // .google.protobuf.UInt64Value request_body_bytes = 8;
  if (this->has_request_body_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->request_body_bytes_, false, target);
  }

  // .google.protobuf.UInt64Value response_body_bytes = 9;
  if (this->has_response_body_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->response_body_bytes_, false, target);
  }

  // .google.protobuf.UInt64Value request_headers_bytes = 10;
  if (this->has_request_headers_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->request_headers_bytes_, false, target);
  }

  // .google.protobuf.UInt64Value response_headers_bytes = 11;
  if (this->has_response_headers_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->response_headers_bytes_, false, target);
  }

  // .google.protobuf.BoolValue secure = 12;
  if (this->has_secure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->secure_, false, target);
  }

  // .google.protobuf.BoolValue health_check = 13;
  if (this->has_health_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->health_check_, false, target);
  }

  // .google.protobuf.UInt32Value response_code = 14;
  if (this->has_response_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->response_code_, false, target);
  }

  // string user_agent = 15;
  if (this->user_agent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_agent().data(), this->user_agent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.user_agent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->user_agent(), target);
  }

  // string path = 17;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->path(), target);
  }

  // string referer = 18;
  if (this->referer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referer().data(), this->referer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.referer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->referer(), target);
  }

  // string forwarded_for = 19;
  if (this->forwarded_for().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forwarded_for().data(), this->forwarded_for().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.forwarded_for");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->forwarded_for(), target);
  }

  // string request_id = 20;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->request_id(), target);
  }

  // string authority = 21;
  if (this->authority().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authority().data(), this->authority().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.authority");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->authority(), target);
  }

  // .google.protobuf.Duration response_duration = 22;
  if (this->has_response_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->response_duration_, false, target);
  }

  // .google.protobuf.Duration upstream_service_duration = 23;
  if (this->has_upstream_service_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->upstream_service_duration_, false, target);
  }

  // string original_path = 24;
  if (this->original_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_path().data(), this->original_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.original_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->original_path(), target);
  }

  // .google.protobuf.Struct metadata = 25;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->metadata_, false, target);
  }

  // repeated .envoy.api.v2.HeaderValue request_headers = 26;
  for (unsigned int i = 0, n = this->request_headers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, this->request_headers(i), false, target);
  }

  // repeated .envoy.api.v2.HeaderValue response_headers = 27;
  for (unsigned int i = 0, n = this->response_headers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, this->response_headers(i), false, target);
  }

  // string tls_sni_hostname = 28;
  if (this->tls_sni_hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tls_sni_hostname().data(), this->tls_sni_hostname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EnvoyAccessLog.tls_sni_hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->tls_sni_hostname(), target);
  }

  // .envoy.api.v2.EnvoyAccessLog.TLSVersion tls_version = 29;
  if (this->tls_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      29, this->tls_version(), target);
  }

  // .google.protobuf.UInt32Value tls_cipher_suite = 30;
  if (this->has_tls_cipher_suite()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->tls_cipher_suite_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.EnvoyAccessLog)
  return target;
}

size_t EnvoyAccessLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.EnvoyAccessLog)
  size_t total_size = 0;

  // repeated .envoy.api.v2.EnvoyAccessLog.ResponseFlag response_flags = 4;
  {
    size_t data_size = 0;
    unsigned int count = this->response_flags_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->response_flags(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _response_flags_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .envoy.api.v2.HeaderValue request_headers = 26;
  {
    unsigned int count = this->request_headers_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request_headers(i));
    }
  }

  // repeated .envoy.api.v2.HeaderValue response_headers = 27;
  {
    unsigned int count = this->response_headers_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response_headers(i));
    }
  }

  // string upstream_host = 5;
  if (this->upstream_host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upstream_host());
  }

  // string upstream_cluster = 6;
  if (this->upstream_cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upstream_cluster());
  }

  // string destination_host = 7;
  if (this->destination_host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_host());
  }

  // string user_agent = 15;
  if (this->user_agent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_agent());
  }

  // string path = 17;
  if (this->path().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string referer = 18;
  if (this->referer().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->referer());
  }

  // string forwarded_for = 19;
  if (this->forwarded_for().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->forwarded_for());
  }

  // string request_id = 20;
  if (this->request_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string authority = 21;
  if (this->authority().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authority());
  }

  // string original_path = 24;
  if (this->original_path().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_path());
  }

  // string tls_sni_hostname = 28;
  if (this->tls_sni_hostname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tls_sni_hostname());
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // .google.protobuf.UInt64Value request_body_bytes = 8;
  if (this->has_request_body_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_body_bytes_);
  }

  // .google.protobuf.UInt64Value response_body_bytes = 9;
  if (this->has_response_body_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->response_body_bytes_);
  }

  // .google.protobuf.UInt64Value request_headers_bytes = 10;
  if (this->has_request_headers_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_headers_bytes_);
  }

  // .google.protobuf.UInt64Value response_headers_bytes = 11;
  if (this->has_response_headers_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->response_headers_bytes_);
  }

  // .google.protobuf.BoolValue secure = 12;
  if (this->has_secure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->secure_);
  }

  // .google.protobuf.BoolValue health_check = 13;
  if (this->has_health_check()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->health_check_);
  }

  // .google.protobuf.UInt32Value response_code = 14;
  if (this->has_response_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->response_code_);
  }

  // .google.protobuf.Duration response_duration = 22;
  if (this->has_response_duration()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->response_duration_);
  }

  // .google.protobuf.Duration upstream_service_duration = 23;
  if (this->has_upstream_service_duration()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->upstream_service_duration_);
  }

  // .google.protobuf.Struct metadata = 25;
  if (this->has_metadata()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metadata_);
  }

  // .google.protobuf.UInt32Value tls_cipher_suite = 30;
  if (this->has_tls_cipher_suite()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tls_cipher_suite_);
  }

  // .envoy.api.v2.EnvoyAccessLog.RequestMethod request_method = 1;
  if (this->request_method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_method());
  }

  // .envoy.api.v2.EnvoyAccessLog.Protocol protocol_variant = 3;
  if (this->protocol_variant() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol_variant());
  }

  // .envoy.api.v2.EnvoyAccessLog.TLSVersion tls_version = 29;
  if (this->tls_version() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tls_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnvoyAccessLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.EnvoyAccessLog)
  GOOGLE_DCHECK_NE(&from, this);
  const EnvoyAccessLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnvoyAccessLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.EnvoyAccessLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.EnvoyAccessLog)
    MergeFrom(*source);
  }
}

void EnvoyAccessLog::MergeFrom(const EnvoyAccessLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.EnvoyAccessLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_flags_.MergeFrom(from.response_flags_);
  request_headers_.MergeFrom(from.request_headers_);
  response_headers_.MergeFrom(from.response_headers_);
  if (from.upstream_host().size() > 0) {

    upstream_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upstream_host_);
  }
  if (from.upstream_cluster().size() > 0) {

    upstream_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upstream_cluster_);
  }
  if (from.destination_host().size() > 0) {

    destination_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_host_);
  }
  if (from.user_agent().size() > 0) {

    user_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_agent_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.referer().size() > 0) {

    referer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referer_);
  }
  if (from.forwarded_for().size() > 0) {

    forwarded_for_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forwarded_for_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.authority().size() > 0) {

    authority_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authority_);
  }
  if (from.original_path().size() > 0) {

    original_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_path_);
  }
  if (from.tls_sni_hostname().size() > 0) {

    tls_sni_hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tls_sni_hostname_);
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_request_body_bytes()) {
    mutable_request_body_bytes()->::google::protobuf::UInt64Value::MergeFrom(from.request_body_bytes());
  }
  if (from.has_response_body_bytes()) {
    mutable_response_body_bytes()->::google::protobuf::UInt64Value::MergeFrom(from.response_body_bytes());
  }
  if (from.has_request_headers_bytes()) {
    mutable_request_headers_bytes()->::google::protobuf::UInt64Value::MergeFrom(from.request_headers_bytes());
  }
  if (from.has_response_headers_bytes()) {
    mutable_response_headers_bytes()->::google::protobuf::UInt64Value::MergeFrom(from.response_headers_bytes());
  }
  if (from.has_secure()) {
    mutable_secure()->::google::protobuf::BoolValue::MergeFrom(from.secure());
  }
  if (from.has_health_check()) {
    mutable_health_check()->::google::protobuf::BoolValue::MergeFrom(from.health_check());
  }
  if (from.has_response_code()) {
    mutable_response_code()->::google::protobuf::UInt32Value::MergeFrom(from.response_code());
  }
  if (from.has_response_duration()) {
    mutable_response_duration()->::google::protobuf::Duration::MergeFrom(from.response_duration());
  }
  if (from.has_upstream_service_duration()) {
    mutable_upstream_service_duration()->::google::protobuf::Duration::MergeFrom(from.upstream_service_duration());
  }
  if (from.has_metadata()) {
    mutable_metadata()->::google::protobuf::Struct::MergeFrom(from.metadata());
  }
  if (from.has_tls_cipher_suite()) {
    mutable_tls_cipher_suite()->::google::protobuf::UInt32Value::MergeFrom(from.tls_cipher_suite());
  }
  if (from.request_method() != 0) {
    set_request_method(from.request_method());
  }
  if (from.protocol_variant() != 0) {
    set_protocol_variant(from.protocol_variant());
  }
  if (from.tls_version() != 0) {
    set_tls_version(from.tls_version());
  }
}

void EnvoyAccessLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.EnvoyAccessLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvoyAccessLog::CopyFrom(const EnvoyAccessLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.EnvoyAccessLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvoyAccessLog::IsInitialized() const {
  return true;
}

void EnvoyAccessLog::Swap(EnvoyAccessLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnvoyAccessLog::InternalSwap(EnvoyAccessLog* other) {
  response_flags_.UnsafeArenaSwap(&other->response_flags_);
  request_headers_.UnsafeArenaSwap(&other->request_headers_);
  response_headers_.UnsafeArenaSwap(&other->response_headers_);
  upstream_host_.Swap(&other->upstream_host_);
  upstream_cluster_.Swap(&other->upstream_cluster_);
  destination_host_.Swap(&other->destination_host_);
  user_agent_.Swap(&other->user_agent_);
  path_.Swap(&other->path_);
  referer_.Swap(&other->referer_);
  forwarded_for_.Swap(&other->forwarded_for_);
  request_id_.Swap(&other->request_id_);
  authority_.Swap(&other->authority_);
  original_path_.Swap(&other->original_path_);
  tls_sni_hostname_.Swap(&other->tls_sni_hostname_);
  std::swap(start_time_, other->start_time_);
  std::swap(request_body_bytes_, other->request_body_bytes_);
  std::swap(response_body_bytes_, other->response_body_bytes_);
  std::swap(request_headers_bytes_, other->request_headers_bytes_);
  std::swap(response_headers_bytes_, other->response_headers_bytes_);
  std::swap(secure_, other->secure_);
  std::swap(health_check_, other->health_check_);
  std::swap(response_code_, other->response_code_);
  std::swap(response_duration_, other->response_duration_);
  std::swap(upstream_service_duration_, other->upstream_service_duration_);
  std::swap(metadata_, other->metadata_);
  std::swap(tls_cipher_suite_, other->tls_cipher_suite_);
  std::swap(request_method_, other->request_method_);
  std::swap(protocol_variant_, other->protocol_variant_);
  std::swap(tls_version_, other->tls_version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnvoyAccessLog::GetMetadata() const {
  protobuf_api_2faccesslog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2faccesslog_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnvoyAccessLog

// .envoy.api.v2.EnvoyAccessLog.RequestMethod request_method = 1;
void EnvoyAccessLog::clear_request_method() {
  request_method_ = 0;
}
::envoy::api::v2::EnvoyAccessLog_RequestMethod EnvoyAccessLog::request_method() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_method)
  return static_cast< ::envoy::api::v2::EnvoyAccessLog_RequestMethod >(request_method_);
}
void EnvoyAccessLog::set_request_method(::envoy::api::v2::EnvoyAccessLog_RequestMethod value) {
  
  request_method_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.request_method)
}

// .google.protobuf.Timestamp start_time = 2;
bool EnvoyAccessLog::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void EnvoyAccessLog::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& EnvoyAccessLog::start_time() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* EnvoyAccessLog::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* EnvoyAccessLog::release_start_time() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.start_time)
}

// .envoy.api.v2.EnvoyAccessLog.Protocol protocol_variant = 3;
void EnvoyAccessLog::clear_protocol_variant() {
  protocol_variant_ = 0;
}
::envoy::api::v2::EnvoyAccessLog_Protocol EnvoyAccessLog::protocol_variant() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.protocol_variant)
  return static_cast< ::envoy::api::v2::EnvoyAccessLog_Protocol >(protocol_variant_);
}
void EnvoyAccessLog::set_protocol_variant(::envoy::api::v2::EnvoyAccessLog_Protocol value) {
  
  protocol_variant_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.protocol_variant)
}

// repeated .envoy.api.v2.EnvoyAccessLog.ResponseFlag response_flags = 4;
int EnvoyAccessLog::response_flags_size() const {
  return response_flags_.size();
}
void EnvoyAccessLog::clear_response_flags() {
  response_flags_.Clear();
}
::envoy::api::v2::EnvoyAccessLog_ResponseFlag EnvoyAccessLog::response_flags(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_flags)
  return static_cast< ::envoy::api::v2::EnvoyAccessLog_ResponseFlag >(response_flags_.Get(index));
}
void EnvoyAccessLog::set_response_flags(int index, ::envoy::api::v2::EnvoyAccessLog_ResponseFlag value) {
  response_flags_.Set(index, value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.response_flags)
}
void EnvoyAccessLog::add_response_flags(::envoy::api::v2::EnvoyAccessLog_ResponseFlag value) {
  response_flags_.Add(value);
  // @@protoc_insertion_point(field_add:envoy.api.v2.EnvoyAccessLog.response_flags)
}
const ::google::protobuf::RepeatedField<int>&
EnvoyAccessLog::response_flags() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.EnvoyAccessLog.response_flags)
  return response_flags_;
}
::google::protobuf::RepeatedField<int>*
EnvoyAccessLog::mutable_response_flags() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.EnvoyAccessLog.response_flags)
  return &response_flags_;
}

// string upstream_host = 5;
void EnvoyAccessLog::clear_upstream_host() {
  upstream_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::upstream_host() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.upstream_host)
  return upstream_host_.GetNoArena();
}
void EnvoyAccessLog::set_upstream_host(const ::std::string& value) {
  
  upstream_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.upstream_host)
}
#if LANG_CXX11
void EnvoyAccessLog::set_upstream_host(::std::string&& value) {
  
  upstream_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.upstream_host)
}
#endif
void EnvoyAccessLog::set_upstream_host(const char* value) {
  
  upstream_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.upstream_host)
}
void EnvoyAccessLog::set_upstream_host(const char* value, size_t size) {
  
  upstream_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.upstream_host)
}
::std::string* EnvoyAccessLog::mutable_upstream_host() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.upstream_host)
  return upstream_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_upstream_host() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.upstream_host)
  
  return upstream_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_upstream_host(::std::string* upstream_host) {
  if (upstream_host != NULL) {
    
  } else {
    
  }
  upstream_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upstream_host);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.upstream_host)
}

// string upstream_cluster = 6;
void EnvoyAccessLog::clear_upstream_cluster() {
  upstream_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::upstream_cluster() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
  return upstream_cluster_.GetNoArena();
}
void EnvoyAccessLog::set_upstream_cluster(const ::std::string& value) {
  
  upstream_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}
#if LANG_CXX11
void EnvoyAccessLog::set_upstream_cluster(::std::string&& value) {
  
  upstream_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}
#endif
void EnvoyAccessLog::set_upstream_cluster(const char* value) {
  
  upstream_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}
void EnvoyAccessLog::set_upstream_cluster(const char* value, size_t size) {
  
  upstream_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}
::std::string* EnvoyAccessLog::mutable_upstream_cluster() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
  return upstream_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_upstream_cluster() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
  
  return upstream_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_upstream_cluster(::std::string* upstream_cluster) {
  if (upstream_cluster != NULL) {
    
  } else {
    
  }
  upstream_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upstream_cluster);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}

// string destination_host = 7;
void EnvoyAccessLog::clear_destination_host() {
  destination_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::destination_host() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.destination_host)
  return destination_host_.GetNoArena();
}
void EnvoyAccessLog::set_destination_host(const ::std::string& value) {
  
  destination_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.destination_host)
}
#if LANG_CXX11
void EnvoyAccessLog::set_destination_host(::std::string&& value) {
  
  destination_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.destination_host)
}
#endif
void EnvoyAccessLog::set_destination_host(const char* value) {
  
  destination_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.destination_host)
}
void EnvoyAccessLog::set_destination_host(const char* value, size_t size) {
  
  destination_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.destination_host)
}
::std::string* EnvoyAccessLog::mutable_destination_host() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.destination_host)
  return destination_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_destination_host() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.destination_host)
  
  return destination_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_destination_host(::std::string* destination_host) {
  if (destination_host != NULL) {
    
  } else {
    
  }
  destination_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_host);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.destination_host)
}

// .google.protobuf.UInt64Value request_body_bytes = 8;
bool EnvoyAccessLog::has_request_body_bytes() const {
  return this != internal_default_instance() && request_body_bytes_ != NULL;
}
void EnvoyAccessLog::clear_request_body_bytes() {
  if (GetArenaNoVirtual() == NULL && request_body_bytes_ != NULL) delete request_body_bytes_;
  request_body_bytes_ = NULL;
}
const ::google::protobuf::UInt64Value& EnvoyAccessLog::request_body_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_body_bytes)
  return request_body_bytes_ != NULL ? *request_body_bytes_
                         : *::google::protobuf::UInt64Value::internal_default_instance();
}
::google::protobuf::UInt64Value* EnvoyAccessLog::mutable_request_body_bytes() {
  
  if (request_body_bytes_ == NULL) {
    request_body_bytes_ = new ::google::protobuf::UInt64Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.request_body_bytes)
  return request_body_bytes_;
}
::google::protobuf::UInt64Value* EnvoyAccessLog::release_request_body_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.request_body_bytes)
  
  ::google::protobuf::UInt64Value* temp = request_body_bytes_;
  request_body_bytes_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_request_body_bytes(::google::protobuf::UInt64Value* request_body_bytes) {
  delete request_body_bytes_;
  if (request_body_bytes != NULL && request_body_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt64Value* new_request_body_bytes = new ::google::protobuf::UInt64Value;
    new_request_body_bytes->CopyFrom(*request_body_bytes);
    request_body_bytes = new_request_body_bytes;
  }
  request_body_bytes_ = request_body_bytes;
  if (request_body_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.request_body_bytes)
}

// .google.protobuf.UInt64Value response_body_bytes = 9;
bool EnvoyAccessLog::has_response_body_bytes() const {
  return this != internal_default_instance() && response_body_bytes_ != NULL;
}
void EnvoyAccessLog::clear_response_body_bytes() {
  if (GetArenaNoVirtual() == NULL && response_body_bytes_ != NULL) delete response_body_bytes_;
  response_body_bytes_ = NULL;
}
const ::google::protobuf::UInt64Value& EnvoyAccessLog::response_body_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_body_bytes)
  return response_body_bytes_ != NULL ? *response_body_bytes_
                         : *::google::protobuf::UInt64Value::internal_default_instance();
}
::google::protobuf::UInt64Value* EnvoyAccessLog::mutable_response_body_bytes() {
  
  if (response_body_bytes_ == NULL) {
    response_body_bytes_ = new ::google::protobuf::UInt64Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_body_bytes)
  return response_body_bytes_;
}
::google::protobuf::UInt64Value* EnvoyAccessLog::release_response_body_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.response_body_bytes)
  
  ::google::protobuf::UInt64Value* temp = response_body_bytes_;
  response_body_bytes_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_response_body_bytes(::google::protobuf::UInt64Value* response_body_bytes) {
  delete response_body_bytes_;
  if (response_body_bytes != NULL && response_body_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt64Value* new_response_body_bytes = new ::google::protobuf::UInt64Value;
    new_response_body_bytes->CopyFrom(*response_body_bytes);
    response_body_bytes = new_response_body_bytes;
  }
  response_body_bytes_ = response_body_bytes;
  if (response_body_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.response_body_bytes)
}

// .google.protobuf.UInt64Value request_headers_bytes = 10;
bool EnvoyAccessLog::has_request_headers_bytes() const {
  return this != internal_default_instance() && request_headers_bytes_ != NULL;
}
void EnvoyAccessLog::clear_request_headers_bytes() {
  if (GetArenaNoVirtual() == NULL && request_headers_bytes_ != NULL) delete request_headers_bytes_;
  request_headers_bytes_ = NULL;
}
const ::google::protobuf::UInt64Value& EnvoyAccessLog::request_headers_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_headers_bytes)
  return request_headers_bytes_ != NULL ? *request_headers_bytes_
                         : *::google::protobuf::UInt64Value::internal_default_instance();
}
::google::protobuf::UInt64Value* EnvoyAccessLog::mutable_request_headers_bytes() {
  
  if (request_headers_bytes_ == NULL) {
    request_headers_bytes_ = new ::google::protobuf::UInt64Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.request_headers_bytes)
  return request_headers_bytes_;
}
::google::protobuf::UInt64Value* EnvoyAccessLog::release_request_headers_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.request_headers_bytes)
  
  ::google::protobuf::UInt64Value* temp = request_headers_bytes_;
  request_headers_bytes_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_request_headers_bytes(::google::protobuf::UInt64Value* request_headers_bytes) {
  delete request_headers_bytes_;
  if (request_headers_bytes != NULL && request_headers_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt64Value* new_request_headers_bytes = new ::google::protobuf::UInt64Value;
    new_request_headers_bytes->CopyFrom(*request_headers_bytes);
    request_headers_bytes = new_request_headers_bytes;
  }
  request_headers_bytes_ = request_headers_bytes;
  if (request_headers_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.request_headers_bytes)
}

// .google.protobuf.UInt64Value response_headers_bytes = 11;
bool EnvoyAccessLog::has_response_headers_bytes() const {
  return this != internal_default_instance() && response_headers_bytes_ != NULL;
}
void EnvoyAccessLog::clear_response_headers_bytes() {
  if (GetArenaNoVirtual() == NULL && response_headers_bytes_ != NULL) delete response_headers_bytes_;
  response_headers_bytes_ = NULL;
}
const ::google::protobuf::UInt64Value& EnvoyAccessLog::response_headers_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_headers_bytes)
  return response_headers_bytes_ != NULL ? *response_headers_bytes_
                         : *::google::protobuf::UInt64Value::internal_default_instance();
}
::google::protobuf::UInt64Value* EnvoyAccessLog::mutable_response_headers_bytes() {
  
  if (response_headers_bytes_ == NULL) {
    response_headers_bytes_ = new ::google::protobuf::UInt64Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_headers_bytes)
  return response_headers_bytes_;
}
::google::protobuf::UInt64Value* EnvoyAccessLog::release_response_headers_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.response_headers_bytes)
  
  ::google::protobuf::UInt64Value* temp = response_headers_bytes_;
  response_headers_bytes_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_response_headers_bytes(::google::protobuf::UInt64Value* response_headers_bytes) {
  delete response_headers_bytes_;
  if (response_headers_bytes != NULL && response_headers_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt64Value* new_response_headers_bytes = new ::google::protobuf::UInt64Value;
    new_response_headers_bytes->CopyFrom(*response_headers_bytes);
    response_headers_bytes = new_response_headers_bytes;
  }
  response_headers_bytes_ = response_headers_bytes;
  if (response_headers_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.response_headers_bytes)
}

// .google.protobuf.BoolValue secure = 12;
bool EnvoyAccessLog::has_secure() const {
  return this != internal_default_instance() && secure_ != NULL;
}
void EnvoyAccessLog::clear_secure() {
  if (GetArenaNoVirtual() == NULL && secure_ != NULL) delete secure_;
  secure_ = NULL;
}
const ::google::protobuf::BoolValue& EnvoyAccessLog::secure() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.secure)
  return secure_ != NULL ? *secure_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
::google::protobuf::BoolValue* EnvoyAccessLog::mutable_secure() {
  
  if (secure_ == NULL) {
    secure_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.secure)
  return secure_;
}
::google::protobuf::BoolValue* EnvoyAccessLog::release_secure() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.secure)
  
  ::google::protobuf::BoolValue* temp = secure_;
  secure_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_secure(::google::protobuf::BoolValue* secure) {
  delete secure_;
  if (secure != NULL && secure->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_secure = new ::google::protobuf::BoolValue;
    new_secure->CopyFrom(*secure);
    secure = new_secure;
  }
  secure_ = secure;
  if (secure) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.secure)
}

// .google.protobuf.BoolValue health_check = 13;
bool EnvoyAccessLog::has_health_check() const {
  return this != internal_default_instance() && health_check_ != NULL;
}
void EnvoyAccessLog::clear_health_check() {
  if (GetArenaNoVirtual() == NULL && health_check_ != NULL) delete health_check_;
  health_check_ = NULL;
}
const ::google::protobuf::BoolValue& EnvoyAccessLog::health_check() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.health_check)
  return health_check_ != NULL ? *health_check_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
::google::protobuf::BoolValue* EnvoyAccessLog::mutable_health_check() {
  
  if (health_check_ == NULL) {
    health_check_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.health_check)
  return health_check_;
}
::google::protobuf::BoolValue* EnvoyAccessLog::release_health_check() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.health_check)
  
  ::google::protobuf::BoolValue* temp = health_check_;
  health_check_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_health_check(::google::protobuf::BoolValue* health_check) {
  delete health_check_;
  if (health_check != NULL && health_check->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_health_check = new ::google::protobuf::BoolValue;
    new_health_check->CopyFrom(*health_check);
    health_check = new_health_check;
  }
  health_check_ = health_check;
  if (health_check) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.health_check)
}

// .google.protobuf.UInt32Value response_code = 14;
bool EnvoyAccessLog::has_response_code() const {
  return this != internal_default_instance() && response_code_ != NULL;
}
void EnvoyAccessLog::clear_response_code() {
  if (GetArenaNoVirtual() == NULL && response_code_ != NULL) delete response_code_;
  response_code_ = NULL;
}
const ::google::protobuf::UInt32Value& EnvoyAccessLog::response_code() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_code)
  return response_code_ != NULL ? *response_code_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
::google::protobuf::UInt32Value* EnvoyAccessLog::mutable_response_code() {
  
  if (response_code_ == NULL) {
    response_code_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_code)
  return response_code_;
}
::google::protobuf::UInt32Value* EnvoyAccessLog::release_response_code() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.response_code)
  
  ::google::protobuf::UInt32Value* temp = response_code_;
  response_code_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_response_code(::google::protobuf::UInt32Value* response_code) {
  delete response_code_;
  if (response_code != NULL && response_code->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_response_code = new ::google::protobuf::UInt32Value;
    new_response_code->CopyFrom(*response_code);
    response_code = new_response_code;
  }
  response_code_ = response_code;
  if (response_code) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.response_code)
}

// string user_agent = 15;
void EnvoyAccessLog::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::user_agent() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.user_agent)
  return user_agent_.GetNoArena();
}
void EnvoyAccessLog::set_user_agent(const ::std::string& value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.user_agent)
}
#if LANG_CXX11
void EnvoyAccessLog::set_user_agent(::std::string&& value) {
  
  user_agent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.user_agent)
}
#endif
void EnvoyAccessLog::set_user_agent(const char* value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.user_agent)
}
void EnvoyAccessLog::set_user_agent(const char* value, size_t size) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.user_agent)
}
::std::string* EnvoyAccessLog::mutable_user_agent() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_user_agent() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.user_agent)
  
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    
  } else {
    
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.user_agent)
}

// string path = 17;
void EnvoyAccessLog::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.path)
  return path_.GetNoArena();
}
void EnvoyAccessLog::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.path)
}
#if LANG_CXX11
void EnvoyAccessLog::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.path)
}
#endif
void EnvoyAccessLog::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.path)
}
void EnvoyAccessLog::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.path)
}
::std::string* EnvoyAccessLog::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.path)
}

// string referer = 18;
void EnvoyAccessLog::clear_referer() {
  referer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::referer() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.referer)
  return referer_.GetNoArena();
}
void EnvoyAccessLog::set_referer(const ::std::string& value) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.referer)
}
#if LANG_CXX11
void EnvoyAccessLog::set_referer(::std::string&& value) {
  
  referer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.referer)
}
#endif
void EnvoyAccessLog::set_referer(const char* value) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.referer)
}
void EnvoyAccessLog::set_referer(const char* value, size_t size) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.referer)
}
::std::string* EnvoyAccessLog::mutable_referer() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.referer)
  return referer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_referer() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.referer)
  
  return referer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_referer(::std::string* referer) {
  if (referer != NULL) {
    
  } else {
    
  }
  referer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referer);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.referer)
}

// string forwarded_for = 19;
void EnvoyAccessLog::clear_forwarded_for() {
  forwarded_for_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::forwarded_for() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.forwarded_for)
  return forwarded_for_.GetNoArena();
}
void EnvoyAccessLog::set_forwarded_for(const ::std::string& value) {
  
  forwarded_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}
#if LANG_CXX11
void EnvoyAccessLog::set_forwarded_for(::std::string&& value) {
  
  forwarded_for_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}
#endif
void EnvoyAccessLog::set_forwarded_for(const char* value) {
  
  forwarded_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}
void EnvoyAccessLog::set_forwarded_for(const char* value, size_t size) {
  
  forwarded_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}
::std::string* EnvoyAccessLog::mutable_forwarded_for() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.forwarded_for)
  return forwarded_for_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_forwarded_for() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.forwarded_for)
  
  return forwarded_for_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_forwarded_for(::std::string* forwarded_for) {
  if (forwarded_for != NULL) {
    
  } else {
    
  }
  forwarded_for_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forwarded_for);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}

// string request_id = 20;
void EnvoyAccessLog::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::request_id() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_id)
  return request_id_.GetNoArena();
}
void EnvoyAccessLog::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.request_id)
}
#if LANG_CXX11
void EnvoyAccessLog::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.request_id)
}
#endif
void EnvoyAccessLog::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.request_id)
}
void EnvoyAccessLog::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.request_id)
}
::std::string* EnvoyAccessLog::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_request_id() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.request_id)
}

// string authority = 21;
void EnvoyAccessLog::clear_authority() {
  authority_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::authority() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.authority)
  return authority_.GetNoArena();
}
void EnvoyAccessLog::set_authority(const ::std::string& value) {
  
  authority_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.authority)
}
#if LANG_CXX11
void EnvoyAccessLog::set_authority(::std::string&& value) {
  
  authority_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.authority)
}
#endif
void EnvoyAccessLog::set_authority(const char* value) {
  
  authority_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.authority)
}
void EnvoyAccessLog::set_authority(const char* value, size_t size) {
  
  authority_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.authority)
}
::std::string* EnvoyAccessLog::mutable_authority() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.authority)
  return authority_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_authority() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.authority)
  
  return authority_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_authority(::std::string* authority) {
  if (authority != NULL) {
    
  } else {
    
  }
  authority_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authority);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.authority)
}

// .google.protobuf.Duration response_duration = 22;
bool EnvoyAccessLog::has_response_duration() const {
  return this != internal_default_instance() && response_duration_ != NULL;
}
void EnvoyAccessLog::clear_response_duration() {
  if (GetArenaNoVirtual() == NULL && response_duration_ != NULL) delete response_duration_;
  response_duration_ = NULL;
}
const ::google::protobuf::Duration& EnvoyAccessLog::response_duration() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_duration)
  return response_duration_ != NULL ? *response_duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* EnvoyAccessLog::mutable_response_duration() {
  
  if (response_duration_ == NULL) {
    response_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_duration)
  return response_duration_;
}
::google::protobuf::Duration* EnvoyAccessLog::release_response_duration() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.response_duration)
  
  ::google::protobuf::Duration* temp = response_duration_;
  response_duration_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_response_duration(::google::protobuf::Duration* response_duration) {
  delete response_duration_;
  if (response_duration != NULL && response_duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_response_duration = new ::google::protobuf::Duration;
    new_response_duration->CopyFrom(*response_duration);
    response_duration = new_response_duration;
  }
  response_duration_ = response_duration;
  if (response_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.response_duration)
}

// .google.protobuf.Duration upstream_service_duration = 23;
bool EnvoyAccessLog::has_upstream_service_duration() const {
  return this != internal_default_instance() && upstream_service_duration_ != NULL;
}
void EnvoyAccessLog::clear_upstream_service_duration() {
  if (GetArenaNoVirtual() == NULL && upstream_service_duration_ != NULL) delete upstream_service_duration_;
  upstream_service_duration_ = NULL;
}
const ::google::protobuf::Duration& EnvoyAccessLog::upstream_service_duration() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.upstream_service_duration)
  return upstream_service_duration_ != NULL ? *upstream_service_duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* EnvoyAccessLog::mutable_upstream_service_duration() {
  
  if (upstream_service_duration_ == NULL) {
    upstream_service_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.upstream_service_duration)
  return upstream_service_duration_;
}
::google::protobuf::Duration* EnvoyAccessLog::release_upstream_service_duration() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.upstream_service_duration)
  
  ::google::protobuf::Duration* temp = upstream_service_duration_;
  upstream_service_duration_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_upstream_service_duration(::google::protobuf::Duration* upstream_service_duration) {
  delete upstream_service_duration_;
  if (upstream_service_duration != NULL && upstream_service_duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_upstream_service_duration = new ::google::protobuf::Duration;
    new_upstream_service_duration->CopyFrom(*upstream_service_duration);
    upstream_service_duration = new_upstream_service_duration;
  }
  upstream_service_duration_ = upstream_service_duration;
  if (upstream_service_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.upstream_service_duration)
}

// string original_path = 24;
void EnvoyAccessLog::clear_original_path() {
  original_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::original_path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.original_path)
  return original_path_.GetNoArena();
}
void EnvoyAccessLog::set_original_path(const ::std::string& value) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.original_path)
}
#if LANG_CXX11
void EnvoyAccessLog::set_original_path(::std::string&& value) {
  
  original_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.original_path)
}
#endif
void EnvoyAccessLog::set_original_path(const char* value) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.original_path)
}
void EnvoyAccessLog::set_original_path(const char* value, size_t size) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.original_path)
}
::std::string* EnvoyAccessLog::mutable_original_path() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.original_path)
  return original_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_original_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.original_path)
  
  return original_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_original_path(::std::string* original_path) {
  if (original_path != NULL) {
    
  } else {
    
  }
  original_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_path);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.original_path)
}

// .google.protobuf.Struct metadata = 25;
bool EnvoyAccessLog::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
void EnvoyAccessLog::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) delete metadata_;
  metadata_ = NULL;
}
const ::google::protobuf::Struct& EnvoyAccessLog::metadata() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::google::protobuf::Struct::internal_default_instance();
}
::google::protobuf::Struct* EnvoyAccessLog::mutable_metadata() {
  
  if (metadata_ == NULL) {
    metadata_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.metadata)
  return metadata_;
}
::google::protobuf::Struct* EnvoyAccessLog::release_metadata() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.metadata)
  
  ::google::protobuf::Struct* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_metadata(::google::protobuf::Struct* metadata) {
  delete metadata_;
  if (metadata != NULL && metadata->GetArena() != NULL) {
    ::google::protobuf::Struct* new_metadata = new ::google::protobuf::Struct;
    new_metadata->CopyFrom(*metadata);
    metadata = new_metadata;
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.metadata)
}

// repeated .envoy.api.v2.HeaderValue request_headers = 26;
int EnvoyAccessLog::request_headers_size() const {
  return request_headers_.size();
}
void EnvoyAccessLog::clear_request_headers() {
  request_headers_.Clear();
}
const ::envoy::api::v2::HeaderValue& EnvoyAccessLog::request_headers(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_headers)
  return request_headers_.Get(index);
}
::envoy::api::v2::HeaderValue* EnvoyAccessLog::mutable_request_headers(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.request_headers)
  return request_headers_.Mutable(index);
}
::envoy::api::v2::HeaderValue* EnvoyAccessLog::add_request_headers() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.EnvoyAccessLog.request_headers)
  return request_headers_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >*
EnvoyAccessLog::mutable_request_headers() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.EnvoyAccessLog.request_headers)
  return &request_headers_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >&
EnvoyAccessLog::request_headers() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.EnvoyAccessLog.request_headers)
  return request_headers_;
}

// repeated .envoy.api.v2.HeaderValue response_headers = 27;
int EnvoyAccessLog::response_headers_size() const {
  return response_headers_.size();
}
void EnvoyAccessLog::clear_response_headers() {
  response_headers_.Clear();
}
const ::envoy::api::v2::HeaderValue& EnvoyAccessLog::response_headers(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_headers)
  return response_headers_.Get(index);
}
::envoy::api::v2::HeaderValue* EnvoyAccessLog::mutable_response_headers(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_headers)
  return response_headers_.Mutable(index);
}
::envoy::api::v2::HeaderValue* EnvoyAccessLog::add_response_headers() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.EnvoyAccessLog.response_headers)
  return response_headers_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >*
EnvoyAccessLog::mutable_response_headers() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.EnvoyAccessLog.response_headers)
  return &response_headers_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >&
EnvoyAccessLog::response_headers() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.EnvoyAccessLog.response_headers)
  return response_headers_;
}

// string tls_sni_hostname = 28;
void EnvoyAccessLog::clear_tls_sni_hostname() {
  tls_sni_hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnvoyAccessLog::tls_sni_hostname() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
  return tls_sni_hostname_.GetNoArena();
}
void EnvoyAccessLog::set_tls_sni_hostname(const ::std::string& value) {
  
  tls_sni_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}
#if LANG_CXX11
void EnvoyAccessLog::set_tls_sni_hostname(::std::string&& value) {
  
  tls_sni_hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}
#endif
void EnvoyAccessLog::set_tls_sni_hostname(const char* value) {
  
  tls_sni_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}
void EnvoyAccessLog::set_tls_sni_hostname(const char* value, size_t size) {
  
  tls_sni_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}
::std::string* EnvoyAccessLog::mutable_tls_sni_hostname() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
  return tls_sni_hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnvoyAccessLog::release_tls_sni_hostname() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
  
  return tls_sni_hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnvoyAccessLog::set_allocated_tls_sni_hostname(::std::string* tls_sni_hostname) {
  if (tls_sni_hostname != NULL) {
    
  } else {
    
  }
  tls_sni_hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tls_sni_hostname);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}

// .envoy.api.v2.EnvoyAccessLog.TLSVersion tls_version = 29;
void EnvoyAccessLog::clear_tls_version() {
  tls_version_ = 0;
}
::envoy::api::v2::EnvoyAccessLog_TLSVersion EnvoyAccessLog::tls_version() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.tls_version)
  return static_cast< ::envoy::api::v2::EnvoyAccessLog_TLSVersion >(tls_version_);
}
void EnvoyAccessLog::set_tls_version(::envoy::api::v2::EnvoyAccessLog_TLSVersion value) {
  
  tls_version_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.tls_version)
}

// .google.protobuf.UInt32Value tls_cipher_suite = 30;
bool EnvoyAccessLog::has_tls_cipher_suite() const {
  return this != internal_default_instance() && tls_cipher_suite_ != NULL;
}
void EnvoyAccessLog::clear_tls_cipher_suite() {
  if (GetArenaNoVirtual() == NULL && tls_cipher_suite_ != NULL) delete tls_cipher_suite_;
  tls_cipher_suite_ = NULL;
}
const ::google::protobuf::UInt32Value& EnvoyAccessLog::tls_cipher_suite() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.tls_cipher_suite)
  return tls_cipher_suite_ != NULL ? *tls_cipher_suite_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
::google::protobuf::UInt32Value* EnvoyAccessLog::mutable_tls_cipher_suite() {
  
  if (tls_cipher_suite_ == NULL) {
    tls_cipher_suite_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.tls_cipher_suite)
  return tls_cipher_suite_;
}
::google::protobuf::UInt32Value* EnvoyAccessLog::release_tls_cipher_suite() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.tls_cipher_suite)
  
  ::google::protobuf::UInt32Value* temp = tls_cipher_suite_;
  tls_cipher_suite_ = NULL;
  return temp;
}
void EnvoyAccessLog::set_allocated_tls_cipher_suite(::google::protobuf::UInt32Value* tls_cipher_suite) {
  delete tls_cipher_suite_;
  if (tls_cipher_suite != NULL && tls_cipher_suite->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_tls_cipher_suite = new ::google::protobuf::UInt32Value;
    new_tls_cipher_suite->CopyFrom(*tls_cipher_suite);
    tls_cipher_suite = new_tls_cipher_suite;
  }
  tls_cipher_suite_ = tls_cipher_suite;
  if (tls_cipher_suite) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.tls_cipher_suite)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
