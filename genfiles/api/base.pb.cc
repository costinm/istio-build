// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/base.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace envoy {
namespace api {
namespace v2 {
class LocalityDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Locality> {
} _Locality_default_instance_;
class NodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Node> {
} _Node_default_instance_;
class EndpointDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Endpoint> {
} _Endpoint_default_instance_;
class MetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Metadata> {
} _Metadata_default_instance_;
class RuntimeUInt32DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RuntimeUInt32> {
} _RuntimeUInt32_default_instance_;
class HeaderValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HeaderValue> {
} _HeaderValue_default_instance_;
class HeaderValueOptionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HeaderValueOption> {
} _HeaderValueOption_default_instance_;
class DiscoveryRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DiscoveryRequest> {
} _DiscoveryRequest_default_instance_;
class DiscoveryResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DiscoveryResponse> {
} _DiscoveryResponse_default_instance_;

namespace protobuf_api_2fbase_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Locality, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Locality, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Locality, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Locality, sub_zone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, locality_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Endpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Endpoint, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, filter_metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuntimeUInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuntimeUInt32, default_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuntimeUInt32, runtime_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValue, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValueOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValueOption, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValueOption, append_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, resource_names_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, resources_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Locality)},
  { 7, -1, sizeof(Node)},
  { 14, -1, sizeof(Endpoint)},
  { 19, -1, sizeof(Metadata)},
  { 24, -1, sizeof(RuntimeUInt32)},
  { 30, -1, sizeof(HeaderValue)},
  { 36, -1, sizeof(HeaderValueOption)},
  { 42, -1, sizeof(DiscoveryRequest)},
  { 49, -1, sizeof(DiscoveryResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Locality_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Endpoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Metadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RuntimeUInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeaderValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeaderValueOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DiscoveryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DiscoveryResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/base.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
  const ::google::protobuf::Descriptor* Metadata_FilterMetadataEntry_descriptor = protobuf_api_2fbase_2eproto::file_level_metadata[3].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        Metadata_FilterMetadataEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::Struct,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                Metadata_FilterMetadataEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _Locality_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Node_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Endpoint_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Metadata_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _RuntimeUInt32_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _HeaderValue_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _HeaderValueOption_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _DiscoveryRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _DiscoveryResponse_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::envoy::api::v2::protobuf_api_2faddress_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  _Locality_default_instance_.DefaultConstruct();
  _Node_default_instance_.DefaultConstruct();
  _Endpoint_default_instance_.DefaultConstruct();
  _Metadata_default_instance_.DefaultConstruct();
  _RuntimeUInt32_default_instance_.DefaultConstruct();
  _HeaderValue_default_instance_.DefaultConstruct();
  _HeaderValueOption_default_instance_.DefaultConstruct();
  _DiscoveryRequest_default_instance_.DefaultConstruct();
  _DiscoveryResponse_default_instance_.DefaultConstruct();
  _Node_default_instance_.get_mutable()->metadata_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  _Node_default_instance_.get_mutable()->locality_ = const_cast< ::envoy::api::v2::Locality*>(
      ::envoy::api::v2::Locality::internal_default_instance());
  _Endpoint_default_instance_.get_mutable()->address_ = const_cast< ::envoy::api::v2::ResolvedAddress*>(
      ::envoy::api::v2::ResolvedAddress::internal_default_instance());
  _HeaderValueOption_default_instance_.get_mutable()->header_ = const_cast< ::envoy::api::v2::HeaderValue*>(
      ::envoy::api::v2::HeaderValue::internal_default_instance());
  _HeaderValueOption_default_instance_.get_mutable()->append_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _DiscoveryRequest_default_instance_.get_mutable()->node_ = const_cast< ::envoy::api::v2::Node*>(
      ::envoy::api::v2::Node::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016api/base.proto\022\014envoy.api.v2\032\021api/addr"
      "ess.proto\032\031google/protobuf/any.proto\032\034go"
      "ogle/protobuf/struct.proto\032\036google/proto"
      "buf/wrappers.proto\":\n\010Locality\022\016\n\006region"
      "\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\020\n\010sub_zone\030\003 \001(\t\"g"
      "\n\004Node\022\n\n\002id\030\001 \001(\t\022)\n\010metadata\030\002 \001(\0132\027.g"
      "oogle.protobuf.Struct\022(\n\010locality\030\003 \001(\0132"
      "\026.envoy.api.v2.Locality\":\n\010Endpoint\022.\n\007a"
      "ddress\030\001 \001(\0132\035.envoy.api.v2.ResolvedAddr"
      "ess\"\237\001\n\010Metadata\022C\n\017filter_metadata\030\001 \003("
      "\0132*.envoy.api.v2.Metadata.FilterMetadata"
      "Entry\032N\n\023FilterMetadataEntry\022\013\n\003key\030\001 \001("
      "\t\022&\n\005value\030\002 \001(\0132\027.google.protobuf.Struc"
      "t:\0028\001\";\n\rRuntimeUInt32\022\025\n\rdefault_value\030"
      "\002 \001(\r\022\023\n\013runtime_key\030\003 \001(\t\")\n\013HeaderValu"
      "e\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"j\n\021HeaderV"
      "alueOption\022)\n\006header\030\001 \001(\0132\031.envoy.api.v"
      "2.HeaderValue\022*\n\006append\030\002 \001(\0132\032.google.p"
      "rotobuf.BoolValue\"b\n\020DiscoveryRequest\022\024\n"
      "\014version_info\030\001 \001(\t\022 \n\004node\030\002 \001(\0132\022.envo"
      "y.api.v2.Node\022\026\n\016resource_names\030\003 \003(\t\"R\n"
      "\021DiscoveryResponse\022\024\n\014version_info\030\001 \001(\t"
      "\022\'\n\tresources\030\002 \003(\0132\024.google.protobuf.An"
      "y*(\n\017RoutingPriority\022\013\n\007DEFAULT\020\000\022\010\n\004HIG"
      "H\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 971);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/base.proto", &protobuf_RegisterTypes);
  ::envoy::api::v2::protobuf_api_2faddress_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2fbase_2eproto

const ::google::protobuf::EnumDescriptor* RoutingPriority_descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_enum_descriptors[0];
}
bool RoutingPriority_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Locality::kRegionFieldNumber;
const int Locality::kZoneFieldNumber;
const int Locality::kSubZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Locality::Locality()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Locality)
}
Locality::Locality(const Locality& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  sub_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sub_zone().size() > 0) {
    sub_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_zone_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Locality)
}

void Locality::SharedCtor() {
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Locality::~Locality() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Locality)
  SharedDtor();
}

void Locality::SharedDtor() {
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Locality::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Locality::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[0].descriptor;
}

const Locality& Locality::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Locality* Locality::New(::google::protobuf::Arena* arena) const {
  Locality* n = new Locality;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Locality::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Locality)
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Locality::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Locality)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string region = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), this->region().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Locality.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), this->zone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Locality.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sub_zone = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sub_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sub_zone().data(), this->sub_zone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Locality.sub_zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Locality)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Locality)
  return false;
#undef DO_
}

void Locality::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Locality)
  // string region = 1;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->region(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), this->zone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string sub_zone = 3;
  if (this->sub_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub_zone().data(), this->sub_zone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.sub_zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sub_zone(), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Locality)
}

::google::protobuf::uint8* Locality::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Locality)
  // string region = 1;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->region(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), this->zone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string sub_zone = 3;
  if (this->sub_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub_zone().data(), this->sub_zone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.sub_zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sub_zone(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Locality)
  return target;
}

size_t Locality::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Locality)
  size_t total_size = 0;

  // string region = 1;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string sub_zone = 3;
  if (this->sub_zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sub_zone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Locality::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Locality)
  GOOGLE_DCHECK_NE(&from, this);
  const Locality* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Locality>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Locality)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Locality)
    MergeFrom(*source);
  }
}

void Locality::MergeFrom(const Locality& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Locality)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.sub_zone().size() > 0) {

    sub_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_zone_);
  }
}

void Locality::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Locality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Locality::CopyFrom(const Locality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Locality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Locality::IsInitialized() const {
  return true;
}

void Locality::Swap(Locality* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Locality::InternalSwap(Locality* other) {
  region_.Swap(&other->region_);
  zone_.Swap(&other->zone_);
  sub_zone_.Swap(&other->sub_zone_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Locality::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Locality

// string region = 1;
void Locality::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Locality::region() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Locality.region)
  return region_.GetNoArena();
}
void Locality::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Locality.region)
}
#if LANG_CXX11
void Locality::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Locality.region)
}
#endif
void Locality::set_region(const char* value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Locality.region)
}
void Locality::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Locality.region)
}
::std::string* Locality::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Locality.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Locality::release_region() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Locality.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Locality::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Locality.region)
}

// string zone = 2;
void Locality::clear_zone() {
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Locality::zone() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Locality.zone)
  return zone_.GetNoArena();
}
void Locality::set_zone(const ::std::string& value) {
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Locality.zone)
}
#if LANG_CXX11
void Locality::set_zone(::std::string&& value) {
  
  zone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Locality.zone)
}
#endif
void Locality::set_zone(const char* value) {
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Locality.zone)
}
void Locality::set_zone(const char* value, size_t size) {
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Locality.zone)
}
::std::string* Locality::mutable_zone() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Locality.zone)
  return zone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Locality::release_zone() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Locality.zone)
  
  return zone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Locality::set_allocated_zone(::std::string* zone) {
  if (zone != NULL) {
    
  } else {
    
  }
  zone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zone);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Locality.zone)
}

// string sub_zone = 3;
void Locality::clear_sub_zone() {
  sub_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Locality::sub_zone() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Locality.sub_zone)
  return sub_zone_.GetNoArena();
}
void Locality::set_sub_zone(const ::std::string& value) {
  
  sub_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Locality.sub_zone)
}
#if LANG_CXX11
void Locality::set_sub_zone(::std::string&& value) {
  
  sub_zone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Locality.sub_zone)
}
#endif
void Locality::set_sub_zone(const char* value) {
  
  sub_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Locality.sub_zone)
}
void Locality::set_sub_zone(const char* value, size_t size) {
  
  sub_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Locality.sub_zone)
}
::std::string* Locality::mutable_sub_zone() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Locality.sub_zone)
  return sub_zone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Locality::release_sub_zone() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Locality.sub_zone)
  
  return sub_zone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Locality::set_allocated_sub_zone(::std::string* sub_zone) {
  if (sub_zone != NULL) {
    
  } else {
    
  }
  sub_zone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sub_zone);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Locality.sub_zone)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kMetadataFieldNumber;
const int Node::kLocalityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::google::protobuf::Struct(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_locality()) {
    locality_ = new ::envoy::api::v2::Locality(*from.locality_);
  } else {
    locality_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Node)
}

void Node::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, reinterpret_cast<char*>(&locality_) -
    reinterpret_cast<char*>(&metadata_) + sizeof(locality_));
  _cached_size_ = 0;
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete metadata_;
  }
  if (this != internal_default_instance()) {
    delete locality_;
  }
}

void Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[1].descriptor;
}

const Node& Node::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Node* Node::New(::google::protobuf::Arena* arena) const {
  Node* n = new Node;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Node)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) {
    delete locality_;
  }
  locality_ = NULL;
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Node.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct metadata = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Locality locality = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Node)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Node.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .google.protobuf.Struct metadata = 2;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metadata_, output);
  }

  // .envoy.api.v2.Locality locality = 3;
  if (this->has_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->locality_, output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Node)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Node.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .google.protobuf.Struct metadata = 2;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->metadata_, false, target);
  }

  // .envoy.api.v2.Locality locality = 3;
  if (this->has_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->locality_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Node)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .google.protobuf.Struct metadata = 2;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metadata_);
  }

  // .envoy.api.v2.Locality locality = 3;
  if (this->has_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locality_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::google::protobuf::Struct::MergeFrom(from.metadata());
  }
  if (from.has_locality()) {
    mutable_locality()->::envoy::api::v2::Locality::MergeFrom(from.locality());
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  id_.Swap(&other->id_);
  std::swap(metadata_, other->metadata_);
  std::swap(locality_, other->locality_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// string id = 1;
void Node::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Node::id() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Node.id)
  return id_.GetNoArena();
}
void Node::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Node.id)
}
#if LANG_CXX11
void Node::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Node.id)
}
#endif
void Node::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Node.id)
}
void Node::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Node.id)
}
::std::string* Node::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Node.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Node::release_id() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Node.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Node::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Node.id)
}

// .google.protobuf.Struct metadata = 2;
bool Node::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
void Node::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) delete metadata_;
  metadata_ = NULL;
}
const ::google::protobuf::Struct& Node::metadata() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Node.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::google::protobuf::Struct::internal_default_instance();
}
::google::protobuf::Struct* Node::mutable_metadata() {
  
  if (metadata_ == NULL) {
    metadata_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Node.metadata)
  return metadata_;
}
::google::protobuf::Struct* Node::release_metadata() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Node.metadata)
  
  ::google::protobuf::Struct* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
void Node::set_allocated_metadata(::google::protobuf::Struct* metadata) {
  delete metadata_;
  if (metadata != NULL && metadata->GetArena() != NULL) {
    ::google::protobuf::Struct* new_metadata = new ::google::protobuf::Struct;
    new_metadata->CopyFrom(*metadata);
    metadata = new_metadata;
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Node.metadata)
}

// .envoy.api.v2.Locality locality = 3;
bool Node::has_locality() const {
  return this != internal_default_instance() && locality_ != NULL;
}
void Node::clear_locality() {
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) delete locality_;
  locality_ = NULL;
}
const ::envoy::api::v2::Locality& Node::locality() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Node.locality)
  return locality_ != NULL ? *locality_
                         : *::envoy::api::v2::Locality::internal_default_instance();
}
::envoy::api::v2::Locality* Node::mutable_locality() {
  
  if (locality_ == NULL) {
    locality_ = new ::envoy::api::v2::Locality;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Node.locality)
  return locality_;
}
::envoy::api::v2::Locality* Node::release_locality() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Node.locality)
  
  ::envoy::api::v2::Locality* temp = locality_;
  locality_ = NULL;
  return temp;
}
void Node::set_allocated_locality(::envoy::api::v2::Locality* locality) {
  delete locality_;
  locality_ = locality;
  if (locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Node.locality)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Endpoint::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Endpoint::Endpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Endpoint)
}
Endpoint::Endpoint(const Endpoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::envoy::api::v2::ResolvedAddress(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Endpoint)
}

void Endpoint::SharedCtor() {
  address_ = NULL;
  _cached_size_ = 0;
}

Endpoint::~Endpoint() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Endpoint)
  SharedDtor();
}

void Endpoint::SharedDtor() {
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void Endpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Endpoint::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[2].descriptor;
}

const Endpoint& Endpoint::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Endpoint* Endpoint::New(::google::protobuf::Arena* arena) const {
  Endpoint* n = new Endpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Endpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Endpoint)
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}

bool Endpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Endpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.ResolvedAddress address = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Endpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Endpoint)
  return false;
#undef DO_
}

void Endpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Endpoint)
  // .envoy.api.v2.ResolvedAddress address = 1;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->address_, output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Endpoint)
}

::google::protobuf::uint8* Endpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Endpoint)
  // .envoy.api.v2.ResolvedAddress address = 1;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->address_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Endpoint)
  return target;
}

size_t Endpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Endpoint)
  size_t total_size = 0;

  // .envoy.api.v2.ResolvedAddress address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Endpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Endpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Endpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Endpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Endpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Endpoint)
    MergeFrom(*source);
  }
}

void Endpoint::MergeFrom(const Endpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Endpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    mutable_address()->::envoy::api::v2::ResolvedAddress::MergeFrom(from.address());
  }
}

void Endpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Endpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Endpoint::CopyFrom(const Endpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Endpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Endpoint::IsInitialized() const {
  return true;
}

void Endpoint::Swap(Endpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Endpoint::InternalSwap(Endpoint* other) {
  std::swap(address_, other->address_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Endpoint::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Endpoint

// .envoy.api.v2.ResolvedAddress address = 1;
bool Endpoint::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void Endpoint::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::envoy::api::v2::ResolvedAddress& Endpoint::address() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Endpoint.address)
  return address_ != NULL ? *address_
                         : *::envoy::api::v2::ResolvedAddress::internal_default_instance();
}
::envoy::api::v2::ResolvedAddress* Endpoint::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::envoy::api::v2::ResolvedAddress;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Endpoint.address)
  return address_;
}
::envoy::api::v2::ResolvedAddress* Endpoint::release_address() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Endpoint.address)
  
  ::envoy::api::v2::ResolvedAddress* temp = address_;
  address_ = NULL;
  return temp;
}
void Endpoint::set_allocated_address(::envoy::api::v2::ResolvedAddress* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Endpoint.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metadata::kFilterMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metadata::Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Metadata)
}
Metadata::Metadata(const Metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& Metadata_FilterMetadataEntry_descriptor = protobuf_api_2fbase_2eproto::file_level_metadata[3].descriptor;
  filter_metadata_.SetAssignDescriptorCallback(
      protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce);
  filter_metadata_.SetEntryDescriptor(
      &Metadata_FilterMetadataEntry_descriptor);
  filter_metadata_.MergeFrom(from.filter_metadata_);
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Metadata)
}

void Metadata::SharedCtor() {
  const ::google::protobuf::Descriptor*& Metadata_FilterMetadataEntry_descriptor = protobuf_api_2fbase_2eproto::file_level_metadata[3].descriptor;
  filter_metadata_.SetAssignDescriptorCallback(
      protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce);
  filter_metadata_.SetEntryDescriptor(
      &Metadata_FilterMetadataEntry_descriptor);
  _cached_size_ = 0;
}

Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Metadata)
  SharedDtor();
}

void Metadata::SharedDtor() {
}

void Metadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Metadata::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[4].descriptor;
}

const Metadata& Metadata::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Metadata* Metadata::New(::google::protobuf::Arena* arena) const {
  Metadata* n = new Metadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Metadata)
  filter_metadata_.Clear();
}

bool Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Metadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .google.protobuf.Struct> filter_metadata = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          Metadata_FilterMetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::Struct,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct > > parser(&filter_metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Metadata.FilterMetadataEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Metadata)
  return false;
#undef DO_
}

void Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Metadata)
  // map<string, .google.protobuf.Struct> filter_metadata = 1;
  if (!this->filter_metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "envoy.api.v2.Metadata.FilterMetadataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->filter_metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->filter_metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->filter_metadata().begin();
          it != this->filter_metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(filter_metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->filter_metadata().begin();
          it != this->filter_metadata().end(); ++it) {
        entry.reset(filter_metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Metadata)
}

::google::protobuf::uint8* Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Metadata)
  // map<string, .google.protobuf.Struct> filter_metadata = 1;
  if (!this->filter_metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "envoy.api.v2.Metadata.FilterMetadataEntry.key");
      }
    };

    if (deterministic &&
        this->filter_metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->filter_metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->filter_metadata().begin();
          it != this->filter_metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(filter_metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->filter_metadata().begin();
          it != this->filter_metadata().end(); ++it) {
        entry.reset(filter_metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Metadata)
  return target;
}

size_t Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Metadata)
  size_t total_size = 0;

  // map<string, .google.protobuf.Struct> filter_metadata = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->filter_metadata_size());
  {
    ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
        it = this->filter_metadata().begin();
        it != this->filter_metadata().end(); ++it) {
      entry.reset(filter_metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Metadata)
    MergeFrom(*source);
  }
}

void Metadata::MergeFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_metadata_.MergeFrom(from.filter_metadata_);
}

void Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata::IsInitialized() const {
  return true;
}

void Metadata::Swap(Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metadata::InternalSwap(Metadata* other) {
  filter_metadata_.Swap(&other->filter_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Metadata::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Metadata

// map<string, .google.protobuf.Struct> filter_metadata = 1;
int Metadata::filter_metadata_size() const {
  return filter_metadata_.size();
}
void Metadata::clear_filter_metadata() {
  filter_metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >&
Metadata::filter_metadata() const {
  // @@protoc_insertion_point(field_map:envoy.api.v2.Metadata.filter_metadata)
  return filter_metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >*
Metadata::mutable_filter_metadata() {
  // @@protoc_insertion_point(field_mutable_map:envoy.api.v2.Metadata.filter_metadata)
  return filter_metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuntimeUInt32::kDefaultValueFieldNumber;
const int RuntimeUInt32::kRuntimeKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuntimeUInt32::RuntimeUInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.RuntimeUInt32)
}
RuntimeUInt32::RuntimeUInt32(const RuntimeUInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  runtime_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime_key().size() > 0) {
    runtime_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_key_);
  }
  default_value_ = from.default_value_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.RuntimeUInt32)
}

void RuntimeUInt32::SharedCtor() {
  runtime_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_ = 0u;
  _cached_size_ = 0;
}

RuntimeUInt32::~RuntimeUInt32() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.RuntimeUInt32)
  SharedDtor();
}

void RuntimeUInt32::SharedDtor() {
  runtime_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RuntimeUInt32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RuntimeUInt32::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[5].descriptor;
}

const RuntimeUInt32& RuntimeUInt32::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

RuntimeUInt32* RuntimeUInt32::New(::google::protobuf::Arena* arena) const {
  RuntimeUInt32* n = new RuntimeUInt32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RuntimeUInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.RuntimeUInt32)
  runtime_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_ = 0u;
}

bool RuntimeUInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.RuntimeUInt32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 default_value = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime_key = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime_key().data(), this->runtime_key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.RuntimeUInt32.runtime_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.RuntimeUInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.RuntimeUInt32)
  return false;
#undef DO_
}

void RuntimeUInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.RuntimeUInt32)
  // uint32 default_value = 2;
  if (this->default_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->default_value(), output);
  }

  // string runtime_key = 3;
  if (this->runtime_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_key().data(), this->runtime_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.RuntimeUInt32.runtime_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->runtime_key(), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.RuntimeUInt32)
}

::google::protobuf::uint8* RuntimeUInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.RuntimeUInt32)
  // uint32 default_value = 2;
  if (this->default_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->default_value(), target);
  }

  // string runtime_key = 3;
  if (this->runtime_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_key().data(), this->runtime_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.RuntimeUInt32.runtime_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->runtime_key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.RuntimeUInt32)
  return target;
}

size_t RuntimeUInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.RuntimeUInt32)
  size_t total_size = 0;

  // string runtime_key = 3;
  if (this->runtime_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime_key());
  }

  // uint32 default_value = 2;
  if (this->default_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->default_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RuntimeUInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.RuntimeUInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const RuntimeUInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuntimeUInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.RuntimeUInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.RuntimeUInt32)
    MergeFrom(*source);
  }
}

void RuntimeUInt32::MergeFrom(const RuntimeUInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.RuntimeUInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.runtime_key().size() > 0) {

    runtime_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_key_);
  }
  if (from.default_value() != 0) {
    set_default_value(from.default_value());
  }
}

void RuntimeUInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.RuntimeUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuntimeUInt32::CopyFrom(const RuntimeUInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.RuntimeUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeUInt32::IsInitialized() const {
  return true;
}

void RuntimeUInt32::Swap(RuntimeUInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuntimeUInt32::InternalSwap(RuntimeUInt32* other) {
  runtime_key_.Swap(&other->runtime_key_);
  std::swap(default_value_, other->default_value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RuntimeUInt32::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RuntimeUInt32

// uint32 default_value = 2;
void RuntimeUInt32::clear_default_value() {
  default_value_ = 0u;
}
::google::protobuf::uint32 RuntimeUInt32::default_value() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RuntimeUInt32.default_value)
  return default_value_;
}
void RuntimeUInt32::set_default_value(::google::protobuf::uint32 value) {
  
  default_value_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.RuntimeUInt32.default_value)
}

// string runtime_key = 3;
void RuntimeUInt32::clear_runtime_key() {
  runtime_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RuntimeUInt32::runtime_key() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RuntimeUInt32.runtime_key)
  return runtime_key_.GetNoArena();
}
void RuntimeUInt32::set_runtime_key(const ::std::string& value) {
  
  runtime_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.RuntimeUInt32.runtime_key)
}
#if LANG_CXX11
void RuntimeUInt32::set_runtime_key(::std::string&& value) {
  
  runtime_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.RuntimeUInt32.runtime_key)
}
#endif
void RuntimeUInt32::set_runtime_key(const char* value) {
  
  runtime_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.RuntimeUInt32.runtime_key)
}
void RuntimeUInt32::set_runtime_key(const char* value, size_t size) {
  
  runtime_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.RuntimeUInt32.runtime_key)
}
::std::string* RuntimeUInt32::mutable_runtime_key() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RuntimeUInt32.runtime_key)
  return runtime_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RuntimeUInt32::release_runtime_key() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.RuntimeUInt32.runtime_key)
  
  return runtime_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RuntimeUInt32::set_allocated_runtime_key(::std::string* runtime_key) {
  if (runtime_key != NULL) {
    
  } else {
    
  }
  runtime_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime_key);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.RuntimeUInt32.runtime_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderValue::kKeyFieldNumber;
const int HeaderValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderValue::HeaderValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.HeaderValue)
}
HeaderValue::HeaderValue(const HeaderValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.HeaderValue)
}

void HeaderValue::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HeaderValue::~HeaderValue() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.HeaderValue)
  SharedDtor();
}

void HeaderValue::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HeaderValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeaderValue::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[6].descriptor;
}

const HeaderValue& HeaderValue::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeaderValue* HeaderValue::New(::google::protobuf::Arena* arena) const {
  HeaderValue* n = new HeaderValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeaderValue::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.HeaderValue)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HeaderValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.HeaderValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.HeaderValue.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.HeaderValue.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.HeaderValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.HeaderValue)
  return false;
#undef DO_
}

void HeaderValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.HeaderValue)
  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.HeaderValue.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.HeaderValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.HeaderValue)
}

::google::protobuf::uint8* HeaderValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.HeaderValue)
  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.HeaderValue.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.HeaderValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.HeaderValue)
  return target;
}

size_t HeaderValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.HeaderValue)
  size_t total_size = 0;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeaderValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.HeaderValue)
  GOOGLE_DCHECK_NE(&from, this);
  const HeaderValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.HeaderValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.HeaderValue)
    MergeFrom(*source);
  }
}

void HeaderValue::MergeFrom(const HeaderValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.HeaderValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void HeaderValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.HeaderValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderValue::CopyFrom(const HeaderValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.HeaderValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderValue::IsInitialized() const {
  return true;
}

void HeaderValue::Swap(HeaderValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeaderValue::InternalSwap(HeaderValue* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeaderValue::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeaderValue

// string key = 1;
void HeaderValue::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HeaderValue::key() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HeaderValue.key)
  return key_.GetNoArena();
}
void HeaderValue::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.HeaderValue.key)
}
#if LANG_CXX11
void HeaderValue::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.HeaderValue.key)
}
#endif
void HeaderValue::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.HeaderValue.key)
}
void HeaderValue::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.HeaderValue.key)
}
::std::string* HeaderValue::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HeaderValue.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HeaderValue::release_key() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HeaderValue.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HeaderValue::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HeaderValue.key)
}

// string value = 2;
void HeaderValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HeaderValue::value() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HeaderValue.value)
  return value_.GetNoArena();
}
void HeaderValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.HeaderValue.value)
}
#if LANG_CXX11
void HeaderValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.HeaderValue.value)
}
#endif
void HeaderValue::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.HeaderValue.value)
}
void HeaderValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.HeaderValue.value)
}
::std::string* HeaderValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HeaderValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HeaderValue::release_value() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HeaderValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HeaderValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HeaderValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderValueOption::kHeaderFieldNumber;
const int HeaderValueOption::kAppendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderValueOption::HeaderValueOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.HeaderValueOption)
}
HeaderValueOption::HeaderValueOption(const HeaderValueOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::envoy::api::v2::HeaderValue(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_append()) {
    append_ = new ::google::protobuf::BoolValue(*from.append_);
  } else {
    append_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.HeaderValueOption)
}

void HeaderValueOption::SharedCtor() {
  ::memset(&header_, 0, reinterpret_cast<char*>(&append_) -
    reinterpret_cast<char*>(&header_) + sizeof(append_));
  _cached_size_ = 0;
}

HeaderValueOption::~HeaderValueOption() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.HeaderValueOption)
  SharedDtor();
}

void HeaderValueOption::SharedDtor() {
  if (this != internal_default_instance()) {
    delete header_;
  }
  if (this != internal_default_instance()) {
    delete append_;
  }
}

void HeaderValueOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeaderValueOption::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[7].descriptor;
}

const HeaderValueOption& HeaderValueOption::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeaderValueOption* HeaderValueOption::New(::google::protobuf::Arena* arena) const {
  HeaderValueOption* n = new HeaderValueOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeaderValueOption::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.HeaderValueOption)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && append_ != NULL) {
    delete append_;
  }
  append_ = NULL;
}

bool HeaderValueOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.HeaderValueOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.HeaderValue header = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue append = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_append()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.HeaderValueOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.HeaderValueOption)
  return false;
#undef DO_
}

void HeaderValueOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.HeaderValueOption)
  // .envoy.api.v2.HeaderValue header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .google.protobuf.BoolValue append = 2;
  if (this->has_append()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->append_, output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.HeaderValueOption)
}

::google::protobuf::uint8* HeaderValueOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.HeaderValueOption)
  // .envoy.api.v2.HeaderValue header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // .google.protobuf.BoolValue append = 2;
  if (this->has_append()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->append_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.HeaderValueOption)
  return target;
}

size_t HeaderValueOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.HeaderValueOption)
  size_t total_size = 0;

  // .envoy.api.v2.HeaderValue header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // .google.protobuf.BoolValue append = 2;
  if (this->has_append()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->append_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeaderValueOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.HeaderValueOption)
  GOOGLE_DCHECK_NE(&from, this);
  const HeaderValueOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderValueOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.HeaderValueOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.HeaderValueOption)
    MergeFrom(*source);
  }
}

void HeaderValueOption::MergeFrom(const HeaderValueOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.HeaderValueOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    mutable_header()->::envoy::api::v2::HeaderValue::MergeFrom(from.header());
  }
  if (from.has_append()) {
    mutable_append()->::google::protobuf::BoolValue::MergeFrom(from.append());
  }
}

void HeaderValueOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.HeaderValueOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderValueOption::CopyFrom(const HeaderValueOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.HeaderValueOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderValueOption::IsInitialized() const {
  return true;
}

void HeaderValueOption::Swap(HeaderValueOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeaderValueOption::InternalSwap(HeaderValueOption* other) {
  std::swap(header_, other->header_);
  std::swap(append_, other->append_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeaderValueOption::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeaderValueOption

// .envoy.api.v2.HeaderValue header = 1;
bool HeaderValueOption::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void HeaderValueOption::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::envoy::api::v2::HeaderValue& HeaderValueOption::header() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HeaderValueOption.header)
  return header_ != NULL ? *header_
                         : *::envoy::api::v2::HeaderValue::internal_default_instance();
}
::envoy::api::v2::HeaderValue* HeaderValueOption::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::envoy::api::v2::HeaderValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HeaderValueOption.header)
  return header_;
}
::envoy::api::v2::HeaderValue* HeaderValueOption::release_header() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HeaderValueOption.header)
  
  ::envoy::api::v2::HeaderValue* temp = header_;
  header_ = NULL;
  return temp;
}
void HeaderValueOption::set_allocated_header(::envoy::api::v2::HeaderValue* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HeaderValueOption.header)
}

// .google.protobuf.BoolValue append = 2;
bool HeaderValueOption::has_append() const {
  return this != internal_default_instance() && append_ != NULL;
}
void HeaderValueOption::clear_append() {
  if (GetArenaNoVirtual() == NULL && append_ != NULL) delete append_;
  append_ = NULL;
}
const ::google::protobuf::BoolValue& HeaderValueOption::append() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HeaderValueOption.append)
  return append_ != NULL ? *append_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
::google::protobuf::BoolValue* HeaderValueOption::mutable_append() {
  
  if (append_ == NULL) {
    append_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HeaderValueOption.append)
  return append_;
}
::google::protobuf::BoolValue* HeaderValueOption::release_append() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HeaderValueOption.append)
  
  ::google::protobuf::BoolValue* temp = append_;
  append_ = NULL;
  return temp;
}
void HeaderValueOption::set_allocated_append(::google::protobuf::BoolValue* append) {
  delete append_;
  if (append != NULL && append->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_append = new ::google::protobuf::BoolValue;
    new_append->CopyFrom(*append);
    append = new_append;
  }
  append_ = append;
  if (append) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HeaderValueOption.append)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoveryRequest::kVersionInfoFieldNumber;
const int DiscoveryRequest::kNodeFieldNumber;
const int DiscoveryRequest::kResourceNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoveryRequest::DiscoveryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.DiscoveryRequest)
}
DiscoveryRequest::DiscoveryRequest(const DiscoveryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resource_names_(from.resource_names_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_info().size() > 0) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.has_node()) {
    node_ = new ::envoy::api::v2::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.DiscoveryRequest)
}

void DiscoveryRequest::SharedCtor() {
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ = NULL;
  _cached_size_ = 0;
}

DiscoveryRequest::~DiscoveryRequest() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.DiscoveryRequest)
  SharedDtor();
}

void DiscoveryRequest::SharedDtor() {
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete node_;
  }
}

void DiscoveryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DiscoveryRequest::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[8].descriptor;
}

const DiscoveryRequest& DiscoveryRequest::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

DiscoveryRequest* DiscoveryRequest::New(::google::protobuf::Arena* arena) const {
  DiscoveryRequest* n = new DiscoveryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DiscoveryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.DiscoveryRequest)
  resource_names_.Clear();
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
}

bool DiscoveryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.DiscoveryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version_info = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_info().data(), this->version_info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryRequest.version_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Node node = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string resource_names = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resource_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_names(this->resource_names_size() - 1).data(),
            this->resource_names(this->resource_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryRequest.resource_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.DiscoveryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.DiscoveryRequest)
  return false;
#undef DO_
}

void DiscoveryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.DiscoveryRequest)
  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), this->version_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.version_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version_info(), output);
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->node_, output);
  }

  // repeated string resource_names = 3;
  for (int i = 0; i < this->resource_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), this->resource_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.resource_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->resource_names(i), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.DiscoveryRequest)
}

::google::protobuf::uint8* DiscoveryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.DiscoveryRequest)
  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), this->version_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.version_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version_info(), target);
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->node_, false, target);
  }

  // repeated string resource_names = 3;
  for (int i = 0; i < this->resource_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), this->resource_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.resource_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->resource_names(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.DiscoveryRequest)
  return target;
}

size_t DiscoveryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.DiscoveryRequest)
  size_t total_size = 0;

  // repeated string resource_names = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_names_size());
  for (int i = 0; i < this->resource_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resource_names(i));
  }

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_info());
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DiscoveryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.DiscoveryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoveryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoveryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.DiscoveryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.DiscoveryRequest)
    MergeFrom(*source);
  }
}

void DiscoveryRequest::MergeFrom(const DiscoveryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.DiscoveryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_names_.MergeFrom(from.resource_names_);
  if (from.version_info().size() > 0) {

    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.has_node()) {
    mutable_node()->::envoy::api::v2::Node::MergeFrom(from.node());
  }
}

void DiscoveryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.DiscoveryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoveryRequest::CopyFrom(const DiscoveryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.DiscoveryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveryRequest::IsInitialized() const {
  return true;
}

void DiscoveryRequest::Swap(DiscoveryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoveryRequest::InternalSwap(DiscoveryRequest* other) {
  resource_names_.UnsafeArenaSwap(&other->resource_names_);
  version_info_.Swap(&other->version_info_);
  std::swap(node_, other->node_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DiscoveryRequest::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DiscoveryRequest

// string version_info = 1;
void DiscoveryRequest::clear_version_info() {
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DiscoveryRequest::version_info() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryRequest.version_info)
  return version_info_.GetNoArena();
}
void DiscoveryRequest::set_version_info(const ::std::string& value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryRequest.version_info)
}
#if LANG_CXX11
void DiscoveryRequest::set_version_info(::std::string&& value) {
  
  version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.DiscoveryRequest.version_info)
}
#endif
void DiscoveryRequest::set_version_info(const char* value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryRequest.version_info)
}
void DiscoveryRequest::set_version_info(const char* value, size_t size) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryRequest.version_info)
}
::std::string* DiscoveryRequest::mutable_version_info() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryRequest.version_info)
  return version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DiscoveryRequest::release_version_info() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryRequest.version_info)
  
  return version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DiscoveryRequest::set_allocated_version_info(::std::string* version_info) {
  if (version_info != NULL) {
    
  } else {
    
  }
  version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_info);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryRequest.version_info)
}

// .envoy.api.v2.Node node = 2;
bool DiscoveryRequest::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
void DiscoveryRequest::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
const ::envoy::api::v2::Node& DiscoveryRequest::node() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryRequest.node)
  return node_ != NULL ? *node_
                         : *::envoy::api::v2::Node::internal_default_instance();
}
::envoy::api::v2::Node* DiscoveryRequest::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::envoy::api::v2::Node;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryRequest.node)
  return node_;
}
::envoy::api::v2::Node* DiscoveryRequest::release_node() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryRequest.node)
  
  ::envoy::api::v2::Node* temp = node_;
  node_ = NULL;
  return temp;
}
void DiscoveryRequest::set_allocated_node(::envoy::api::v2::Node* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryRequest.node)
}

// repeated string resource_names = 3;
int DiscoveryRequest::resource_names_size() const {
  return resource_names_.size();
}
void DiscoveryRequest::clear_resource_names() {
  resource_names_.Clear();
}
const ::std::string& DiscoveryRequest::resource_names(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryRequest.resource_names)
  return resource_names_.Get(index);
}
::std::string* DiscoveryRequest::mutable_resource_names(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryRequest.resource_names)
  return resource_names_.Mutable(index);
}
void DiscoveryRequest::set_resource_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryRequest.resource_names)
  resource_names_.Mutable(index)->assign(value);
}
void DiscoveryRequest::set_resource_names(int index, const char* value) {
  resource_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryRequest.resource_names)
}
void DiscoveryRequest::set_resource_names(int index, const char* value, size_t size) {
  resource_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryRequest.resource_names)
}
::std::string* DiscoveryRequest::add_resource_names() {
  // @@protoc_insertion_point(field_add_mutable:envoy.api.v2.DiscoveryRequest.resource_names)
  return resource_names_.Add();
}
void DiscoveryRequest::add_resource_names(const ::std::string& value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:envoy.api.v2.DiscoveryRequest.resource_names)
}
void DiscoveryRequest::add_resource_names(const char* value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:envoy.api.v2.DiscoveryRequest.resource_names)
}
void DiscoveryRequest::add_resource_names(const char* value, size_t size) {
  resource_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:envoy.api.v2.DiscoveryRequest.resource_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DiscoveryRequest::resource_names() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.DiscoveryRequest.resource_names)
  return resource_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DiscoveryRequest::mutable_resource_names() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.DiscoveryRequest.resource_names)
  return &resource_names_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoveryResponse::kVersionInfoFieldNumber;
const int DiscoveryResponse::kResourcesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoveryResponse::DiscoveryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.DiscoveryResponse)
}
DiscoveryResponse::DiscoveryResponse(const DiscoveryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resources_(from.resources_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_info().size() > 0) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.DiscoveryResponse)
}

void DiscoveryResponse::SharedCtor() {
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DiscoveryResponse::~DiscoveryResponse() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.DiscoveryResponse)
  SharedDtor();
}

void DiscoveryResponse::SharedDtor() {
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DiscoveryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DiscoveryResponse::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[9].descriptor;
}

const DiscoveryResponse& DiscoveryResponse::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

DiscoveryResponse* DiscoveryResponse::New(::google::protobuf::Arena* arena) const {
  DiscoveryResponse* n = new DiscoveryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DiscoveryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.DiscoveryResponse)
  resources_.Clear();
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DiscoveryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.DiscoveryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version_info = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_info().data(), this->version_info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryResponse.version_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any resources = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_resources()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.DiscoveryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.DiscoveryResponse)
  return false;
#undef DO_
}

void DiscoveryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.DiscoveryResponse)
  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), this->version_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryResponse.version_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version_info(), output);
  }

  // repeated .google.protobuf.Any resources = 2;
  for (unsigned int i = 0, n = this->resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resources(i), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.DiscoveryResponse)
}

::google::protobuf::uint8* DiscoveryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.DiscoveryResponse)
  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), this->version_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryResponse.version_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version_info(), target);
  }

  // repeated .google.protobuf.Any resources = 2;
  for (unsigned int i = 0, n = this->resources_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->resources(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.DiscoveryResponse)
  return target;
}

size_t DiscoveryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.DiscoveryResponse)
  size_t total_size = 0;

  // repeated .google.protobuf.Any resources = 2;
  {
    unsigned int count = this->resources_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resources(i));
    }
  }

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DiscoveryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.DiscoveryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoveryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoveryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.DiscoveryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.DiscoveryResponse)
    MergeFrom(*source);
  }
}

void DiscoveryResponse::MergeFrom(const DiscoveryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.DiscoveryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resources_.MergeFrom(from.resources_);
  if (from.version_info().size() > 0) {

    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
}

void DiscoveryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.DiscoveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoveryResponse::CopyFrom(const DiscoveryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.DiscoveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveryResponse::IsInitialized() const {
  return true;
}

void DiscoveryResponse::Swap(DiscoveryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoveryResponse::InternalSwap(DiscoveryResponse* other) {
  resources_.UnsafeArenaSwap(&other->resources_);
  version_info_.Swap(&other->version_info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DiscoveryResponse::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DiscoveryResponse

// string version_info = 1;
void DiscoveryResponse::clear_version_info() {
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DiscoveryResponse::version_info() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryResponse.version_info)
  return version_info_.GetNoArena();
}
void DiscoveryResponse::set_version_info(const ::std::string& value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryResponse.version_info)
}
#if LANG_CXX11
void DiscoveryResponse::set_version_info(::std::string&& value) {
  
  version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.DiscoveryResponse.version_info)
}
#endif
void DiscoveryResponse::set_version_info(const char* value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryResponse.version_info)
}
void DiscoveryResponse::set_version_info(const char* value, size_t size) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryResponse.version_info)
}
::std::string* DiscoveryResponse::mutable_version_info() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryResponse.version_info)
  return version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DiscoveryResponse::release_version_info() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryResponse.version_info)
  
  return version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DiscoveryResponse::set_allocated_version_info(::std::string* version_info) {
  if (version_info != NULL) {
    
  } else {
    
  }
  version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_info);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryResponse.version_info)
}

// repeated .google.protobuf.Any resources = 2;
int DiscoveryResponse::resources_size() const {
  return resources_.size();
}
void DiscoveryResponse::clear_resources() {
  resources_.Clear();
}
const ::google::protobuf::Any& DiscoveryResponse::resources(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryResponse.resources)
  return resources_.Get(index);
}
::google::protobuf::Any* DiscoveryResponse::mutable_resources(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryResponse.resources)
  return resources_.Mutable(index);
}
::google::protobuf::Any* DiscoveryResponse::add_resources() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.DiscoveryResponse.resources)
  return resources_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
DiscoveryResponse::mutable_resources() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.DiscoveryResponse.resources)
  return &resources_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
DiscoveryResponse::resources() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.DiscoveryResponse.resources)
  return resources_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
