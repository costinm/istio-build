// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/base.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace envoy {
namespace api {
namespace v2 {
class LocalityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Locality>
     _instance;
} _Locality_default_instance_;
class NodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Node>
     _instance;
} _Node_default_instance_;
class EndpointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Endpoint>
     _instance;
} _Endpoint_default_instance_;
class Metadata_FilterMetadataEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Metadata::Metadata_FilterMetadataEntry>
     _instance;
} _Metadata_FilterMetadataEntry_default_instance_;
class MetadataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Metadata>
     _instance;
} _Metadata_default_instance_;
class RuntimeUInt32DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RuntimeUInt32>
     _instance;
} _RuntimeUInt32_default_instance_;
class HeaderValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HeaderValue>
     _instance;
} _HeaderValue_default_instance_;
class HeaderValueOptionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HeaderValueOption>
     _instance;
} _HeaderValueOption_default_instance_;
class ApiConfigSourceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ApiConfigSource>
     _instance;
} _ApiConfigSource_default_instance_;
class AggregatedConfigSourceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AggregatedConfigSource>
     _instance;
} _AggregatedConfigSource_default_instance_;
class ConfigSourceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfigSource>
     _instance;
  ::google::protobuf::internal::ArenaStringPtr path_;
  const ::envoy::api::v2::ApiConfigSource* api_config_source_;
  const ::envoy::api::v2::AggregatedConfigSource* ads_;
} _ConfigSource_default_instance_;

namespace protobuf_api_2fbase_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Locality, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Locality, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Locality, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Locality, sub_zone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, build_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Endpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Endpoint, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, filter_metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuntimeUInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuntimeUInt32, default_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuntimeUInt32, runtime_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValue, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValueOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValueOption, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderValueOption, append_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigSource, api_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigSource, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigSource, refresh_delay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AggregatedConfigSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigSource, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigSource, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(ConfigSourceDefaultTypeInternal, path_),
  offsetof(ConfigSourceDefaultTypeInternal, api_config_source_),
  offsetof(ConfigSourceDefaultTypeInternal, ads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigSource, config_source_specifier_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Locality)},
  { 8, -1, sizeof(Node)},
  { 18, -1, sizeof(Endpoint)},
  { 24, -1, sizeof(Metadata)},
  { 30, -1, sizeof(RuntimeUInt32)},
  { 37, -1, sizeof(HeaderValue)},
  { 44, -1, sizeof(HeaderValueOption)},
  { 51, -1, sizeof(ApiConfigSource)},
  { 59, -1, sizeof(AggregatedConfigSource)},
  { 64, -1, sizeof(ConfigSource)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Locality_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Endpoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Metadata_FilterMetadataEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Metadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RuntimeUInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeaderValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeaderValueOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ApiConfigSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AggregatedConfigSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigSource_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/base.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[3].reflection = Metadata::Metadata_FilterMetadataEntry::CreateReflection(file_level_metadata[3].descriptor, _Metadata_FilterMetadataEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::envoy::api::v2::protobuf_api_2faddress_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  _Locality_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Locality_default_instance_);_Node_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Node_default_instance_);_Endpoint_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Endpoint_default_instance_);_Metadata_FilterMetadataEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Metadata_FilterMetadataEntry_default_instance_);_Metadata_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Metadata_default_instance_);_RuntimeUInt32_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RuntimeUInt32_default_instance_);_HeaderValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HeaderValue_default_instance_);_HeaderValueOption_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HeaderValueOption_default_instance_);_ApiConfigSource_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ApiConfigSource_default_instance_);_AggregatedConfigSource_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AggregatedConfigSource_default_instance_);_ConfigSource_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfigSource_default_instance_);_Node_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  _Node_default_instance_._instance.get_mutable()->locality_ = const_cast< ::envoy::api::v2::Locality*>(
      ::envoy::api::v2::Locality::internal_default_instance());
  _Endpoint_default_instance_._instance.get_mutable()->address_ = const_cast< ::envoy::api::v2::Address*>(
      ::envoy::api::v2::Address::internal_default_instance());
  _Metadata_FilterMetadataEntry_default_instance_._instance.get_mutable()->set_default_instance(_Metadata_FilterMetadataEntry_default_instance_._instance.get_mutable());
  _Metadata_FilterMetadataEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _HeaderValueOption_default_instance_._instance.get_mutable()->header_ = const_cast< ::envoy::api::v2::HeaderValue*>(
      ::envoy::api::v2::HeaderValue::internal_default_instance());
  _HeaderValueOption_default_instance_._instance.get_mutable()->append_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _ApiConfigSource_default_instance_._instance.get_mutable()->refresh_delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _ConfigSource_default_instance_.path_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _ConfigSource_default_instance_.api_config_source_ = const_cast< ::envoy::api::v2::ApiConfigSource*>(
      ::envoy::api::v2::ApiConfigSource::internal_default_instance());
  _ConfigSource_default_instance_.ads_ = const_cast< ::envoy::api::v2::AggregatedConfigSource*>(
      ::envoy::api::v2::AggregatedConfigSource::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016api/base.proto\022\014envoy.api.v2\032\021api/addr"
      "ess.proto\032\036google/protobuf/duration.prot"
      "o\032\034google/protobuf/struct.proto\032\036google/"
      "protobuf/wrappers.proto\":\n\010Locality\022\016\n\006r"
      "egion\030\001 \001(\t\022\014\n\004zone\030\002 \001(\t\022\020\n\010sub_zone\030\003 "
      "\001(\t\"\217\001\n\004Node\022\n\n\002id\030\001 \001(\t\022\017\n\007cluster\030\002 \001("
      "\t\022)\n\010metadata\030\003 \001(\0132\027.google.protobuf.St"
      "ruct\022(\n\010locality\030\004 \001(\0132\026.envoy.api.v2.Lo"
      "cality\022\025\n\rbuild_version\030\005 \001(\t\"2\n\010Endpoin"
      "t\022&\n\007address\030\001 \001(\0132\025.envoy.api.v2.Addres"
      "s\"\237\001\n\010Metadata\022C\n\017filter_metadata\030\001 \003(\0132"
      "*.envoy.api.v2.Metadata.FilterMetadataEn"
      "try\032N\n\023FilterMetadataEntry\022\013\n\003key\030\001 \001(\t\022"
      "&\n\005value\030\002 \001(\0132\027.google.protobuf.Struct:"
      "\0028\001\";\n\rRuntimeUInt32\022\025\n\rdefault_value\030\002 "
      "\001(\r\022\023\n\013runtime_key\030\003 \001(\t\")\n\013HeaderValue\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"j\n\021HeaderVal"
      "ueOption\022)\n\006header\030\001 \001(\0132\031.envoy.api.v2."
      "HeaderValue\022*\n\006append\030\002 \001(\0132\032.google.pro"
      "tobuf.BoolValue\"\302\001\n\017ApiConfigSource\0227\n\010a"
      "pi_type\030\001 \001(\0162%.envoy.api.v2.ApiConfigSo"
      "urce.ApiType\022\024\n\014cluster_name\030\002 \003(\t\0220\n\rre"
      "fresh_delay\030\003 \001(\0132\031.google.protobuf.Dura"
      "tion\".\n\007ApiType\022\017\n\013REST_LEGACY\020\000\022\010\n\004REST"
      "\020\001\022\010\n\004GRPC\020\002\"\030\n\026AggregatedConfigSource\"\252"
      "\001\n\014ConfigSource\022\016\n\004path\030\001 \001(\tH\000\022:\n\021api_c"
      "onfig_source\030\002 \001(\0132\035.envoy.api.v2.ApiCon"
      "figSourceH\000\0223\n\003ads\030\003 \001(\0132$.envoy.api.v2."
      "AggregatedConfigSourceH\000B\031\n\027config_sourc"
      "e_specifier*(\n\017RoutingPriority\022\013\n\007DEFAUL"
      "T\020\000\022\010\n\004HIGH\020\001*~\n\rRequestMethod\022\026\n\022METHOD"
      "_UNSPECIFIED\020\000\022\007\n\003GET\020\001\022\010\n\004HEAD\020\002\022\010\n\004POS"
      "T\020\003\022\007\n\003PUT\020\004\022\n\n\006DELETE\020\005\022\013\n\007CONNECT\020\006\022\013\n"
      "\007OPTIONS\020\007\022\t\n\005TRACE\020\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1349);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/base.proto", &protobuf_RegisterTypes);
  ::envoy::api::v2::protobuf_api_2faddress_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2fbase_2eproto

const ::google::protobuf::EnumDescriptor* ApiConfigSource_ApiType_descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_enum_descriptors[0];
}
bool ApiConfigSource_ApiType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ApiConfigSource_ApiType ApiConfigSource::REST_LEGACY;
const ApiConfigSource_ApiType ApiConfigSource::REST;
const ApiConfigSource_ApiType ApiConfigSource::GRPC;
const ApiConfigSource_ApiType ApiConfigSource::ApiType_MIN;
const ApiConfigSource_ApiType ApiConfigSource::ApiType_MAX;
const int ApiConfigSource::ApiType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RoutingPriority_descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_enum_descriptors[1];
}
bool RoutingPriority_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RequestMethod_descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_enum_descriptors[2];
}
bool RequestMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Locality::kRegionFieldNumber;
const int Locality::kZoneFieldNumber;
const int Locality::kSubZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Locality::Locality()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Locality)
}
Locality::Locality(const Locality& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  sub_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sub_zone().size() > 0) {
    sub_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_zone_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Locality)
}

void Locality::SharedCtor() {
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Locality::~Locality() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Locality)
  SharedDtor();
}

void Locality::SharedDtor() {
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Locality::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Locality::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Locality& Locality::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Locality* Locality::New(::google::protobuf::Arena* arena) const {
  Locality* n = new Locality;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Locality::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Locality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Locality::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Locality)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string region = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Locality.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Locality.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sub_zone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sub_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sub_zone().data(), static_cast<int>(this->sub_zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Locality.sub_zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Locality)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Locality)
  return false;
#undef DO_
}

void Locality::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Locality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string region = 1;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->region(), output);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // string sub_zone = 3;
  if (this->sub_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub_zone().data(), static_cast<int>(this->sub_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.sub_zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sub_zone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Locality)
}

::google::protobuf::uint8* Locality::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Locality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string region = 1;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->region(), target);
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // string sub_zone = 3;
  if (this->sub_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub_zone().data(), static_cast<int>(this->sub_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Locality.sub_zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sub_zone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Locality)
  return target;
}

size_t Locality::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Locality)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string region = 1;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string zone = 2;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  // string sub_zone = 3;
  if (this->sub_zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sub_zone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Locality::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Locality)
  GOOGLE_DCHECK_NE(&from, this);
  const Locality* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Locality>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Locality)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Locality)
    MergeFrom(*source);
  }
}

void Locality::MergeFrom(const Locality& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Locality)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  if (from.sub_zone().size() > 0) {

    sub_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_zone_);
  }
}

void Locality::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Locality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Locality::CopyFrom(const Locality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Locality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Locality::IsInitialized() const {
  return true;
}

void Locality::Swap(Locality* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Locality::InternalSwap(Locality* other) {
  using std::swap;
  region_.Swap(&other->region_);
  zone_.Swap(&other->zone_);
  sub_zone_.Swap(&other->sub_zone_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Locality::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Locality

// string region = 1;
void Locality::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Locality::region() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Locality.region)
  return region_.GetNoArena();
}
void Locality::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Locality.region)
}
#if LANG_CXX11
void Locality::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Locality.region)
}
#endif
void Locality::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Locality.region)
}
void Locality::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Locality.region)
}
::std::string* Locality::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Locality.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Locality::release_region() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Locality.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Locality::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Locality.region)
}

// string zone = 2;
void Locality::clear_zone() {
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Locality::zone() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Locality.zone)
  return zone_.GetNoArena();
}
void Locality::set_zone(const ::std::string& value) {
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Locality.zone)
}
#if LANG_CXX11
void Locality::set_zone(::std::string&& value) {
  
  zone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Locality.zone)
}
#endif
void Locality::set_zone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Locality.zone)
}
void Locality::set_zone(const char* value, size_t size) {
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Locality.zone)
}
::std::string* Locality::mutable_zone() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Locality.zone)
  return zone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Locality::release_zone() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Locality.zone)
  
  return zone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Locality::set_allocated_zone(::std::string* zone) {
  if (zone != NULL) {
    
  } else {
    
  }
  zone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zone);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Locality.zone)
}

// string sub_zone = 3;
void Locality::clear_sub_zone() {
  sub_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Locality::sub_zone() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Locality.sub_zone)
  return sub_zone_.GetNoArena();
}
void Locality::set_sub_zone(const ::std::string& value) {
  
  sub_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Locality.sub_zone)
}
#if LANG_CXX11
void Locality::set_sub_zone(::std::string&& value) {
  
  sub_zone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Locality.sub_zone)
}
#endif
void Locality::set_sub_zone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sub_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Locality.sub_zone)
}
void Locality::set_sub_zone(const char* value, size_t size) {
  
  sub_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Locality.sub_zone)
}
::std::string* Locality::mutable_sub_zone() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Locality.sub_zone)
  return sub_zone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Locality::release_sub_zone() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Locality.sub_zone)
  
  return sub_zone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Locality::set_allocated_sub_zone(::std::string* sub_zone) {
  if (sub_zone != NULL) {
    
  } else {
    
  }
  sub_zone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sub_zone);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Locality.sub_zone)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kClusterFieldNumber;
const int Node::kMetadataFieldNumber;
const int Node::kLocalityFieldNumber;
const int Node::kBuildVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster().size() > 0) {
    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  build_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_version().size() > 0) {
    build_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_version_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::google::protobuf::Struct(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_locality()) {
    locality_ = new ::envoy::api::v2::Locality(*from.locality_);
  } else {
    locality_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Node)
}

void Node::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locality_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(locality_));
  _cached_size_ = 0;
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete locality_;
}

void Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Node& Node::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Node* Node::New(::google::protobuf::Arena* arena) const {
  Node* n = new Node;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) {
    delete locality_;
  }
  locality_ = NULL;
  _internal_metadata_.Clear();
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Node.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster().data(), static_cast<int>(this->cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Node.cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Locality locality = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_version().data(), static_cast<int>(this->build_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Node.build_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Node.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Node.cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster(), output);
  }

  // .google.protobuf.Struct metadata = 3;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->metadata_, output);
  }

  // .envoy.api.v2.Locality locality = 4;
  if (this->has_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->locality_, output);
  }

  // string build_version = 5;
  if (this->build_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_version().data(), static_cast<int>(this->build_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Node.build_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->build_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Node.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Node.cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster(), target);
  }

  // .google.protobuf.Struct metadata = 3;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->metadata_, deterministic, target);
  }

  // .envoy.api.v2.Locality locality = 4;
  if (this->has_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->locality_, deterministic, target);
  }

  // string build_version = 5;
  if (this->build_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_version().data(), static_cast<int>(this->build_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Node.build_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->build_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Node)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string cluster = 2;
  if (this->cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster());
  }

  // string build_version = 5;
  if (this->build_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_version());
  }

  // .google.protobuf.Struct metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metadata_);
  }

  // .envoy.api.v2.Locality locality = 4;
  if (this->has_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locality_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.cluster().size() > 0) {

    cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_);
  }
  if (from.build_version().size() > 0) {

    build_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_version_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::google::protobuf::Struct::MergeFrom(from.metadata());
  }
  if (from.has_locality()) {
    mutable_locality()->::envoy::api::v2::Locality::MergeFrom(from.locality());
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  using std::swap;
  id_.Swap(&other->id_);
  cluster_.Swap(&other->cluster_);
  build_version_.Swap(&other->build_version_);
  swap(metadata_, other->metadata_);
  swap(locality_, other->locality_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// string id = 1;
void Node::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Node::id() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Node.id)
  return id_.GetNoArena();
}
void Node::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Node.id)
}
#if LANG_CXX11
void Node::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Node.id)
}
#endif
void Node::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Node.id)
}
void Node::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Node.id)
}
::std::string* Node::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Node.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Node::release_id() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Node.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Node::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Node.id)
}

// string cluster = 2;
void Node::clear_cluster() {
  cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Node::cluster() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Node.cluster)
  return cluster_.GetNoArena();
}
void Node::set_cluster(const ::std::string& value) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Node.cluster)
}
#if LANG_CXX11
void Node::set_cluster(::std::string&& value) {
  
  cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Node.cluster)
}
#endif
void Node::set_cluster(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Node.cluster)
}
void Node::set_cluster(const char* value, size_t size) {
  
  cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Node.cluster)
}
::std::string* Node::mutable_cluster() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Node.cluster)
  return cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Node::release_cluster() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Node.cluster)
  
  return cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Node::set_allocated_cluster(::std::string* cluster) {
  if (cluster != NULL) {
    
  } else {
    
  }
  cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Node.cluster)
}

// .google.protobuf.Struct metadata = 3;
bool Node::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
void Node::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) delete metadata_;
  metadata_ = NULL;
}
const ::google::protobuf::Struct& Node::metadata() const {
  const ::google::protobuf::Struct* p = metadata_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Node.metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
::google::protobuf::Struct* Node::mutable_metadata() {
  
  if (metadata_ == NULL) {
    metadata_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Node.metadata)
  return metadata_;
}
::google::protobuf::Struct* Node::release_metadata() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Node.metadata)
  
  ::google::protobuf::Struct* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
void Node::set_allocated_metadata(::google::protobuf::Struct* metadata) {
  delete metadata_;
  if (metadata != NULL && metadata->GetArena() != NULL) {
    ::google::protobuf::Struct* new_metadata = new ::google::protobuf::Struct;
    new_metadata->CopyFrom(*metadata);
    metadata = new_metadata;
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Node.metadata)
}

// .envoy.api.v2.Locality locality = 4;
bool Node::has_locality() const {
  return this != internal_default_instance() && locality_ != NULL;
}
void Node::clear_locality() {
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) delete locality_;
  locality_ = NULL;
}
const ::envoy::api::v2::Locality& Node::locality() const {
  const ::envoy::api::v2::Locality* p = locality_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Node.locality)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Locality*>(
      &::envoy::api::v2::_Locality_default_instance_);
}
::envoy::api::v2::Locality* Node::mutable_locality() {
  
  if (locality_ == NULL) {
    locality_ = new ::envoy::api::v2::Locality;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Node.locality)
  return locality_;
}
::envoy::api::v2::Locality* Node::release_locality() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Node.locality)
  
  ::envoy::api::v2::Locality* temp = locality_;
  locality_ = NULL;
  return temp;
}
void Node::set_allocated_locality(::envoy::api::v2::Locality* locality) {
  delete locality_;
  locality_ = locality;
  if (locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Node.locality)
}

// string build_version = 5;
void Node::clear_build_version() {
  build_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Node::build_version() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Node.build_version)
  return build_version_.GetNoArena();
}
void Node::set_build_version(const ::std::string& value) {
  
  build_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Node.build_version)
}
#if LANG_CXX11
void Node::set_build_version(::std::string&& value) {
  
  build_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Node.build_version)
}
#endif
void Node::set_build_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  build_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Node.build_version)
}
void Node::set_build_version(const char* value, size_t size) {
  
  build_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Node.build_version)
}
::std::string* Node::mutable_build_version() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Node.build_version)
  return build_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Node::release_build_version() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Node.build_version)
  
  return build_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Node::set_allocated_build_version(::std::string* build_version) {
  if (build_version != NULL) {
    
  } else {
    
  }
  build_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), build_version);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Node.build_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Endpoint::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Endpoint::Endpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Endpoint)
}
Endpoint::Endpoint(const Endpoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::envoy::api::v2::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Endpoint)
}

void Endpoint::SharedCtor() {
  address_ = NULL;
  _cached_size_ = 0;
}

Endpoint::~Endpoint() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Endpoint)
  SharedDtor();
}

void Endpoint::SharedDtor() {
  if (this != internal_default_instance()) delete address_;
}

void Endpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Endpoint::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Endpoint& Endpoint::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Endpoint* Endpoint::New(::google::protobuf::Arena* arena) const {
  Endpoint* n = new Endpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Endpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Endpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  _internal_metadata_.Clear();
}

bool Endpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Endpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Address address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Endpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Endpoint)
  return false;
#undef DO_
}

void Endpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Endpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Address address = 1;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->address_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Endpoint)
}

::google::protobuf::uint8* Endpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Endpoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Address address = 1;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->address_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Endpoint)
  return target;
}

size_t Endpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Endpoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.Address address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Endpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Endpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Endpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Endpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Endpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Endpoint)
    MergeFrom(*source);
  }
}

void Endpoint::MergeFrom(const Endpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Endpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::envoy::api::v2::Address::MergeFrom(from.address());
  }
}

void Endpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Endpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Endpoint::CopyFrom(const Endpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Endpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Endpoint::IsInitialized() const {
  return true;
}

void Endpoint::Swap(Endpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Endpoint::InternalSwap(Endpoint* other) {
  using std::swap;
  swap(address_, other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Endpoint::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Endpoint

// .envoy.api.v2.Address address = 1;
bool Endpoint::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void Endpoint::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::envoy::api::v2::Address& Endpoint::address() const {
  const ::envoy::api::v2::Address* p = address_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Endpoint.address)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Address*>(
      &::envoy::api::v2::_Address_default_instance_);
}
::envoy::api::v2::Address* Endpoint::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::envoy::api::v2::Address;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Endpoint.address)
  return address_;
}
::envoy::api::v2::Address* Endpoint::release_address() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Endpoint.address)
  
  ::envoy::api::v2::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void Endpoint::set_allocated_address(::envoy::api::v2::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Endpoint.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Metadata::Metadata_FilterMetadataEntry::Metadata_FilterMetadataEntry() {}
Metadata::Metadata_FilterMetadataEntry::Metadata_FilterMetadataEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Metadata::Metadata_FilterMetadataEntry::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[3];
}
void Metadata::Metadata_FilterMetadataEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Metadata::Metadata_FilterMetadataEntry::MergeFrom(const Metadata_FilterMetadataEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metadata::kFilterMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metadata::Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Metadata)
}
Metadata::Metadata(const Metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_metadata_.MergeFrom(from.filter_metadata_);
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Metadata)
}

void Metadata::SharedCtor() {
  _cached_size_ = 0;
}

Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Metadata)
  SharedDtor();
}

void Metadata::SharedDtor() {
}

void Metadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Metadata::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metadata& Metadata::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Metadata* Metadata::New(::google::protobuf::Arena* arena) const {
  Metadata* n = new Metadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filter_metadata_.Clear();
  _internal_metadata_.Clear();
}

bool Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Metadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .google.protobuf.Struct> filter_metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Metadata_FilterMetadataEntry::Parser< ::google::protobuf::internal::MapField<
              Metadata_FilterMetadataEntry,
              ::std::string, ::google::protobuf::Struct,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct > > parser(&filter_metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Metadata.FilterMetadataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Metadata)
  return false;
#undef DO_
}

void Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .google.protobuf.Struct> filter_metadata = 1;
  if (!this->filter_metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "envoy.api.v2.Metadata.FilterMetadataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->filter_metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->filter_metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->filter_metadata().begin();
          it != this->filter_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(filter_metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->filter_metadata().begin();
          it != this->filter_metadata().end(); ++it) {
        entry.reset(filter_metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Metadata)
}

::google::protobuf::uint8* Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .google.protobuf.Struct> filter_metadata = 1;
  if (!this->filter_metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "envoy.api.v2.Metadata.FilterMetadataEntry.key");
      }
    };

    if (deterministic &&
        this->filter_metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->filter_metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->filter_metadata().begin();
          it != this->filter_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(filter_metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->filter_metadata().begin();
          it != this->filter_metadata().end(); ++it) {
        entry.reset(filter_metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Metadata)
  return target;
}

size_t Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Metadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .google.protobuf.Struct> filter_metadata = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->filter_metadata_size());
  {
    ::google::protobuf::scoped_ptr<Metadata_FilterMetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
        it = this->filter_metadata().begin();
        it != this->filter_metadata().end(); ++it) {
      entry.reset(filter_metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Metadata)
    MergeFrom(*source);
  }
}

void Metadata::MergeFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filter_metadata_.MergeFrom(from.filter_metadata_);
}

void Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata::IsInitialized() const {
  return true;
}

void Metadata::Swap(Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metadata::InternalSwap(Metadata* other) {
  using std::swap;
  filter_metadata_.Swap(&other->filter_metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Metadata::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Metadata

// map<string, .google.protobuf.Struct> filter_metadata = 1;
int Metadata::filter_metadata_size() const {
  return filter_metadata_.size();
}
void Metadata::clear_filter_metadata() {
  filter_metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >&
Metadata::filter_metadata() const {
  // @@protoc_insertion_point(field_map:envoy.api.v2.Metadata.filter_metadata)
  return filter_metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >*
Metadata::mutable_filter_metadata() {
  // @@protoc_insertion_point(field_mutable_map:envoy.api.v2.Metadata.filter_metadata)
  return filter_metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuntimeUInt32::kDefaultValueFieldNumber;
const int RuntimeUInt32::kRuntimeKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuntimeUInt32::RuntimeUInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.RuntimeUInt32)
}
RuntimeUInt32::RuntimeUInt32(const RuntimeUInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  runtime_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime_key().size() > 0) {
    runtime_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_key_);
  }
  default_value_ = from.default_value_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.RuntimeUInt32)
}

void RuntimeUInt32::SharedCtor() {
  runtime_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_ = 0u;
  _cached_size_ = 0;
}

RuntimeUInt32::~RuntimeUInt32() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.RuntimeUInt32)
  SharedDtor();
}

void RuntimeUInt32::SharedDtor() {
  runtime_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RuntimeUInt32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RuntimeUInt32::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RuntimeUInt32& RuntimeUInt32::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

RuntimeUInt32* RuntimeUInt32::New(::google::protobuf::Arena* arena) const {
  RuntimeUInt32* n = new RuntimeUInt32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RuntimeUInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.RuntimeUInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runtime_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_value_ = 0u;
  _internal_metadata_.Clear();
}

bool RuntimeUInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.RuntimeUInt32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 default_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime_key().data(), static_cast<int>(this->runtime_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.RuntimeUInt32.runtime_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.RuntimeUInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.RuntimeUInt32)
  return false;
#undef DO_
}

void RuntimeUInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.RuntimeUInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 default_value = 2;
  if (this->default_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->default_value(), output);
  }

  // string runtime_key = 3;
  if (this->runtime_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_key().data(), static_cast<int>(this->runtime_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.RuntimeUInt32.runtime_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->runtime_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.RuntimeUInt32)
}

::google::protobuf::uint8* RuntimeUInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.RuntimeUInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 default_value = 2;
  if (this->default_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->default_value(), target);
  }

  // string runtime_key = 3;
  if (this->runtime_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_key().data(), static_cast<int>(this->runtime_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.RuntimeUInt32.runtime_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->runtime_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.RuntimeUInt32)
  return target;
}

size_t RuntimeUInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.RuntimeUInt32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string runtime_key = 3;
  if (this->runtime_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime_key());
  }

  // uint32 default_value = 2;
  if (this->default_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->default_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RuntimeUInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.RuntimeUInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const RuntimeUInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuntimeUInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.RuntimeUInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.RuntimeUInt32)
    MergeFrom(*source);
  }
}

void RuntimeUInt32::MergeFrom(const RuntimeUInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.RuntimeUInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.runtime_key().size() > 0) {

    runtime_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_key_);
  }
  if (from.default_value() != 0) {
    set_default_value(from.default_value());
  }
}

void RuntimeUInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.RuntimeUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuntimeUInt32::CopyFrom(const RuntimeUInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.RuntimeUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeUInt32::IsInitialized() const {
  return true;
}

void RuntimeUInt32::Swap(RuntimeUInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuntimeUInt32::InternalSwap(RuntimeUInt32* other) {
  using std::swap;
  runtime_key_.Swap(&other->runtime_key_);
  swap(default_value_, other->default_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RuntimeUInt32::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RuntimeUInt32

// uint32 default_value = 2;
void RuntimeUInt32::clear_default_value() {
  default_value_ = 0u;
}
::google::protobuf::uint32 RuntimeUInt32::default_value() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RuntimeUInt32.default_value)
  return default_value_;
}
void RuntimeUInt32::set_default_value(::google::protobuf::uint32 value) {
  
  default_value_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.RuntimeUInt32.default_value)
}

// string runtime_key = 3;
void RuntimeUInt32::clear_runtime_key() {
  runtime_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RuntimeUInt32::runtime_key() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RuntimeUInt32.runtime_key)
  return runtime_key_.GetNoArena();
}
void RuntimeUInt32::set_runtime_key(const ::std::string& value) {
  
  runtime_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.RuntimeUInt32.runtime_key)
}
#if LANG_CXX11
void RuntimeUInt32::set_runtime_key(::std::string&& value) {
  
  runtime_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.RuntimeUInt32.runtime_key)
}
#endif
void RuntimeUInt32::set_runtime_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  runtime_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.RuntimeUInt32.runtime_key)
}
void RuntimeUInt32::set_runtime_key(const char* value, size_t size) {
  
  runtime_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.RuntimeUInt32.runtime_key)
}
::std::string* RuntimeUInt32::mutable_runtime_key() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RuntimeUInt32.runtime_key)
  return runtime_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RuntimeUInt32::release_runtime_key() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.RuntimeUInt32.runtime_key)
  
  return runtime_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RuntimeUInt32::set_allocated_runtime_key(::std::string* runtime_key) {
  if (runtime_key != NULL) {
    
  } else {
    
  }
  runtime_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime_key);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.RuntimeUInt32.runtime_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderValue::kKeyFieldNumber;
const int HeaderValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderValue::HeaderValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.HeaderValue)
}
HeaderValue::HeaderValue(const HeaderValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.HeaderValue)
}

void HeaderValue::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HeaderValue::~HeaderValue() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.HeaderValue)
  SharedDtor();
}

void HeaderValue::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HeaderValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeaderValue::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeaderValue& HeaderValue::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeaderValue* HeaderValue::New(::google::protobuf::Arena* arena) const {
  HeaderValue* n = new HeaderValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeaderValue::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.HeaderValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HeaderValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.HeaderValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.HeaderValue.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.HeaderValue.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.HeaderValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.HeaderValue)
  return false;
#undef DO_
}

void HeaderValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.HeaderValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.HeaderValue.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.HeaderValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.HeaderValue)
}

::google::protobuf::uint8* HeaderValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.HeaderValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.HeaderValue.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.HeaderValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.HeaderValue)
  return target;
}

size_t HeaderValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.HeaderValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeaderValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.HeaderValue)
  GOOGLE_DCHECK_NE(&from, this);
  const HeaderValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.HeaderValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.HeaderValue)
    MergeFrom(*source);
  }
}

void HeaderValue::MergeFrom(const HeaderValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.HeaderValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void HeaderValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.HeaderValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderValue::CopyFrom(const HeaderValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.HeaderValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderValue::IsInitialized() const {
  return true;
}

void HeaderValue::Swap(HeaderValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeaderValue::InternalSwap(HeaderValue* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeaderValue::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeaderValue

// string key = 1;
void HeaderValue::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HeaderValue::key() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HeaderValue.key)
  return key_.GetNoArena();
}
void HeaderValue::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.HeaderValue.key)
}
#if LANG_CXX11
void HeaderValue::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.HeaderValue.key)
}
#endif
void HeaderValue::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.HeaderValue.key)
}
void HeaderValue::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.HeaderValue.key)
}
::std::string* HeaderValue::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HeaderValue.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HeaderValue::release_key() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HeaderValue.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HeaderValue::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HeaderValue.key)
}

// string value = 2;
void HeaderValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HeaderValue::value() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HeaderValue.value)
  return value_.GetNoArena();
}
void HeaderValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.HeaderValue.value)
}
#if LANG_CXX11
void HeaderValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.HeaderValue.value)
}
#endif
void HeaderValue::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.HeaderValue.value)
}
void HeaderValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.HeaderValue.value)
}
::std::string* HeaderValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HeaderValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HeaderValue::release_value() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HeaderValue.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HeaderValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HeaderValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderValueOption::kHeaderFieldNumber;
const int HeaderValueOption::kAppendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderValueOption::HeaderValueOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.HeaderValueOption)
}
HeaderValueOption::HeaderValueOption(const HeaderValueOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::envoy::api::v2::HeaderValue(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_append()) {
    append_ = new ::google::protobuf::BoolValue(*from.append_);
  } else {
    append_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.HeaderValueOption)
}

void HeaderValueOption::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&append_) -
      reinterpret_cast<char*>(&header_)) + sizeof(append_));
  _cached_size_ = 0;
}

HeaderValueOption::~HeaderValueOption() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.HeaderValueOption)
  SharedDtor();
}

void HeaderValueOption::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete append_;
}

void HeaderValueOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeaderValueOption::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeaderValueOption& HeaderValueOption::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeaderValueOption* HeaderValueOption::New(::google::protobuf::Arena* arena) const {
  HeaderValueOption* n = new HeaderValueOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeaderValueOption::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.HeaderValueOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && append_ != NULL) {
    delete append_;
  }
  append_ = NULL;
  _internal_metadata_.Clear();
}

bool HeaderValueOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.HeaderValueOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.HeaderValue header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue append = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_append()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.HeaderValueOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.HeaderValueOption)
  return false;
#undef DO_
}

void HeaderValueOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.HeaderValueOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.HeaderValue header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .google.protobuf.BoolValue append = 2;
  if (this->has_append()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->append_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.HeaderValueOption)
}

::google::protobuf::uint8* HeaderValueOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.HeaderValueOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.HeaderValue header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // .google.protobuf.BoolValue append = 2;
  if (this->has_append()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->append_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.HeaderValueOption)
  return target;
}

size_t HeaderValueOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.HeaderValueOption)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.HeaderValue header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // .google.protobuf.BoolValue append = 2;
  if (this->has_append()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->append_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeaderValueOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.HeaderValueOption)
  GOOGLE_DCHECK_NE(&from, this);
  const HeaderValueOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderValueOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.HeaderValueOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.HeaderValueOption)
    MergeFrom(*source);
  }
}

void HeaderValueOption::MergeFrom(const HeaderValueOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.HeaderValueOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::envoy::api::v2::HeaderValue::MergeFrom(from.header());
  }
  if (from.has_append()) {
    mutable_append()->::google::protobuf::BoolValue::MergeFrom(from.append());
  }
}

void HeaderValueOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.HeaderValueOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderValueOption::CopyFrom(const HeaderValueOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.HeaderValueOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderValueOption::IsInitialized() const {
  return true;
}

void HeaderValueOption::Swap(HeaderValueOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeaderValueOption::InternalSwap(HeaderValueOption* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(append_, other->append_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeaderValueOption::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeaderValueOption

// .envoy.api.v2.HeaderValue header = 1;
bool HeaderValueOption::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void HeaderValueOption::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::envoy::api::v2::HeaderValue& HeaderValueOption::header() const {
  const ::envoy::api::v2::HeaderValue* p = header_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.HeaderValueOption.header)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::HeaderValue*>(
      &::envoy::api::v2::_HeaderValue_default_instance_);
}
::envoy::api::v2::HeaderValue* HeaderValueOption::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::envoy::api::v2::HeaderValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HeaderValueOption.header)
  return header_;
}
::envoy::api::v2::HeaderValue* HeaderValueOption::release_header() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HeaderValueOption.header)
  
  ::envoy::api::v2::HeaderValue* temp = header_;
  header_ = NULL;
  return temp;
}
void HeaderValueOption::set_allocated_header(::envoy::api::v2::HeaderValue* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HeaderValueOption.header)
}

// .google.protobuf.BoolValue append = 2;
bool HeaderValueOption::has_append() const {
  return this != internal_default_instance() && append_ != NULL;
}
void HeaderValueOption::clear_append() {
  if (GetArenaNoVirtual() == NULL && append_ != NULL) delete append_;
  append_ = NULL;
}
const ::google::protobuf::BoolValue& HeaderValueOption::append() const {
  const ::google::protobuf::BoolValue* p = append_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.HeaderValueOption.append)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
::google::protobuf::BoolValue* HeaderValueOption::mutable_append() {
  
  if (append_ == NULL) {
    append_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HeaderValueOption.append)
  return append_;
}
::google::protobuf::BoolValue* HeaderValueOption::release_append() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HeaderValueOption.append)
  
  ::google::protobuf::BoolValue* temp = append_;
  append_ = NULL;
  return temp;
}
void HeaderValueOption::set_allocated_append(::google::protobuf::BoolValue* append) {
  delete append_;
  if (append != NULL && append->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_append = new ::google::protobuf::BoolValue;
    new_append->CopyFrom(*append);
    append = new_append;
  }
  append_ = append;
  if (append) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HeaderValueOption.append)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApiConfigSource::kApiTypeFieldNumber;
const int ApiConfigSource::kClusterNameFieldNumber;
const int ApiConfigSource::kRefreshDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApiConfigSource::ApiConfigSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ApiConfigSource)
}
ApiConfigSource::ApiConfigSource(const ApiConfigSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cluster_name_(from.cluster_name_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_refresh_delay()) {
    refresh_delay_ = new ::google::protobuf::Duration(*from.refresh_delay_);
  } else {
    refresh_delay_ = NULL;
  }
  api_type_ = from.api_type_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ApiConfigSource)
}

void ApiConfigSource::SharedCtor() {
  ::memset(&refresh_delay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&api_type_) -
      reinterpret_cast<char*>(&refresh_delay_)) + sizeof(api_type_));
  _cached_size_ = 0;
}

ApiConfigSource::~ApiConfigSource() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ApiConfigSource)
  SharedDtor();
}

void ApiConfigSource::SharedDtor() {
  if (this != internal_default_instance()) delete refresh_delay_;
}

void ApiConfigSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApiConfigSource::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApiConfigSource& ApiConfigSource::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

ApiConfigSource* ApiConfigSource::New(::google::protobuf::Arena* arena) const {
  ApiConfigSource* n = new ApiConfigSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApiConfigSource::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ApiConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_name_.Clear();
  if (GetArenaNoVirtual() == NULL && refresh_delay_ != NULL) {
    delete refresh_delay_;
  }
  refresh_delay_ = NULL;
  api_type_ = 0;
  _internal_metadata_.Clear();
}

bool ApiConfigSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ApiConfigSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.ApiConfigSource.ApiType api_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_api_type(static_cast< ::envoy::api::v2::ApiConfigSource_ApiType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name(this->cluster_name_size() - 1).data(),
            static_cast<int>(this->cluster_name(this->cluster_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ApiConfigSource.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration refresh_delay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refresh_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ApiConfigSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ApiConfigSource)
  return false;
#undef DO_
}

void ApiConfigSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ApiConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ApiConfigSource.ApiType api_type = 1;
  if (this->api_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->api_type(), output);
  }

  // repeated string cluster_name = 2;
  for (int i = 0, n = this->cluster_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name(i).data(), static_cast<int>(this->cluster_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ApiConfigSource.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cluster_name(i), output);
  }

  // .google.protobuf.Duration refresh_delay = 3;
  if (this->has_refresh_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->refresh_delay_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ApiConfigSource)
}

::google::protobuf::uint8* ApiConfigSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ApiConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ApiConfigSource.ApiType api_type = 1;
  if (this->api_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->api_type(), target);
  }

  // repeated string cluster_name = 2;
  for (int i = 0, n = this->cluster_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name(i).data(), static_cast<int>(this->cluster_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ApiConfigSource.cluster_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cluster_name(i), target);
  }

  // .google.protobuf.Duration refresh_delay = 3;
  if (this->has_refresh_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->refresh_delay_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ApiConfigSource)
  return target;
}

size_t ApiConfigSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ApiConfigSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cluster_name = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cluster_name_size());
  for (int i = 0, n = this->cluster_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cluster_name(i));
  }

  // .google.protobuf.Duration refresh_delay = 3;
  if (this->has_refresh_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->refresh_delay_);
  }

  // .envoy.api.v2.ApiConfigSource.ApiType api_type = 1;
  if (this->api_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->api_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApiConfigSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ApiConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ApiConfigSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApiConfigSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ApiConfigSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ApiConfigSource)
    MergeFrom(*source);
  }
}

void ApiConfigSource::MergeFrom(const ApiConfigSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ApiConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cluster_name_.MergeFrom(from.cluster_name_);
  if (from.has_refresh_delay()) {
    mutable_refresh_delay()->::google::protobuf::Duration::MergeFrom(from.refresh_delay());
  }
  if (from.api_type() != 0) {
    set_api_type(from.api_type());
  }
}

void ApiConfigSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ApiConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiConfigSource::CopyFrom(const ApiConfigSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ApiConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiConfigSource::IsInitialized() const {
  return true;
}

void ApiConfigSource::Swap(ApiConfigSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApiConfigSource::InternalSwap(ApiConfigSource* other) {
  using std::swap;
  cluster_name_.InternalSwap(&other->cluster_name_);
  swap(refresh_delay_, other->refresh_delay_);
  swap(api_type_, other->api_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApiConfigSource::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApiConfigSource

// .envoy.api.v2.ApiConfigSource.ApiType api_type = 1;
void ApiConfigSource::clear_api_type() {
  api_type_ = 0;
}
::envoy::api::v2::ApiConfigSource_ApiType ApiConfigSource::api_type() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ApiConfigSource.api_type)
  return static_cast< ::envoy::api::v2::ApiConfigSource_ApiType >(api_type_);
}
void ApiConfigSource::set_api_type(::envoy::api::v2::ApiConfigSource_ApiType value) {
  
  api_type_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.ApiConfigSource.api_type)
}

// repeated string cluster_name = 2;
int ApiConfigSource::cluster_name_size() const {
  return cluster_name_.size();
}
void ApiConfigSource::clear_cluster_name() {
  cluster_name_.Clear();
}
const ::std::string& ApiConfigSource::cluster_name(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ApiConfigSource.cluster_name)
  return cluster_name_.Get(index);
}
::std::string* ApiConfigSource::mutable_cluster_name(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ApiConfigSource.cluster_name)
  return cluster_name_.Mutable(index);
}
void ApiConfigSource::set_cluster_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.ApiConfigSource.cluster_name)
  cluster_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ApiConfigSource::set_cluster_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.ApiConfigSource.cluster_name)
  cluster_name_.Mutable(index)->assign(std::move(value));
}
#endif
void ApiConfigSource::set_cluster_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cluster_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ApiConfigSource.cluster_name)
}
void ApiConfigSource::set_cluster_name(int index, const char* value, size_t size) {
  cluster_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ApiConfigSource.cluster_name)
}
::std::string* ApiConfigSource::add_cluster_name() {
  // @@protoc_insertion_point(field_add_mutable:envoy.api.v2.ApiConfigSource.cluster_name)
  return cluster_name_.Add();
}
void ApiConfigSource::add_cluster_name(const ::std::string& value) {
  cluster_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:envoy.api.v2.ApiConfigSource.cluster_name)
}
#if LANG_CXX11
void ApiConfigSource::add_cluster_name(::std::string&& value) {
  cluster_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:envoy.api.v2.ApiConfigSource.cluster_name)
}
#endif
void ApiConfigSource::add_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cluster_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:envoy.api.v2.ApiConfigSource.cluster_name)
}
void ApiConfigSource::add_cluster_name(const char* value, size_t size) {
  cluster_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:envoy.api.v2.ApiConfigSource.cluster_name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ApiConfigSource::cluster_name() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ApiConfigSource.cluster_name)
  return cluster_name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ApiConfigSource::mutable_cluster_name() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ApiConfigSource.cluster_name)
  return &cluster_name_;
}

// .google.protobuf.Duration refresh_delay = 3;
bool ApiConfigSource::has_refresh_delay() const {
  return this != internal_default_instance() && refresh_delay_ != NULL;
}
void ApiConfigSource::clear_refresh_delay() {
  if (GetArenaNoVirtual() == NULL && refresh_delay_ != NULL) delete refresh_delay_;
  refresh_delay_ = NULL;
}
const ::google::protobuf::Duration& ApiConfigSource::refresh_delay() const {
  const ::google::protobuf::Duration* p = refresh_delay_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.ApiConfigSource.refresh_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
::google::protobuf::Duration* ApiConfigSource::mutable_refresh_delay() {
  
  if (refresh_delay_ == NULL) {
    refresh_delay_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ApiConfigSource.refresh_delay)
  return refresh_delay_;
}
::google::protobuf::Duration* ApiConfigSource::release_refresh_delay() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ApiConfigSource.refresh_delay)
  
  ::google::protobuf::Duration* temp = refresh_delay_;
  refresh_delay_ = NULL;
  return temp;
}
void ApiConfigSource::set_allocated_refresh_delay(::google::protobuf::Duration* refresh_delay) {
  delete refresh_delay_;
  if (refresh_delay != NULL && refresh_delay->GetArena() != NULL) {
    ::google::protobuf::Duration* new_refresh_delay = new ::google::protobuf::Duration;
    new_refresh_delay->CopyFrom(*refresh_delay);
    refresh_delay = new_refresh_delay;
  }
  refresh_delay_ = refresh_delay;
  if (refresh_delay) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ApiConfigSource.refresh_delay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AggregatedConfigSource::AggregatedConfigSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.AggregatedConfigSource)
}
AggregatedConfigSource::AggregatedConfigSource(const AggregatedConfigSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.AggregatedConfigSource)
}

void AggregatedConfigSource::SharedCtor() {
  _cached_size_ = 0;
}

AggregatedConfigSource::~AggregatedConfigSource() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.AggregatedConfigSource)
  SharedDtor();
}

void AggregatedConfigSource::SharedDtor() {
}

void AggregatedConfigSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AggregatedConfigSource::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AggregatedConfigSource& AggregatedConfigSource::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

AggregatedConfigSource* AggregatedConfigSource::New(::google::protobuf::Arena* arena) const {
  AggregatedConfigSource* n = new AggregatedConfigSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AggregatedConfigSource::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.AggregatedConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AggregatedConfigSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.AggregatedConfigSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.AggregatedConfigSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.AggregatedConfigSource)
  return false;
#undef DO_
}

void AggregatedConfigSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.AggregatedConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.AggregatedConfigSource)
}

::google::protobuf::uint8* AggregatedConfigSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.AggregatedConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.AggregatedConfigSource)
  return target;
}

size_t AggregatedConfigSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.AggregatedConfigSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AggregatedConfigSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.AggregatedConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregatedConfigSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AggregatedConfigSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.AggregatedConfigSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.AggregatedConfigSource)
    MergeFrom(*source);
  }
}

void AggregatedConfigSource::MergeFrom(const AggregatedConfigSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.AggregatedConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AggregatedConfigSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.AggregatedConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregatedConfigSource::CopyFrom(const AggregatedConfigSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.AggregatedConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregatedConfigSource::IsInitialized() const {
  return true;
}

void AggregatedConfigSource::Swap(AggregatedConfigSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AggregatedConfigSource::InternalSwap(AggregatedConfigSource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AggregatedConfigSource::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AggregatedConfigSource

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigSource::kPathFieldNumber;
const int ConfigSource::kApiConfigSourceFieldNumber;
const int ConfigSource::kAdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigSource::ConfigSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ConfigSource)
}
ConfigSource::ConfigSource(const ConfigSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_config_source_specifier();
  switch (from.config_source_specifier_case()) {
    case kPath: {
      set_path(from.path());
      break;
    }
    case kApiConfigSource: {
      mutable_api_config_source()->::envoy::api::v2::ApiConfigSource::MergeFrom(from.api_config_source());
      break;
    }
    case kAds: {
      mutable_ads()->::envoy::api::v2::AggregatedConfigSource::MergeFrom(from.ads());
      break;
    }
    case CONFIG_SOURCE_SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ConfigSource)
}

void ConfigSource::SharedCtor() {
  clear_has_config_source_specifier();
  _cached_size_ = 0;
}

ConfigSource::~ConfigSource() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ConfigSource)
  SharedDtor();
}

void ConfigSource::SharedDtor() {
  if (has_config_source_specifier()) {
    clear_config_source_specifier();
  }
}

void ConfigSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigSource::descriptor() {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigSource& ConfigSource::default_instance() {
  protobuf_api_2fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigSource* ConfigSource::New(::google::protobuf::Arena* arena) const {
  ConfigSource* n = new ConfigSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigSource::clear_config_source_specifier() {
// @@protoc_insertion_point(one_of_clear_start:envoy.api.v2.ConfigSource)
  switch (config_source_specifier_case()) {
    case kPath: {
      config_source_specifier_.path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kApiConfigSource: {
      delete config_source_specifier_.api_config_source_;
      break;
    }
    case kAds: {
      delete config_source_specifier_.ads_;
      break;
    }
    case CONFIG_SOURCE_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONFIG_SOURCE_SPECIFIER_NOT_SET;
}


void ConfigSource::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_config_source_specifier();
  _internal_metadata_.Clear();
}

bool ConfigSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ConfigSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ConfigSource.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ApiConfigSource api_config_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_api_config_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.AggregatedConfigSource ads = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ads()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ConfigSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ConfigSource)
  return false;
#undef DO_
}

void ConfigSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ConfigSource.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // .envoy.api.v2.ApiConfigSource api_config_source = 2;
  if (has_api_config_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *config_source_specifier_.api_config_source_, output);
  }

  // .envoy.api.v2.AggregatedConfigSource ads = 3;
  if (has_ads()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *config_source_specifier_.ads_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ConfigSource)
}

::google::protobuf::uint8* ConfigSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ConfigSource.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // .envoy.api.v2.ApiConfigSource api_config_source = 2;
  if (has_api_config_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *config_source_specifier_.api_config_source_, deterministic, target);
  }

  // .envoy.api.v2.AggregatedConfigSource ads = 3;
  if (has_ads()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *config_source_specifier_.ads_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ConfigSource)
  return target;
}

size_t ConfigSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ConfigSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (config_source_specifier_case()) {
    // string path = 1;
    case kPath: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
      break;
    }
    // .envoy.api.v2.ApiConfigSource api_config_source = 2;
    case kApiConfigSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *config_source_specifier_.api_config_source_);
      break;
    }
    // .envoy.api.v2.AggregatedConfigSource ads = 3;
    case kAds: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *config_source_specifier_.ads_);
      break;
    }
    case CONFIG_SOURCE_SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ConfigSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ConfigSource)
    MergeFrom(*source);
  }
}

void ConfigSource::MergeFrom(const ConfigSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.config_source_specifier_case()) {
    case kPath: {
      set_path(from.path());
      break;
    }
    case kApiConfigSource: {
      mutable_api_config_source()->::envoy::api::v2::ApiConfigSource::MergeFrom(from.api_config_source());
      break;
    }
    case kAds: {
      mutable_ads()->::envoy::api::v2::AggregatedConfigSource::MergeFrom(from.ads());
      break;
    }
    case CONFIG_SOURCE_SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void ConfigSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigSource::CopyFrom(const ConfigSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSource::IsInitialized() const {
  return true;
}

void ConfigSource::Swap(ConfigSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigSource::InternalSwap(ConfigSource* other) {
  using std::swap;
  swap(config_source_specifier_, other->config_source_specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigSource::GetMetadata() const {
  protobuf_api_2fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigSource

// string path = 1;
bool ConfigSource::has_path() const {
  return config_source_specifier_case() == kPath;
}
void ConfigSource::set_has_path() {
  _oneof_case_[0] = kPath;
}
void ConfigSource::clear_path() {
  if (has_path()) {
    config_source_specifier_.path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_config_source_specifier();
  }
}
const ::std::string& ConfigSource::path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ConfigSource.path)
  if (has_path()) {
    return config_source_specifier_.path_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void ConfigSource::set_path(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.ConfigSource.path)
  if (!has_path()) {
    clear_config_source_specifier();
    set_has_path();
    config_source_specifier_.path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_source_specifier_.path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ConfigSource.path)
}
#if LANG_CXX11
void ConfigSource::set_path(::std::string&& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.ConfigSource.path)
  if (!has_path()) {
    clear_config_source_specifier();
    set_has_path();
    config_source_specifier_.path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_source_specifier_.path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ConfigSource.path)
}
#endif
void ConfigSource::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_path()) {
    clear_config_source_specifier();
    set_has_path();
    config_source_specifier_.path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_source_specifier_.path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ConfigSource.path)
}
void ConfigSource::set_path(const char* value, size_t size) {
  if (!has_path()) {
    clear_config_source_specifier();
    set_has_path();
    config_source_specifier_.path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_source_specifier_.path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ConfigSource.path)
}
::std::string* ConfigSource::mutable_path() {
  if (!has_path()) {
    clear_config_source_specifier();
    set_has_path();
    config_source_specifier_.path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ConfigSource.path)
  return config_source_specifier_.path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigSource::release_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ConfigSource.path)
  if (has_path()) {
    clear_has_config_source_specifier();
    return config_source_specifier_.path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void ConfigSource::set_allocated_path(::std::string* path) {
  if (!has_path()) {
    config_source_specifier_.path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_config_source_specifier();
  if (path != NULL) {
    set_has_path();
    config_source_specifier_.path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        path);
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ConfigSource.path)
}

// .envoy.api.v2.ApiConfigSource api_config_source = 2;
bool ConfigSource::has_api_config_source() const {
  return config_source_specifier_case() == kApiConfigSource;
}
void ConfigSource::set_has_api_config_source() {
  _oneof_case_[0] = kApiConfigSource;
}
void ConfigSource::clear_api_config_source() {
  if (has_api_config_source()) {
    delete config_source_specifier_.api_config_source_;
    clear_has_config_source_specifier();
  }
}
 const ::envoy::api::v2::ApiConfigSource& ConfigSource::api_config_source() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ConfigSource.api_config_source)
  return has_api_config_source()
      ? *config_source_specifier_.api_config_source_
      : ::envoy::api::v2::ApiConfigSource::default_instance();
}
::envoy::api::v2::ApiConfigSource* ConfigSource::mutable_api_config_source() {
  if (!has_api_config_source()) {
    clear_config_source_specifier();
    set_has_api_config_source();
    config_source_specifier_.api_config_source_ = new ::envoy::api::v2::ApiConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ConfigSource.api_config_source)
  return config_source_specifier_.api_config_source_;
}
::envoy::api::v2::ApiConfigSource* ConfigSource::release_api_config_source() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ConfigSource.api_config_source)
  if (has_api_config_source()) {
    clear_has_config_source_specifier();
    ::envoy::api::v2::ApiConfigSource* temp = config_source_specifier_.api_config_source_;
    config_source_specifier_.api_config_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ConfigSource::set_allocated_api_config_source(::envoy::api::v2::ApiConfigSource* api_config_source) {
  clear_config_source_specifier();
  if (api_config_source) {
    set_has_api_config_source();
    config_source_specifier_.api_config_source_ = api_config_source;
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ConfigSource.api_config_source)
}

// .envoy.api.v2.AggregatedConfigSource ads = 3;
bool ConfigSource::has_ads() const {
  return config_source_specifier_case() == kAds;
}
void ConfigSource::set_has_ads() {
  _oneof_case_[0] = kAds;
}
void ConfigSource::clear_ads() {
  if (has_ads()) {
    delete config_source_specifier_.ads_;
    clear_has_config_source_specifier();
  }
}
 const ::envoy::api::v2::AggregatedConfigSource& ConfigSource::ads() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ConfigSource.ads)
  return has_ads()
      ? *config_source_specifier_.ads_
      : ::envoy::api::v2::AggregatedConfigSource::default_instance();
}
::envoy::api::v2::AggregatedConfigSource* ConfigSource::mutable_ads() {
  if (!has_ads()) {
    clear_config_source_specifier();
    set_has_ads();
    config_source_specifier_.ads_ = new ::envoy::api::v2::AggregatedConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ConfigSource.ads)
  return config_source_specifier_.ads_;
}
::envoy::api::v2::AggregatedConfigSource* ConfigSource::release_ads() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ConfigSource.ads)
  if (has_ads()) {
    clear_has_config_source_specifier();
    ::envoy::api::v2::AggregatedConfigSource* temp = config_source_specifier_.ads_;
    config_source_specifier_.ads_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ConfigSource::set_allocated_ads(::envoy::api::v2::AggregatedConfigSource* ads) {
  clear_config_source_specifier();
  if (ads) {
    set_has_ads();
    config_source_specifier_.ads_ = ads;
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ConfigSource.ads)
}

bool ConfigSource::has_config_source_specifier() const {
  return config_source_specifier_case() != CONFIG_SOURCE_SPECIFIER_NOT_SET;
}
void ConfigSource::clear_has_config_source_specifier() {
  _oneof_case_[0] = CONFIG_SOURCE_SPECIFIER_NOT_SET;
}
ConfigSource::ConfigSourceSpecifierCase ConfigSource::config_source_specifier_case() const {
  return ConfigSource::ConfigSourceSpecifierCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
