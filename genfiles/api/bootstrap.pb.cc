// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/bootstrap.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/bootstrap.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace envoy {
namespace api {
namespace v2 {
class LightstepConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LightstepConfig>
     _instance;
} _LightstepConfig_default_instance_;
class ZipkinConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ZipkinConfig>
     _instance;
} _ZipkinConfig_default_instance_;
class Tracing_HttpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Tracing_Http>
     _instance;
} _Tracing_Http_default_instance_;
class TracingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Tracing>
     _instance;
} _Tracing_default_instance_;
class AdminDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Admin>
     _instance;
} _Admin_default_instance_;
class ClusterManager_OutlierDetectionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClusterManager_OutlierDetection>
     _instance;
} _ClusterManager_OutlierDetection_default_instance_;
class ClusterManagerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClusterManager>
     _instance;
} _ClusterManager_default_instance_;
class StatsdSinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StatsdSink>
     _instance;
  const ::envoy::api::v2::Address* address_;
  ::google::protobuf::internal::ArenaStringPtr tcp_cluster_name_;
} _StatsdSink_default_instance_;
class StatsSinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StatsSink>
     _instance;
} _StatsSink_default_instance_;
class WatchdogDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Watchdog>
     _instance;
} _Watchdog_default_instance_;
class RuntimeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Runtime>
     _instance;
} _Runtime_default_instance_;
class RateLimitServiceConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RateLimitServiceConfig>
     _instance;
} _RateLimitServiceConfig_default_instance_;
class Bootstrap_StaticResourcesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap_StaticResources>
     _instance;
} _Bootstrap_StaticResources_default_instance_;
class Bootstrap_DynamicResources_DeprecatedV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap_DynamicResources_DeprecatedV1>
     _instance;
} _Bootstrap_DynamicResources_DeprecatedV1_default_instance_;
class Bootstrap_DynamicResourcesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap_DynamicResources>
     _instance;
} _Bootstrap_DynamicResources_default_instance_;
class BootstrapDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap>
     _instance;
} _Bootstrap_default_instance_;

namespace protobuf_api_2fbootstrap_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LightstepConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LightstepConfig, collector_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LightstepConfig, access_token_file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZipkinConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZipkinConfig, collector_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZipkinConfig, collector_endpoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracing_Http, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracing_Http, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracing_Http, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tracing, http_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin, access_log_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin, profile_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Admin, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterManager_OutlierDetection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterManager_OutlierDetection, event_log_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterManager, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterManager, local_cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterManager, outlier_detection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterManager, upstream_bind_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatsdSink, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatsdSink, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(StatsdSinkDefaultTypeInternal, address_),
  offsetof(StatsdSinkDefaultTypeInternal, tcp_cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatsdSink, statsd_specifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatsSink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatsSink, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatsSink, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Watchdog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Watchdog, miss_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Watchdog, megamiss_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Watchdog, kill_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Watchdog, multikill_timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Runtime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Runtime, symlink_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Runtime, subdirectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Runtime, override_subdirectory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateLimitServiceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateLimitServiceConfig, cluster_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_StaticResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_StaticResources, listeners_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_StaticResources, clusters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_DynamicResources_DeprecatedV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_DynamicResources_DeprecatedV1, sds_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_DynamicResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_DynamicResources, lds_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_DynamicResources, cds_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_DynamicResources, ads_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap_DynamicResources, deprecated_v1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, static_resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, dynamic_resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, cluster_manager_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, flags_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, stats_sinks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, stats_flush_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, watchdog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, tracing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, rate_limit_service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, runtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, admin_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(LightstepConfig)},
  { 7, -1, sizeof(ZipkinConfig)},
  { 14, -1, sizeof(Tracing_Http)},
  { 21, -1, sizeof(Tracing)},
  { 27, -1, sizeof(Admin)},
  { 35, -1, sizeof(ClusterManager_OutlierDetection)},
  { 41, -1, sizeof(ClusterManager)},
  { 49, -1, sizeof(StatsdSink)},
  { 57, -1, sizeof(StatsSink)},
  { 64, -1, sizeof(Watchdog)},
  { 73, -1, sizeof(Runtime)},
  { 81, -1, sizeof(RateLimitServiceConfig)},
  { 87, -1, sizeof(Bootstrap_StaticResources)},
  { 94, -1, sizeof(Bootstrap_DynamicResources_DeprecatedV1)},
  { 100, -1, sizeof(Bootstrap_DynamicResources)},
  { 109, -1, sizeof(Bootstrap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LightstepConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZipkinConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Tracing_Http_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Tracing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Admin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClusterManager_OutlierDetection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClusterManager_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StatsdSink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StatsSink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Watchdog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Runtime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RateLimitServiceConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bootstrap_StaticResources_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bootstrap_DynamicResources_DeprecatedV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bootstrap_DynamicResources_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bootstrap_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/bootstrap.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::envoy::api::v2::protobuf_api_2faddress_2eproto::InitDefaults();
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::InitDefaults();
  ::envoy::api::v2::protobuf_api_2fdiscovery_2eproto::InitDefaults();
  ::envoy::api::v2::protobuf_api_2fcds_2eproto::InitDefaults();
  ::envoy::api::v2::protobuf_api_2flds_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaults();
  _LightstepConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LightstepConfig_default_instance_);_ZipkinConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ZipkinConfig_default_instance_);_Tracing_Http_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Tracing_Http_default_instance_);_Tracing_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Tracing_default_instance_);_Admin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Admin_default_instance_);_ClusterManager_OutlierDetection_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClusterManager_OutlierDetection_default_instance_);_ClusterManager_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClusterManager_default_instance_);_StatsdSink_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StatsdSink_default_instance_);_StatsSink_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StatsSink_default_instance_);_Watchdog_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Watchdog_default_instance_);_Runtime_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Runtime_default_instance_);_RateLimitServiceConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RateLimitServiceConfig_default_instance_);_Bootstrap_StaticResources_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Bootstrap_StaticResources_default_instance_);_Bootstrap_DynamicResources_DeprecatedV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Bootstrap_DynamicResources_DeprecatedV1_default_instance_);_Bootstrap_DynamicResources_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Bootstrap_DynamicResources_default_instance_);_Bootstrap_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Bootstrap_default_instance_);_Tracing_Http_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  _Tracing_default_instance_._instance.get_mutable()->http_ = const_cast< ::envoy::api::v2::Tracing_Http*>(
      ::envoy::api::v2::Tracing_Http::internal_default_instance());
  _Admin_default_instance_._instance.get_mutable()->address_ = const_cast< ::envoy::api::v2::Address*>(
      ::envoy::api::v2::Address::internal_default_instance());
  _ClusterManager_default_instance_._instance.get_mutable()->outlier_detection_ = const_cast< ::envoy::api::v2::ClusterManager_OutlierDetection*>(
      ::envoy::api::v2::ClusterManager_OutlierDetection::internal_default_instance());
  _ClusterManager_default_instance_._instance.get_mutable()->upstream_bind_config_ = const_cast< ::envoy::api::v2::BindConfig*>(
      ::envoy::api::v2::BindConfig::internal_default_instance());
  _StatsdSink_default_instance_.address_ = const_cast< ::envoy::api::v2::Address*>(
      ::envoy::api::v2::Address::internal_default_instance());
  _StatsdSink_default_instance_.tcp_cluster_name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _StatsSink_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  _Watchdog_default_instance_._instance.get_mutable()->miss_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _Watchdog_default_instance_._instance.get_mutable()->megamiss_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _Watchdog_default_instance_._instance.get_mutable()->kill_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _Watchdog_default_instance_._instance.get_mutable()->multikill_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _Bootstrap_DynamicResources_DeprecatedV1_default_instance_._instance.get_mutable()->sds_config_ = const_cast< ::envoy::api::v2::ConfigSource*>(
      ::envoy::api::v2::ConfigSource::internal_default_instance());
  _Bootstrap_DynamicResources_default_instance_._instance.get_mutable()->lds_config_ = const_cast< ::envoy::api::v2::ConfigSource*>(
      ::envoy::api::v2::ConfigSource::internal_default_instance());
  _Bootstrap_DynamicResources_default_instance_._instance.get_mutable()->cds_config_ = const_cast< ::envoy::api::v2::ConfigSource*>(
      ::envoy::api::v2::ConfigSource::internal_default_instance());
  _Bootstrap_DynamicResources_default_instance_._instance.get_mutable()->ads_config_ = const_cast< ::envoy::api::v2::ApiConfigSource*>(
      ::envoy::api::v2::ApiConfigSource::internal_default_instance());
  _Bootstrap_DynamicResources_default_instance_._instance.get_mutable()->deprecated_v1_ = const_cast< ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1*>(
      ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->node_ = const_cast< ::envoy::api::v2::Node*>(
      ::envoy::api::v2::Node::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->static_resources_ = const_cast< ::envoy::api::v2::Bootstrap_StaticResources*>(
      ::envoy::api::v2::Bootstrap_StaticResources::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->dynamic_resources_ = const_cast< ::envoy::api::v2::Bootstrap_DynamicResources*>(
      ::envoy::api::v2::Bootstrap_DynamicResources::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->cluster_manager_ = const_cast< ::envoy::api::v2::ClusterManager*>(
      ::envoy::api::v2::ClusterManager::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->stats_flush_interval_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->watchdog_ = const_cast< ::envoy::api::v2::Watchdog*>(
      ::envoy::api::v2::Watchdog::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->tracing_ = const_cast< ::envoy::api::v2::Tracing*>(
      ::envoy::api::v2::Tracing::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->rate_limit_service_ = const_cast< ::envoy::api::v2::RateLimitServiceConfig*>(
      ::envoy::api::v2::RateLimitServiceConfig::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->runtime_ = const_cast< ::envoy::api::v2::Runtime*>(
      ::envoy::api::v2::Runtime::internal_default_instance());
  _Bootstrap_default_instance_._instance.get_mutable()->admin_ = const_cast< ::envoy::api::v2::Admin*>(
      ::envoy::api::v2::Admin::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023api/bootstrap.proto\022\014envoy.api.v2\032\021api"
      "/address.proto\032\016api/base.proto\032\023api/disc"
      "overy.proto\032\rapi/cds.proto\032\rapi/lds.prot"
      "o\032\036google/protobuf/duration.proto\032\034googl"
      "e/protobuf/struct.proto\"G\n\017LightstepConf"
      "ig\022\031\n\021collector_cluster\030\001 \001(\t\022\031\n\021access_"
      "token_file\030\002 \001(\t\"E\n\014ZipkinConfig\022\031\n\021coll"
      "ector_cluster\030\001 \001(\t\022\032\n\022collector_endpoin"
      "t\030\002 \001(\t\"r\n\007Tracing\022(\n\004http\030\001 \001(\0132\032.envoy"
      ".api.v2.Tracing.Http\032=\n\004Http\022\014\n\004name\030\001 \001"
      "(\t\022\'\n\006config\030\002 \001(\0132\027.google.protobuf.Str"
      "uct\"^\n\005Admin\022\027\n\017access_log_path\030\001 \001(\t\022\024\n"
      "\014profile_path\030\002 \001(\t\022&\n\007address\030\003 \001(\0132\025.e"
      "nvoy.api.v2.Address\"\332\001\n\016ClusterManager\022\032"
      "\n\022local_cluster_name\030\001 \001(\t\022H\n\021outlier_de"
      "tection\030\002 \001(\0132-.envoy.api.v2.ClusterMana"
      "ger.OutlierDetection\0226\n\024upstream_bind_co"
      "nfig\030\003 \001(\0132\030.envoy.api.v2.BindConfig\032*\n\020"
      "OutlierDetection\022\026\n\016event_log_path\030\001 \001(\t"
      "\"f\n\nStatsdSink\022(\n\007address\030\001 \001(\0132\025.envoy."
      "api.v2.AddressH\000\022\032\n\020tcp_cluster_name\030\002 \001"
      "(\tH\000B\022\n\020statsd_specifier\"B\n\tStatsSink\022\014\n"
      "\004name\030\001 \001(\t\022\'\n\006config\030\002 \001(\0132\027.google.pro"
      "tobuf.Struct\"\327\001\n\010Watchdog\022/\n\014miss_timeou"
      "t\030\001 \001(\0132\031.google.protobuf.Duration\0223\n\020me"
      "gamiss_timeout\030\002 \001(\0132\031.google.protobuf.D"
      "uration\022/\n\014kill_timeout\030\003 \001(\0132\031.google.p"
      "rotobuf.Duration\0224\n\021multikill_timeout\030\004 "
      "\001(\0132\031.google.protobuf.Duration\"T\n\007Runtim"
      "e\022\024\n\014symlink_root\030\001 \001(\t\022\024\n\014subdirectory\030"
      "\002 \001(\t\022\035\n\025override_subdirectory\030\003 \001(\t\".\n\026"
      "RateLimitServiceConfig\022\024\n\014cluster_name\030\001"
      " \001(\t\"\344\007\n\tBootstrap\022 \n\004node\030\001 \001(\0132\022.envoy"
      ".api.v2.Node\022A\n\020static_resources\030\002 \001(\0132\'"
      ".envoy.api.v2.Bootstrap.StaticResources\022"
      "C\n\021dynamic_resources\030\003 \001(\0132(.envoy.api.v"
      "2.Bootstrap.DynamicResources\0225\n\017cluster_"
      "manager\030\004 \001(\0132\034.envoy.api.v2.ClusterMana"
      "ger\022\022\n\nflags_path\030\005 \001(\t\022,\n\013stats_sinks\030\006"
      " \003(\0132\027.envoy.api.v2.StatsSink\0227\n\024stats_f"
      "lush_interval\030\007 \001(\0132\031.google.protobuf.Du"
      "ration\022(\n\010watchdog\030\010 \001(\0132\026.envoy.api.v2."
      "Watchdog\022&\n\007tracing\030\t \001(\0132\025.envoy.api.v2"
      ".Tracing\022@\n\022rate_limit_service\030\n \001(\0132$.e"
      "nvoy.api.v2.RateLimitServiceConfig\022&\n\007ru"
      "ntime\030\013 \001(\0132\025.envoy.api.v2.Runtime\022\"\n\005ad"
      "min\030\014 \001(\0132\023.envoy.api.v2.Admin\032e\n\017Static"
      "Resources\022)\n\tlisteners\030\001 \003(\0132\026.envoy.api"
      ".v2.Listener\022\'\n\010clusters\030\002 \003(\0132\025.envoy.a"
      "pi.v2.Cluster\032\263\002\n\020DynamicResources\022.\n\nld"
      "s_config\030\001 \001(\0132\032.envoy.api.v2.ConfigSour"
      "ce\022.\n\ncds_config\030\002 \001(\0132\032.envoy.api.v2.Co"
      "nfigSource\0221\n\nads_config\030\003 \001(\0132\035.envoy.a"
      "pi.v2.ApiConfigSource\022L\n\rdeprecated_v1\030\004"
      " \001(\01325.envoy.api.v2.Bootstrap.DynamicRes"
      "ources.DeprecatedV1\032>\n\014DeprecatedV1\022.\n\ns"
      "ds_config\030\001 \001(\0132\032.envoy.api.v2.ConfigSou"
      "rceb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2291);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/bootstrap.proto", &protobuf_RegisterTypes);
  ::envoy::api::v2::protobuf_api_2faddress_2eproto::AddDescriptors();
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::AddDescriptors();
  ::envoy::api::v2::protobuf_api_2fdiscovery_2eproto::AddDescriptors();
  ::envoy::api::v2::protobuf_api_2fcds_2eproto::AddDescriptors();
  ::envoy::api::v2::protobuf_api_2flds_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2fbootstrap_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightstepConfig::kCollectorClusterFieldNumber;
const int LightstepConfig::kAccessTokenFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightstepConfig::LightstepConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LightstepConfig)
}
LightstepConfig::LightstepConfig(const LightstepConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collector_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collector_cluster().size() > 0) {
    collector_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_cluster_);
  }
  access_token_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_token_file().size() > 0) {
    access_token_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_file_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LightstepConfig)
}

void LightstepConfig::SharedCtor() {
  collector_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LightstepConfig::~LightstepConfig() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LightstepConfig)
  SharedDtor();
}

void LightstepConfig::SharedDtor() {
  collector_cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LightstepConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LightstepConfig::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LightstepConfig& LightstepConfig::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

LightstepConfig* LightstepConfig::New(::google::protobuf::Arena* arena) const {
  LightstepConfig* n = new LightstepConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LightstepConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LightstepConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collector_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LightstepConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LightstepConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string collector_cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collector_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.LightstepConfig.collector_cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string access_token_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_token_file().data(), static_cast<int>(this->access_token_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.LightstepConfig.access_token_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LightstepConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LightstepConfig)
  return false;
#undef DO_
}

void LightstepConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LightstepConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LightstepConfig.collector_cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collector_cluster(), output);
  }

  // string access_token_file = 2;
  if (this->access_token_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token_file().data(), static_cast<int>(this->access_token_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LightstepConfig.access_token_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->access_token_file(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LightstepConfig)
}

::google::protobuf::uint8* LightstepConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LightstepConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LightstepConfig.collector_cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collector_cluster(), target);
  }

  // string access_token_file = 2;
  if (this->access_token_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token_file().data(), static_cast<int>(this->access_token_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.LightstepConfig.access_token_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->access_token_file(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LightstepConfig)
  return target;
}

size_t LightstepConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LightstepConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collector_cluster());
  }

  // string access_token_file = 2;
  if (this->access_token_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token_file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LightstepConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LightstepConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LightstepConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LightstepConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LightstepConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LightstepConfig)
    MergeFrom(*source);
  }
}

void LightstepConfig::MergeFrom(const LightstepConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LightstepConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.collector_cluster().size() > 0) {

    collector_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_cluster_);
  }
  if (from.access_token_file().size() > 0) {

    access_token_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_file_);
  }
}

void LightstepConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LightstepConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightstepConfig::CopyFrom(const LightstepConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LightstepConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightstepConfig::IsInitialized() const {
  return true;
}

void LightstepConfig::Swap(LightstepConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightstepConfig::InternalSwap(LightstepConfig* other) {
  using std::swap;
  collector_cluster_.Swap(&other->collector_cluster_);
  access_token_file_.Swap(&other->access_token_file_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LightstepConfig::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LightstepConfig

// string collector_cluster = 1;
void LightstepConfig::clear_collector_cluster() {
  collector_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LightstepConfig::collector_cluster() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LightstepConfig.collector_cluster)
  return collector_cluster_.GetNoArena();
}
void LightstepConfig::set_collector_cluster(const ::std::string& value) {
  
  collector_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.LightstepConfig.collector_cluster)
}
#if LANG_CXX11
void LightstepConfig::set_collector_cluster(::std::string&& value) {
  
  collector_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.LightstepConfig.collector_cluster)
}
#endif
void LightstepConfig::set_collector_cluster(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  collector_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.LightstepConfig.collector_cluster)
}
void LightstepConfig::set_collector_cluster(const char* value, size_t size) {
  
  collector_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.LightstepConfig.collector_cluster)
}
::std::string* LightstepConfig::mutable_collector_cluster() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LightstepConfig.collector_cluster)
  return collector_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LightstepConfig::release_collector_cluster() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LightstepConfig.collector_cluster)
  
  return collector_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LightstepConfig::set_allocated_collector_cluster(::std::string* collector_cluster) {
  if (collector_cluster != NULL) {
    
  } else {
    
  }
  collector_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collector_cluster);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LightstepConfig.collector_cluster)
}

// string access_token_file = 2;
void LightstepConfig::clear_access_token_file() {
  access_token_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LightstepConfig::access_token_file() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LightstepConfig.access_token_file)
  return access_token_file_.GetNoArena();
}
void LightstepConfig::set_access_token_file(const ::std::string& value) {
  
  access_token_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.LightstepConfig.access_token_file)
}
#if LANG_CXX11
void LightstepConfig::set_access_token_file(::std::string&& value) {
  
  access_token_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.LightstepConfig.access_token_file)
}
#endif
void LightstepConfig::set_access_token_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  access_token_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.LightstepConfig.access_token_file)
}
void LightstepConfig::set_access_token_file(const char* value, size_t size) {
  
  access_token_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.LightstepConfig.access_token_file)
}
::std::string* LightstepConfig::mutable_access_token_file() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LightstepConfig.access_token_file)
  return access_token_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LightstepConfig::release_access_token_file() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LightstepConfig.access_token_file)
  
  return access_token_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LightstepConfig::set_allocated_access_token_file(::std::string* access_token_file) {
  if (access_token_file != NULL) {
    
  } else {
    
  }
  access_token_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_token_file);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LightstepConfig.access_token_file)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZipkinConfig::kCollectorClusterFieldNumber;
const int ZipkinConfig::kCollectorEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZipkinConfig::ZipkinConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ZipkinConfig)
}
ZipkinConfig::ZipkinConfig(const ZipkinConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collector_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collector_cluster().size() > 0) {
    collector_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_cluster_);
  }
  collector_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collector_endpoint().size() > 0) {
    collector_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_endpoint_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ZipkinConfig)
}

void ZipkinConfig::SharedCtor() {
  collector_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collector_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ZipkinConfig::~ZipkinConfig() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ZipkinConfig)
  SharedDtor();
}

void ZipkinConfig::SharedDtor() {
  collector_cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collector_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZipkinConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZipkinConfig::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZipkinConfig& ZipkinConfig::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZipkinConfig* ZipkinConfig::New(::google::protobuf::Arena* arena) const {
  ZipkinConfig* n = new ZipkinConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZipkinConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ZipkinConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collector_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collector_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ZipkinConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ZipkinConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string collector_cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collector_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ZipkinConfig.collector_cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string collector_endpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collector_endpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collector_endpoint().data(), static_cast<int>(this->collector_endpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ZipkinConfig.collector_endpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ZipkinConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ZipkinConfig)
  return false;
#undef DO_
}

void ZipkinConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ZipkinConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ZipkinConfig.collector_cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collector_cluster(), output);
  }

  // string collector_endpoint = 2;
  if (this->collector_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_endpoint().data(), static_cast<int>(this->collector_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ZipkinConfig.collector_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collector_endpoint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ZipkinConfig)
}

::google::protobuf::uint8* ZipkinConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ZipkinConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_cluster().data(), static_cast<int>(this->collector_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ZipkinConfig.collector_cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collector_cluster(), target);
  }

  // string collector_endpoint = 2;
  if (this->collector_endpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collector_endpoint().data(), static_cast<int>(this->collector_endpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ZipkinConfig.collector_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collector_endpoint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ZipkinConfig)
  return target;
}

size_t ZipkinConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ZipkinConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string collector_cluster = 1;
  if (this->collector_cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collector_cluster());
  }

  // string collector_endpoint = 2;
  if (this->collector_endpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collector_endpoint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZipkinConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ZipkinConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ZipkinConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZipkinConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ZipkinConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ZipkinConfig)
    MergeFrom(*source);
  }
}

void ZipkinConfig::MergeFrom(const ZipkinConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ZipkinConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.collector_cluster().size() > 0) {

    collector_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_cluster_);
  }
  if (from.collector_endpoint().size() > 0) {

    collector_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_endpoint_);
  }
}

void ZipkinConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ZipkinConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZipkinConfig::CopyFrom(const ZipkinConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ZipkinConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZipkinConfig::IsInitialized() const {
  return true;
}

void ZipkinConfig::Swap(ZipkinConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZipkinConfig::InternalSwap(ZipkinConfig* other) {
  using std::swap;
  collector_cluster_.Swap(&other->collector_cluster_);
  collector_endpoint_.Swap(&other->collector_endpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZipkinConfig::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZipkinConfig

// string collector_cluster = 1;
void ZipkinConfig::clear_collector_cluster() {
  collector_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZipkinConfig::collector_cluster() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ZipkinConfig.collector_cluster)
  return collector_cluster_.GetNoArena();
}
void ZipkinConfig::set_collector_cluster(const ::std::string& value) {
  
  collector_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ZipkinConfig.collector_cluster)
}
#if LANG_CXX11
void ZipkinConfig::set_collector_cluster(::std::string&& value) {
  
  collector_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ZipkinConfig.collector_cluster)
}
#endif
void ZipkinConfig::set_collector_cluster(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  collector_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ZipkinConfig.collector_cluster)
}
void ZipkinConfig::set_collector_cluster(const char* value, size_t size) {
  
  collector_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ZipkinConfig.collector_cluster)
}
::std::string* ZipkinConfig::mutable_collector_cluster() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ZipkinConfig.collector_cluster)
  return collector_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZipkinConfig::release_collector_cluster() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ZipkinConfig.collector_cluster)
  
  return collector_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZipkinConfig::set_allocated_collector_cluster(::std::string* collector_cluster) {
  if (collector_cluster != NULL) {
    
  } else {
    
  }
  collector_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collector_cluster);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ZipkinConfig.collector_cluster)
}

// string collector_endpoint = 2;
void ZipkinConfig::clear_collector_endpoint() {
  collector_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZipkinConfig::collector_endpoint() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ZipkinConfig.collector_endpoint)
  return collector_endpoint_.GetNoArena();
}
void ZipkinConfig::set_collector_endpoint(const ::std::string& value) {
  
  collector_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ZipkinConfig.collector_endpoint)
}
#if LANG_CXX11
void ZipkinConfig::set_collector_endpoint(::std::string&& value) {
  
  collector_endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ZipkinConfig.collector_endpoint)
}
#endif
void ZipkinConfig::set_collector_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  collector_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ZipkinConfig.collector_endpoint)
}
void ZipkinConfig::set_collector_endpoint(const char* value, size_t size) {
  
  collector_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ZipkinConfig.collector_endpoint)
}
::std::string* ZipkinConfig::mutable_collector_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ZipkinConfig.collector_endpoint)
  return collector_endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZipkinConfig::release_collector_endpoint() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ZipkinConfig.collector_endpoint)
  
  return collector_endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZipkinConfig::set_allocated_collector_endpoint(::std::string* collector_endpoint) {
  if (collector_endpoint != NULL) {
    
  } else {
    
  }
  collector_endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collector_endpoint);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ZipkinConfig.collector_endpoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tracing_Http::kNameFieldNumber;
const int Tracing_Http::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tracing_Http::Tracing_Http()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Tracing.Http)
}
Tracing_Http::Tracing_Http(const Tracing_Http& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    config_ = new ::google::protobuf::Struct(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Tracing.Http)
}

void Tracing_Http::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_ = NULL;
  _cached_size_ = 0;
}

Tracing_Http::~Tracing_Http() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Tracing.Http)
  SharedDtor();
}

void Tracing_Http::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void Tracing_Http::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tracing_Http::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tracing_Http& Tracing_Http::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Tracing_Http* Tracing_Http::New(::google::protobuf::Arena* arena) const {
  Tracing_Http* n = new Tracing_Http;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tracing_Http::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Tracing.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Tracing_Http::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Tracing.Http)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Tracing.Http.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Tracing.Http)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Tracing.Http)
  return false;
#undef DO_
}

void Tracing_Http::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Tracing.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Tracing.Http.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Tracing.Http)
}

::google::protobuf::uint8* Tracing_Http::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Tracing.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Tracing.Http.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Tracing.Http)
  return target;
}

size_t Tracing_Http::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Tracing.Http)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tracing_Http::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Tracing.Http)
  GOOGLE_DCHECK_NE(&from, this);
  const Tracing_Http* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tracing_Http>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Tracing.Http)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Tracing.Http)
    MergeFrom(*source);
  }
}

void Tracing_Http::MergeFrom(const Tracing_Http& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Tracing.Http)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    mutable_config()->::google::protobuf::Struct::MergeFrom(from.config());
  }
}

void Tracing_Http::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Tracing.Http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tracing_Http::CopyFrom(const Tracing_Http& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Tracing.Http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tracing_Http::IsInitialized() const {
  return true;
}

void Tracing_Http::Swap(Tracing_Http* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tracing_Http::InternalSwap(Tracing_Http* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tracing_Http::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Tracing_Http

// string name = 1;
void Tracing_Http::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Tracing_Http::name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Tracing.Http.name)
  return name_.GetNoArena();
}
void Tracing_Http::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Tracing.Http.name)
}
#if LANG_CXX11
void Tracing_Http::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Tracing.Http.name)
}
#endif
void Tracing_Http::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Tracing.Http.name)
}
void Tracing_Http::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Tracing.Http.name)
}
::std::string* Tracing_Http::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Tracing.Http.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Tracing_Http::release_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Tracing.Http.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Tracing_Http::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Tracing.Http.name)
}

// .google.protobuf.Struct config = 2;
bool Tracing_Http::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
void Tracing_Http::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
const ::google::protobuf::Struct& Tracing_Http::config() const {
  const ::google::protobuf::Struct* p = config_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Tracing.Http.config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
::google::protobuf::Struct* Tracing_Http::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Tracing.Http.config)
  return config_;
}
::google::protobuf::Struct* Tracing_Http::release_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Tracing.Http.config)
  
  ::google::protobuf::Struct* temp = config_;
  config_ = NULL;
  return temp;
}
void Tracing_Http::set_allocated_config(::google::protobuf::Struct* config) {
  delete config_;
  if (config != NULL && config->GetArena() != NULL) {
    ::google::protobuf::Struct* new_config = new ::google::protobuf::Struct;
    new_config->CopyFrom(*config);
    config = new_config;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Tracing.Http.config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tracing::kHttpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tracing::Tracing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Tracing)
}
Tracing::Tracing(const Tracing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_http()) {
    http_ = new ::envoy::api::v2::Tracing_Http(*from.http_);
  } else {
    http_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Tracing)
}

void Tracing::SharedCtor() {
  http_ = NULL;
  _cached_size_ = 0;
}

Tracing::~Tracing() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Tracing)
  SharedDtor();
}

void Tracing::SharedDtor() {
  if (this != internal_default_instance()) delete http_;
}

void Tracing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tracing::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tracing& Tracing::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Tracing* Tracing::New(::google::protobuf::Arena* arena) const {
  Tracing* n = new Tracing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tracing::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && http_ != NULL) {
    delete http_;
  }
  http_ = NULL;
  _internal_metadata_.Clear();
}

bool Tracing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Tracing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Tracing.Http http = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_http()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Tracing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Tracing)
  return false;
#undef DO_
}

void Tracing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Tracing.Http http = 1;
  if (this->has_http()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->http_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Tracing)
}

::google::protobuf::uint8* Tracing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Tracing.Http http = 1;
  if (this->has_http()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->http_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Tracing)
  return target;
}

size_t Tracing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Tracing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.Tracing.Http http = 1;
  if (this->has_http()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->http_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tracing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Tracing)
  GOOGLE_DCHECK_NE(&from, this);
  const Tracing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tracing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Tracing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Tracing)
    MergeFrom(*source);
  }
}

void Tracing::MergeFrom(const Tracing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Tracing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_http()) {
    mutable_http()->::envoy::api::v2::Tracing_Http::MergeFrom(from.http());
  }
}

void Tracing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Tracing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tracing::CopyFrom(const Tracing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Tracing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tracing::IsInitialized() const {
  return true;
}

void Tracing::Swap(Tracing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tracing::InternalSwap(Tracing* other) {
  using std::swap;
  swap(http_, other->http_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tracing::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Tracing

// .envoy.api.v2.Tracing.Http http = 1;
bool Tracing::has_http() const {
  return this != internal_default_instance() && http_ != NULL;
}
void Tracing::clear_http() {
  if (GetArenaNoVirtual() == NULL && http_ != NULL) delete http_;
  http_ = NULL;
}
const ::envoy::api::v2::Tracing_Http& Tracing::http() const {
  const ::envoy::api::v2::Tracing_Http* p = http_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Tracing.http)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Tracing_Http*>(
      &::envoy::api::v2::_Tracing_Http_default_instance_);
}
::envoy::api::v2::Tracing_Http* Tracing::mutable_http() {
  
  if (http_ == NULL) {
    http_ = new ::envoy::api::v2::Tracing_Http;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Tracing.http)
  return http_;
}
::envoy::api::v2::Tracing_Http* Tracing::release_http() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Tracing.http)
  
  ::envoy::api::v2::Tracing_Http* temp = http_;
  http_ = NULL;
  return temp;
}
void Tracing::set_allocated_http(::envoy::api::v2::Tracing_Http* http) {
  delete http_;
  http_ = http;
  if (http) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Tracing.http)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Admin::kAccessLogPathFieldNumber;
const int Admin::kProfilePathFieldNumber;
const int Admin::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Admin::Admin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Admin)
}
Admin::Admin(const Admin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  access_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_log_path().size() > 0) {
    access_log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_log_path_);
  }
  profile_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.profile_path().size() > 0) {
    profile_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profile_path_);
  }
  if (from.has_address()) {
    address_ = new ::envoy::api::v2::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Admin)
}

void Admin::SharedCtor() {
  access_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = NULL;
  _cached_size_ = 0;
}

Admin::~Admin() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Admin)
  SharedDtor();
}

void Admin::SharedDtor() {
  access_log_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void Admin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Admin::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Admin& Admin::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Admin* Admin::New(::google::protobuf::Arena* arena) const {
  Admin* n = new Admin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Admin::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Admin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_log_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  _internal_metadata_.Clear();
}

bool Admin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Admin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string access_log_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_log_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_log_path().data(), static_cast<int>(this->access_log_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Admin.access_log_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string profile_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_profile_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->profile_path().data(), static_cast<int>(this->profile_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Admin.profile_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Address address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Admin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Admin)
  return false;
#undef DO_
}

void Admin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Admin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_log_path = 1;
  if (this->access_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_log_path().data(), static_cast<int>(this->access_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Admin.access_log_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_log_path(), output);
  }

  // string profile_path = 2;
  if (this->profile_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profile_path().data(), static_cast<int>(this->profile_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Admin.profile_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->profile_path(), output);
  }

  // .envoy.api.v2.Address address = 3;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->address_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Admin)
}

::google::protobuf::uint8* Admin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Admin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_log_path = 1;
  if (this->access_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_log_path().data(), static_cast<int>(this->access_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Admin.access_log_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_log_path(), target);
  }

  // string profile_path = 2;
  if (this->profile_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->profile_path().data(), static_cast<int>(this->profile_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Admin.profile_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->profile_path(), target);
  }

  // .envoy.api.v2.Address address = 3;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->address_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Admin)
  return target;
}

size_t Admin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Admin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string access_log_path = 1;
  if (this->access_log_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_log_path());
  }

  // string profile_path = 2;
  if (this->profile_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->profile_path());
  }

  // .envoy.api.v2.Address address = 3;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Admin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Admin)
  GOOGLE_DCHECK_NE(&from, this);
  const Admin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Admin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Admin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Admin)
    MergeFrom(*source);
  }
}

void Admin::MergeFrom(const Admin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Admin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.access_log_path().size() > 0) {

    access_log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_log_path_);
  }
  if (from.profile_path().size() > 0) {

    profile_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profile_path_);
  }
  if (from.has_address()) {
    mutable_address()->::envoy::api::v2::Address::MergeFrom(from.address());
  }
}

void Admin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Admin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Admin::CopyFrom(const Admin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Admin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Admin::IsInitialized() const {
  return true;
}

void Admin::Swap(Admin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Admin::InternalSwap(Admin* other) {
  using std::swap;
  access_log_path_.Swap(&other->access_log_path_);
  profile_path_.Swap(&other->profile_path_);
  swap(address_, other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Admin::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Admin

// string access_log_path = 1;
void Admin::clear_access_log_path() {
  access_log_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Admin::access_log_path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Admin.access_log_path)
  return access_log_path_.GetNoArena();
}
void Admin::set_access_log_path(const ::std::string& value) {
  
  access_log_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Admin.access_log_path)
}
#if LANG_CXX11
void Admin::set_access_log_path(::std::string&& value) {
  
  access_log_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Admin.access_log_path)
}
#endif
void Admin::set_access_log_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  access_log_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Admin.access_log_path)
}
void Admin::set_access_log_path(const char* value, size_t size) {
  
  access_log_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Admin.access_log_path)
}
::std::string* Admin::mutable_access_log_path() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Admin.access_log_path)
  return access_log_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Admin::release_access_log_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Admin.access_log_path)
  
  return access_log_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Admin::set_allocated_access_log_path(::std::string* access_log_path) {
  if (access_log_path != NULL) {
    
  } else {
    
  }
  access_log_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_log_path);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Admin.access_log_path)
}

// string profile_path = 2;
void Admin::clear_profile_path() {
  profile_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Admin::profile_path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Admin.profile_path)
  return profile_path_.GetNoArena();
}
void Admin::set_profile_path(const ::std::string& value) {
  
  profile_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Admin.profile_path)
}
#if LANG_CXX11
void Admin::set_profile_path(::std::string&& value) {
  
  profile_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Admin.profile_path)
}
#endif
void Admin::set_profile_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  profile_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Admin.profile_path)
}
void Admin::set_profile_path(const char* value, size_t size) {
  
  profile_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Admin.profile_path)
}
::std::string* Admin::mutable_profile_path() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Admin.profile_path)
  return profile_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Admin::release_profile_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Admin.profile_path)
  
  return profile_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Admin::set_allocated_profile_path(::std::string* profile_path) {
  if (profile_path != NULL) {
    
  } else {
    
  }
  profile_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profile_path);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Admin.profile_path)
}

// .envoy.api.v2.Address address = 3;
bool Admin::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void Admin::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::envoy::api::v2::Address& Admin::address() const {
  const ::envoy::api::v2::Address* p = address_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Admin.address)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Address*>(
      &::envoy::api::v2::_Address_default_instance_);
}
::envoy::api::v2::Address* Admin::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::envoy::api::v2::Address;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Admin.address)
  return address_;
}
::envoy::api::v2::Address* Admin::release_address() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Admin.address)
  
  ::envoy::api::v2::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void Admin::set_allocated_address(::envoy::api::v2::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Admin.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterManager_OutlierDetection::kEventLogPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterManager_OutlierDetection::ClusterManager_OutlierDetection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterManager.OutlierDetection)
}
ClusterManager_OutlierDetection::ClusterManager_OutlierDetection(const ClusterManager_OutlierDetection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_log_path().size() > 0) {
    event_log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_log_path_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterManager.OutlierDetection)
}

void ClusterManager_OutlierDetection::SharedCtor() {
  event_log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClusterManager_OutlierDetection::~ClusterManager_OutlierDetection() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterManager.OutlierDetection)
  SharedDtor();
}

void ClusterManager_OutlierDetection::SharedDtor() {
  event_log_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClusterManager_OutlierDetection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterManager_OutlierDetection::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterManager_OutlierDetection& ClusterManager_OutlierDetection::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClusterManager_OutlierDetection* ClusterManager_OutlierDetection::New(::google::protobuf::Arena* arena) const {
  ClusterManager_OutlierDetection* n = new ClusterManager_OutlierDetection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterManager_OutlierDetection::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterManager.OutlierDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_log_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClusterManager_OutlierDetection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterManager.OutlierDetection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string event_log_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_log_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_log_path().data(), static_cast<int>(this->event_log_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ClusterManager.OutlierDetection.event_log_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterManager.OutlierDetection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterManager.OutlierDetection)
  return false;
#undef DO_
}

void ClusterManager_OutlierDetection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterManager.OutlierDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_log_path = 1;
  if (this->event_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_log_path().data(), static_cast<int>(this->event_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterManager.OutlierDetection.event_log_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_log_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterManager.OutlierDetection)
}

::google::protobuf::uint8* ClusterManager_OutlierDetection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterManager.OutlierDetection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_log_path = 1;
  if (this->event_log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_log_path().data(), static_cast<int>(this->event_log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterManager.OutlierDetection.event_log_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_log_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterManager.OutlierDetection)
  return target;
}

size_t ClusterManager_OutlierDetection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterManager.OutlierDetection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string event_log_path = 1;
  if (this->event_log_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_log_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterManager_OutlierDetection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterManager.OutlierDetection)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterManager_OutlierDetection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterManager_OutlierDetection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterManager.OutlierDetection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterManager.OutlierDetection)
    MergeFrom(*source);
  }
}

void ClusterManager_OutlierDetection::MergeFrom(const ClusterManager_OutlierDetection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterManager.OutlierDetection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_log_path().size() > 0) {

    event_log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_log_path_);
  }
}

void ClusterManager_OutlierDetection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterManager.OutlierDetection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterManager_OutlierDetection::CopyFrom(const ClusterManager_OutlierDetection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterManager.OutlierDetection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterManager_OutlierDetection::IsInitialized() const {
  return true;
}

void ClusterManager_OutlierDetection::Swap(ClusterManager_OutlierDetection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterManager_OutlierDetection::InternalSwap(ClusterManager_OutlierDetection* other) {
  using std::swap;
  event_log_path_.Swap(&other->event_log_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterManager_OutlierDetection::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterManager_OutlierDetection

// string event_log_path = 1;
void ClusterManager_OutlierDetection::clear_event_log_path() {
  event_log_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterManager_OutlierDetection::event_log_path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterManager.OutlierDetection.event_log_path)
  return event_log_path_.GetNoArena();
}
void ClusterManager_OutlierDetection::set_event_log_path(const ::std::string& value) {
  
  event_log_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterManager.OutlierDetection.event_log_path)
}
#if LANG_CXX11
void ClusterManager_OutlierDetection::set_event_log_path(::std::string&& value) {
  
  event_log_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ClusterManager.OutlierDetection.event_log_path)
}
#endif
void ClusterManager_OutlierDetection::set_event_log_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_log_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ClusterManager.OutlierDetection.event_log_path)
}
void ClusterManager_OutlierDetection::set_event_log_path(const char* value, size_t size) {
  
  event_log_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ClusterManager.OutlierDetection.event_log_path)
}
::std::string* ClusterManager_OutlierDetection::mutable_event_log_path() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterManager.OutlierDetection.event_log_path)
  return event_log_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterManager_OutlierDetection::release_event_log_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterManager.OutlierDetection.event_log_path)
  
  return event_log_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterManager_OutlierDetection::set_allocated_event_log_path(::std::string* event_log_path) {
  if (event_log_path != NULL) {
    
  } else {
    
  }
  event_log_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_log_path);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterManager.OutlierDetection.event_log_path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterManager::kLocalClusterNameFieldNumber;
const int ClusterManager::kOutlierDetectionFieldNumber;
const int ClusterManager::kUpstreamBindConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterManager::ClusterManager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterManager)
}
ClusterManager::ClusterManager(const ClusterManager& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_cluster_name().size() > 0) {
    local_cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_cluster_name_);
  }
  if (from.has_outlier_detection()) {
    outlier_detection_ = new ::envoy::api::v2::ClusterManager_OutlierDetection(*from.outlier_detection_);
  } else {
    outlier_detection_ = NULL;
  }
  if (from.has_upstream_bind_config()) {
    upstream_bind_config_ = new ::envoy::api::v2::BindConfig(*from.upstream_bind_config_);
  } else {
    upstream_bind_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterManager)
}

void ClusterManager::SharedCtor() {
  local_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&outlier_detection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upstream_bind_config_) -
      reinterpret_cast<char*>(&outlier_detection_)) + sizeof(upstream_bind_config_));
  _cached_size_ = 0;
}

ClusterManager::~ClusterManager() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterManager)
  SharedDtor();
}

void ClusterManager::SharedDtor() {
  local_cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete outlier_detection_;
  if (this != internal_default_instance()) delete upstream_bind_config_;
}

void ClusterManager::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterManager::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterManager& ClusterManager::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClusterManager* ClusterManager::New(::google::protobuf::Arena* arena) const {
  ClusterManager* n = new ClusterManager;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterManager::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && outlier_detection_ != NULL) {
    delete outlier_detection_;
  }
  outlier_detection_ = NULL;
  if (GetArenaNoVirtual() == NULL && upstream_bind_config_ != NULL) {
    delete upstream_bind_config_;
  }
  upstream_bind_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ClusterManager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterManager)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string local_cluster_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_cluster_name().data(), static_cast<int>(this->local_cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ClusterManager.local_cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_outlier_detection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.BindConfig upstream_bind_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_upstream_bind_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterManager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterManager)
  return false;
#undef DO_
}

void ClusterManager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_cluster_name = 1;
  if (this->local_cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_cluster_name().data(), static_cast<int>(this->local_cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterManager.local_cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->local_cluster_name(), output);
  }

  // .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
  if (this->has_outlier_detection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->outlier_detection_, output);
  }

  // .envoy.api.v2.BindConfig upstream_bind_config = 3;
  if (this->has_upstream_bind_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->upstream_bind_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterManager)
}

::google::protobuf::uint8* ClusterManager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_cluster_name = 1;
  if (this->local_cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_cluster_name().data(), static_cast<int>(this->local_cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterManager.local_cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->local_cluster_name(), target);
  }

  // .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
  if (this->has_outlier_detection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->outlier_detection_, deterministic, target);
  }

  // .envoy.api.v2.BindConfig upstream_bind_config = 3;
  if (this->has_upstream_bind_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->upstream_bind_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterManager)
  return target;
}

size_t ClusterManager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterManager)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string local_cluster_name = 1;
  if (this->local_cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_cluster_name());
  }

  // .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
  if (this->has_outlier_detection()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->outlier_detection_);
  }

  // .envoy.api.v2.BindConfig upstream_bind_config = 3;
  if (this->has_upstream_bind_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->upstream_bind_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterManager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterManager)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterManager* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterManager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterManager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterManager)
    MergeFrom(*source);
  }
}

void ClusterManager::MergeFrom(const ClusterManager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterManager)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_cluster_name().size() > 0) {

    local_cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_cluster_name_);
  }
  if (from.has_outlier_detection()) {
    mutable_outlier_detection()->::envoy::api::v2::ClusterManager_OutlierDetection::MergeFrom(from.outlier_detection());
  }
  if (from.has_upstream_bind_config()) {
    mutable_upstream_bind_config()->::envoy::api::v2::BindConfig::MergeFrom(from.upstream_bind_config());
  }
}

void ClusterManager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterManager::CopyFrom(const ClusterManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterManager::IsInitialized() const {
  return true;
}

void ClusterManager::Swap(ClusterManager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterManager::InternalSwap(ClusterManager* other) {
  using std::swap;
  local_cluster_name_.Swap(&other->local_cluster_name_);
  swap(outlier_detection_, other->outlier_detection_);
  swap(upstream_bind_config_, other->upstream_bind_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterManager::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterManager

// string local_cluster_name = 1;
void ClusterManager::clear_local_cluster_name() {
  local_cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterManager::local_cluster_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterManager.local_cluster_name)
  return local_cluster_name_.GetNoArena();
}
void ClusterManager::set_local_cluster_name(const ::std::string& value) {
  
  local_cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterManager.local_cluster_name)
}
#if LANG_CXX11
void ClusterManager::set_local_cluster_name(::std::string&& value) {
  
  local_cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ClusterManager.local_cluster_name)
}
#endif
void ClusterManager::set_local_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  local_cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ClusterManager.local_cluster_name)
}
void ClusterManager::set_local_cluster_name(const char* value, size_t size) {
  
  local_cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ClusterManager.local_cluster_name)
}
::std::string* ClusterManager::mutable_local_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterManager.local_cluster_name)
  return local_cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterManager::release_local_cluster_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterManager.local_cluster_name)
  
  return local_cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterManager::set_allocated_local_cluster_name(::std::string* local_cluster_name) {
  if (local_cluster_name != NULL) {
    
  } else {
    
  }
  local_cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), local_cluster_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterManager.local_cluster_name)
}

// .envoy.api.v2.ClusterManager.OutlierDetection outlier_detection = 2;
bool ClusterManager::has_outlier_detection() const {
  return this != internal_default_instance() && outlier_detection_ != NULL;
}
void ClusterManager::clear_outlier_detection() {
  if (GetArenaNoVirtual() == NULL && outlier_detection_ != NULL) delete outlier_detection_;
  outlier_detection_ = NULL;
}
const ::envoy::api::v2::ClusterManager_OutlierDetection& ClusterManager::outlier_detection() const {
  const ::envoy::api::v2::ClusterManager_OutlierDetection* p = outlier_detection_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterManager.outlier_detection)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::ClusterManager_OutlierDetection*>(
      &::envoy::api::v2::_ClusterManager_OutlierDetection_default_instance_);
}
::envoy::api::v2::ClusterManager_OutlierDetection* ClusterManager::mutable_outlier_detection() {
  
  if (outlier_detection_ == NULL) {
    outlier_detection_ = new ::envoy::api::v2::ClusterManager_OutlierDetection;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterManager.outlier_detection)
  return outlier_detection_;
}
::envoy::api::v2::ClusterManager_OutlierDetection* ClusterManager::release_outlier_detection() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterManager.outlier_detection)
  
  ::envoy::api::v2::ClusterManager_OutlierDetection* temp = outlier_detection_;
  outlier_detection_ = NULL;
  return temp;
}
void ClusterManager::set_allocated_outlier_detection(::envoy::api::v2::ClusterManager_OutlierDetection* outlier_detection) {
  delete outlier_detection_;
  outlier_detection_ = outlier_detection;
  if (outlier_detection) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterManager.outlier_detection)
}

// .envoy.api.v2.BindConfig upstream_bind_config = 3;
bool ClusterManager::has_upstream_bind_config() const {
  return this != internal_default_instance() && upstream_bind_config_ != NULL;
}
void ClusterManager::clear_upstream_bind_config() {
  if (GetArenaNoVirtual() == NULL && upstream_bind_config_ != NULL) delete upstream_bind_config_;
  upstream_bind_config_ = NULL;
}
const ::envoy::api::v2::BindConfig& ClusterManager::upstream_bind_config() const {
  const ::envoy::api::v2::BindConfig* p = upstream_bind_config_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterManager.upstream_bind_config)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::BindConfig*>(
      &::envoy::api::v2::_BindConfig_default_instance_);
}
::envoy::api::v2::BindConfig* ClusterManager::mutable_upstream_bind_config() {
  
  if (upstream_bind_config_ == NULL) {
    upstream_bind_config_ = new ::envoy::api::v2::BindConfig;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterManager.upstream_bind_config)
  return upstream_bind_config_;
}
::envoy::api::v2::BindConfig* ClusterManager::release_upstream_bind_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterManager.upstream_bind_config)
  
  ::envoy::api::v2::BindConfig* temp = upstream_bind_config_;
  upstream_bind_config_ = NULL;
  return temp;
}
void ClusterManager::set_allocated_upstream_bind_config(::envoy::api::v2::BindConfig* upstream_bind_config) {
  delete upstream_bind_config_;
  upstream_bind_config_ = upstream_bind_config;
  if (upstream_bind_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterManager.upstream_bind_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatsdSink::kAddressFieldNumber;
const int StatsdSink::kTcpClusterNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatsdSink::StatsdSink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.StatsdSink)
}
StatsdSink::StatsdSink(const StatsdSink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_statsd_specifier();
  switch (from.statsd_specifier_case()) {
    case kAddress: {
      mutable_address()->::envoy::api::v2::Address::MergeFrom(from.address());
      break;
    }
    case kTcpClusterName: {
      set_tcp_cluster_name(from.tcp_cluster_name());
      break;
    }
    case STATSD_SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.StatsdSink)
}

void StatsdSink::SharedCtor() {
  clear_has_statsd_specifier();
  _cached_size_ = 0;
}

StatsdSink::~StatsdSink() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.StatsdSink)
  SharedDtor();
}

void StatsdSink::SharedDtor() {
  if (has_statsd_specifier()) {
    clear_statsd_specifier();
  }
}

void StatsdSink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatsdSink::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatsdSink& StatsdSink::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

StatsdSink* StatsdSink::New(::google::protobuf::Arena* arena) const {
  StatsdSink* n = new StatsdSink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatsdSink::clear_statsd_specifier() {
// @@protoc_insertion_point(one_of_clear_start:envoy.api.v2.StatsdSink)
  switch (statsd_specifier_case()) {
    case kAddress: {
      delete statsd_specifier_.address_;
      break;
    }
    case kTcpClusterName: {
      statsd_specifier_.tcp_cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case STATSD_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STATSD_SPECIFIER_NOT_SET;
}


void StatsdSink::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.StatsdSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_statsd_specifier();
  _internal_metadata_.Clear();
}

bool StatsdSink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.StatsdSink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Address address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tcp_cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tcp_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tcp_cluster_name().data(), static_cast<int>(this->tcp_cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.StatsdSink.tcp_cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.StatsdSink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.StatsdSink)
  return false;
#undef DO_
}

void StatsdSink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.StatsdSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Address address = 1;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *statsd_specifier_.address_, output);
  }

  // string tcp_cluster_name = 2;
  if (has_tcp_cluster_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tcp_cluster_name().data(), static_cast<int>(this->tcp_cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.StatsdSink.tcp_cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tcp_cluster_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.StatsdSink)
}

::google::protobuf::uint8* StatsdSink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.StatsdSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Address address = 1;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *statsd_specifier_.address_, deterministic, target);
  }

  // string tcp_cluster_name = 2;
  if (has_tcp_cluster_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tcp_cluster_name().data(), static_cast<int>(this->tcp_cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.StatsdSink.tcp_cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tcp_cluster_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.StatsdSink)
  return target;
}

size_t StatsdSink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.StatsdSink)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (statsd_specifier_case()) {
    // .envoy.api.v2.Address address = 1;
    case kAddress: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *statsd_specifier_.address_);
      break;
    }
    // string tcp_cluster_name = 2;
    case kTcpClusterName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tcp_cluster_name());
      break;
    }
    case STATSD_SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatsdSink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.StatsdSink)
  GOOGLE_DCHECK_NE(&from, this);
  const StatsdSink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatsdSink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.StatsdSink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.StatsdSink)
    MergeFrom(*source);
  }
}

void StatsdSink::MergeFrom(const StatsdSink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.StatsdSink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.statsd_specifier_case()) {
    case kAddress: {
      mutable_address()->::envoy::api::v2::Address::MergeFrom(from.address());
      break;
    }
    case kTcpClusterName: {
      set_tcp_cluster_name(from.tcp_cluster_name());
      break;
    }
    case STATSD_SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void StatsdSink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.StatsdSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatsdSink::CopyFrom(const StatsdSink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.StatsdSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsdSink::IsInitialized() const {
  return true;
}

void StatsdSink::Swap(StatsdSink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatsdSink::InternalSwap(StatsdSink* other) {
  using std::swap;
  swap(statsd_specifier_, other->statsd_specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatsdSink::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StatsdSink

// .envoy.api.v2.Address address = 1;
bool StatsdSink::has_address() const {
  return statsd_specifier_case() == kAddress;
}
void StatsdSink::set_has_address() {
  _oneof_case_[0] = kAddress;
}
void StatsdSink::clear_address() {
  if (has_address()) {
    delete statsd_specifier_.address_;
    clear_has_statsd_specifier();
  }
}
 const ::envoy::api::v2::Address& StatsdSink::address() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.StatsdSink.address)
  return has_address()
      ? *statsd_specifier_.address_
      : ::envoy::api::v2::Address::default_instance();
}
::envoy::api::v2::Address* StatsdSink::mutable_address() {
  if (!has_address()) {
    clear_statsd_specifier();
    set_has_address();
    statsd_specifier_.address_ = new ::envoy::api::v2::Address;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.StatsdSink.address)
  return statsd_specifier_.address_;
}
::envoy::api::v2::Address* StatsdSink::release_address() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.StatsdSink.address)
  if (has_address()) {
    clear_has_statsd_specifier();
    ::envoy::api::v2::Address* temp = statsd_specifier_.address_;
    statsd_specifier_.address_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void StatsdSink::set_allocated_address(::envoy::api::v2::Address* address) {
  clear_statsd_specifier();
  if (address) {
    set_has_address();
    statsd_specifier_.address_ = address;
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.StatsdSink.address)
}

// string tcp_cluster_name = 2;
bool StatsdSink::has_tcp_cluster_name() const {
  return statsd_specifier_case() == kTcpClusterName;
}
void StatsdSink::set_has_tcp_cluster_name() {
  _oneof_case_[0] = kTcpClusterName;
}
void StatsdSink::clear_tcp_cluster_name() {
  if (has_tcp_cluster_name()) {
    statsd_specifier_.tcp_cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_statsd_specifier();
  }
}
const ::std::string& StatsdSink::tcp_cluster_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.StatsdSink.tcp_cluster_name)
  if (has_tcp_cluster_name()) {
    return statsd_specifier_.tcp_cluster_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void StatsdSink::set_tcp_cluster_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.StatsdSink.tcp_cluster_name)
  if (!has_tcp_cluster_name()) {
    clear_statsd_specifier();
    set_has_tcp_cluster_name();
    statsd_specifier_.tcp_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  statsd_specifier_.tcp_cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.StatsdSink.tcp_cluster_name)
}
#if LANG_CXX11
void StatsdSink::set_tcp_cluster_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.StatsdSink.tcp_cluster_name)
  if (!has_tcp_cluster_name()) {
    clear_statsd_specifier();
    set_has_tcp_cluster_name();
    statsd_specifier_.tcp_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  statsd_specifier_.tcp_cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.StatsdSink.tcp_cluster_name)
}
#endif
void StatsdSink::set_tcp_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_tcp_cluster_name()) {
    clear_statsd_specifier();
    set_has_tcp_cluster_name();
    statsd_specifier_.tcp_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  statsd_specifier_.tcp_cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.StatsdSink.tcp_cluster_name)
}
void StatsdSink::set_tcp_cluster_name(const char* value, size_t size) {
  if (!has_tcp_cluster_name()) {
    clear_statsd_specifier();
    set_has_tcp_cluster_name();
    statsd_specifier_.tcp_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  statsd_specifier_.tcp_cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.StatsdSink.tcp_cluster_name)
}
::std::string* StatsdSink::mutable_tcp_cluster_name() {
  if (!has_tcp_cluster_name()) {
    clear_statsd_specifier();
    set_has_tcp_cluster_name();
    statsd_specifier_.tcp_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.StatsdSink.tcp_cluster_name)
  return statsd_specifier_.tcp_cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StatsdSink::release_tcp_cluster_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.StatsdSink.tcp_cluster_name)
  if (has_tcp_cluster_name()) {
    clear_has_statsd_specifier();
    return statsd_specifier_.tcp_cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void StatsdSink::set_allocated_tcp_cluster_name(::std::string* tcp_cluster_name) {
  if (!has_tcp_cluster_name()) {
    statsd_specifier_.tcp_cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_statsd_specifier();
  if (tcp_cluster_name != NULL) {
    set_has_tcp_cluster_name();
    statsd_specifier_.tcp_cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        tcp_cluster_name);
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.StatsdSink.tcp_cluster_name)
}

bool StatsdSink::has_statsd_specifier() const {
  return statsd_specifier_case() != STATSD_SPECIFIER_NOT_SET;
}
void StatsdSink::clear_has_statsd_specifier() {
  _oneof_case_[0] = STATSD_SPECIFIER_NOT_SET;
}
StatsdSink::StatsdSpecifierCase StatsdSink::statsd_specifier_case() const {
  return StatsdSink::StatsdSpecifierCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatsSink::kNameFieldNumber;
const int StatsSink::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatsSink::StatsSink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.StatsSink)
}
StatsSink::StatsSink(const StatsSink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    config_ = new ::google::protobuf::Struct(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.StatsSink)
}

void StatsSink::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_ = NULL;
  _cached_size_ = 0;
}

StatsSink::~StatsSink() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.StatsSink)
  SharedDtor();
}

void StatsSink::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void StatsSink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatsSink::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatsSink& StatsSink::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

StatsSink* StatsSink::New(::google::protobuf::Arena* arena) const {
  StatsSink* n = new StatsSink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatsSink::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.StatsSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool StatsSink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.StatsSink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.StatsSink.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.StatsSink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.StatsSink)
  return false;
#undef DO_
}

void StatsSink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.StatsSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.StatsSink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.StatsSink)
}

::google::protobuf::uint8* StatsSink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.StatsSink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.StatsSink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.StatsSink)
  return target;
}

size_t StatsSink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.StatsSink)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Struct config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatsSink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.StatsSink)
  GOOGLE_DCHECK_NE(&from, this);
  const StatsSink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatsSink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.StatsSink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.StatsSink)
    MergeFrom(*source);
  }
}

void StatsSink::MergeFrom(const StatsSink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.StatsSink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_config()) {
    mutable_config()->::google::protobuf::Struct::MergeFrom(from.config());
  }
}

void StatsSink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.StatsSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatsSink::CopyFrom(const StatsSink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.StatsSink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsSink::IsInitialized() const {
  return true;
}

void StatsSink::Swap(StatsSink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatsSink::InternalSwap(StatsSink* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatsSink::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StatsSink

// string name = 1;
void StatsSink::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StatsSink::name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.StatsSink.name)
  return name_.GetNoArena();
}
void StatsSink::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.StatsSink.name)
}
#if LANG_CXX11
void StatsSink::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.StatsSink.name)
}
#endif
void StatsSink::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.StatsSink.name)
}
void StatsSink::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.StatsSink.name)
}
::std::string* StatsSink::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.StatsSink.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StatsSink::release_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.StatsSink.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StatsSink::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.StatsSink.name)
}

// .google.protobuf.Struct config = 2;
bool StatsSink::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
void StatsSink::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
const ::google::protobuf::Struct& StatsSink::config() const {
  const ::google::protobuf::Struct* p = config_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.StatsSink.config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Struct*>(
      &::google::protobuf::_Struct_default_instance_);
}
::google::protobuf::Struct* StatsSink::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.StatsSink.config)
  return config_;
}
::google::protobuf::Struct* StatsSink::release_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.StatsSink.config)
  
  ::google::protobuf::Struct* temp = config_;
  config_ = NULL;
  return temp;
}
void StatsSink::set_allocated_config(::google::protobuf::Struct* config) {
  delete config_;
  if (config != NULL && config->GetArena() != NULL) {
    ::google::protobuf::Struct* new_config = new ::google::protobuf::Struct;
    new_config->CopyFrom(*config);
    config = new_config;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.StatsSink.config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Watchdog::kMissTimeoutFieldNumber;
const int Watchdog::kMegamissTimeoutFieldNumber;
const int Watchdog::kKillTimeoutFieldNumber;
const int Watchdog::kMultikillTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Watchdog::Watchdog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Watchdog)
}
Watchdog::Watchdog(const Watchdog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_miss_timeout()) {
    miss_timeout_ = new ::google::protobuf::Duration(*from.miss_timeout_);
  } else {
    miss_timeout_ = NULL;
  }
  if (from.has_megamiss_timeout()) {
    megamiss_timeout_ = new ::google::protobuf::Duration(*from.megamiss_timeout_);
  } else {
    megamiss_timeout_ = NULL;
  }
  if (from.has_kill_timeout()) {
    kill_timeout_ = new ::google::protobuf::Duration(*from.kill_timeout_);
  } else {
    kill_timeout_ = NULL;
  }
  if (from.has_multikill_timeout()) {
    multikill_timeout_ = new ::google::protobuf::Duration(*from.multikill_timeout_);
  } else {
    multikill_timeout_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Watchdog)
}

void Watchdog::SharedCtor() {
  ::memset(&miss_timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&multikill_timeout_) -
      reinterpret_cast<char*>(&miss_timeout_)) + sizeof(multikill_timeout_));
  _cached_size_ = 0;
}

Watchdog::~Watchdog() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Watchdog)
  SharedDtor();
}

void Watchdog::SharedDtor() {
  if (this != internal_default_instance()) delete miss_timeout_;
  if (this != internal_default_instance()) delete megamiss_timeout_;
  if (this != internal_default_instance()) delete kill_timeout_;
  if (this != internal_default_instance()) delete multikill_timeout_;
}

void Watchdog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Watchdog::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Watchdog& Watchdog::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Watchdog* Watchdog::New(::google::protobuf::Arena* arena) const {
  Watchdog* n = new Watchdog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Watchdog::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Watchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && miss_timeout_ != NULL) {
    delete miss_timeout_;
  }
  miss_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && megamiss_timeout_ != NULL) {
    delete megamiss_timeout_;
  }
  megamiss_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && kill_timeout_ != NULL) {
    delete kill_timeout_;
  }
  kill_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && multikill_timeout_ != NULL) {
    delete multikill_timeout_;
  }
  multikill_timeout_ = NULL;
  _internal_metadata_.Clear();
}

bool Watchdog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Watchdog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration miss_timeout = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_miss_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration megamiss_timeout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_megamiss_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration kill_timeout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kill_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration multikill_timeout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_multikill_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Watchdog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Watchdog)
  return false;
#undef DO_
}

void Watchdog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Watchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration miss_timeout = 1;
  if (this->has_miss_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->miss_timeout_, output);
  }

  // .google.protobuf.Duration megamiss_timeout = 2;
  if (this->has_megamiss_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->megamiss_timeout_, output);
  }

  // .google.protobuf.Duration kill_timeout = 3;
  if (this->has_kill_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->kill_timeout_, output);
  }

  // .google.protobuf.Duration multikill_timeout = 4;
  if (this->has_multikill_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->multikill_timeout_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Watchdog)
}

::google::protobuf::uint8* Watchdog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Watchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration miss_timeout = 1;
  if (this->has_miss_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->miss_timeout_, deterministic, target);
  }

  // .google.protobuf.Duration megamiss_timeout = 2;
  if (this->has_megamiss_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->megamiss_timeout_, deterministic, target);
  }

  // .google.protobuf.Duration kill_timeout = 3;
  if (this->has_kill_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->kill_timeout_, deterministic, target);
  }

  // .google.protobuf.Duration multikill_timeout = 4;
  if (this->has_multikill_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->multikill_timeout_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Watchdog)
  return target;
}

size_t Watchdog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Watchdog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration miss_timeout = 1;
  if (this->has_miss_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->miss_timeout_);
  }

  // .google.protobuf.Duration megamiss_timeout = 2;
  if (this->has_megamiss_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->megamiss_timeout_);
  }

  // .google.protobuf.Duration kill_timeout = 3;
  if (this->has_kill_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->kill_timeout_);
  }

  // .google.protobuf.Duration multikill_timeout = 4;
  if (this->has_multikill_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->multikill_timeout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Watchdog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Watchdog)
  GOOGLE_DCHECK_NE(&from, this);
  const Watchdog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Watchdog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Watchdog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Watchdog)
    MergeFrom(*source);
  }
}

void Watchdog::MergeFrom(const Watchdog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Watchdog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_miss_timeout()) {
    mutable_miss_timeout()->::google::protobuf::Duration::MergeFrom(from.miss_timeout());
  }
  if (from.has_megamiss_timeout()) {
    mutable_megamiss_timeout()->::google::protobuf::Duration::MergeFrom(from.megamiss_timeout());
  }
  if (from.has_kill_timeout()) {
    mutable_kill_timeout()->::google::protobuf::Duration::MergeFrom(from.kill_timeout());
  }
  if (from.has_multikill_timeout()) {
    mutable_multikill_timeout()->::google::protobuf::Duration::MergeFrom(from.multikill_timeout());
  }
}

void Watchdog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Watchdog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Watchdog::CopyFrom(const Watchdog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Watchdog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Watchdog::IsInitialized() const {
  return true;
}

void Watchdog::Swap(Watchdog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Watchdog::InternalSwap(Watchdog* other) {
  using std::swap;
  swap(miss_timeout_, other->miss_timeout_);
  swap(megamiss_timeout_, other->megamiss_timeout_);
  swap(kill_timeout_, other->kill_timeout_);
  swap(multikill_timeout_, other->multikill_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Watchdog::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Watchdog

// .google.protobuf.Duration miss_timeout = 1;
bool Watchdog::has_miss_timeout() const {
  return this != internal_default_instance() && miss_timeout_ != NULL;
}
void Watchdog::clear_miss_timeout() {
  if (GetArenaNoVirtual() == NULL && miss_timeout_ != NULL) delete miss_timeout_;
  miss_timeout_ = NULL;
}
const ::google::protobuf::Duration& Watchdog::miss_timeout() const {
  const ::google::protobuf::Duration* p = miss_timeout_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Watchdog.miss_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
::google::protobuf::Duration* Watchdog::mutable_miss_timeout() {
  
  if (miss_timeout_ == NULL) {
    miss_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Watchdog.miss_timeout)
  return miss_timeout_;
}
::google::protobuf::Duration* Watchdog::release_miss_timeout() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Watchdog.miss_timeout)
  
  ::google::protobuf::Duration* temp = miss_timeout_;
  miss_timeout_ = NULL;
  return temp;
}
void Watchdog::set_allocated_miss_timeout(::google::protobuf::Duration* miss_timeout) {
  delete miss_timeout_;
  if (miss_timeout != NULL && miss_timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_miss_timeout = new ::google::protobuf::Duration;
    new_miss_timeout->CopyFrom(*miss_timeout);
    miss_timeout = new_miss_timeout;
  }
  miss_timeout_ = miss_timeout;
  if (miss_timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Watchdog.miss_timeout)
}

// .google.protobuf.Duration megamiss_timeout = 2;
bool Watchdog::has_megamiss_timeout() const {
  return this != internal_default_instance() && megamiss_timeout_ != NULL;
}
void Watchdog::clear_megamiss_timeout() {
  if (GetArenaNoVirtual() == NULL && megamiss_timeout_ != NULL) delete megamiss_timeout_;
  megamiss_timeout_ = NULL;
}
const ::google::protobuf::Duration& Watchdog::megamiss_timeout() const {
  const ::google::protobuf::Duration* p = megamiss_timeout_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Watchdog.megamiss_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
::google::protobuf::Duration* Watchdog::mutable_megamiss_timeout() {
  
  if (megamiss_timeout_ == NULL) {
    megamiss_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Watchdog.megamiss_timeout)
  return megamiss_timeout_;
}
::google::protobuf::Duration* Watchdog::release_megamiss_timeout() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Watchdog.megamiss_timeout)
  
  ::google::protobuf::Duration* temp = megamiss_timeout_;
  megamiss_timeout_ = NULL;
  return temp;
}
void Watchdog::set_allocated_megamiss_timeout(::google::protobuf::Duration* megamiss_timeout) {
  delete megamiss_timeout_;
  if (megamiss_timeout != NULL && megamiss_timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_megamiss_timeout = new ::google::protobuf::Duration;
    new_megamiss_timeout->CopyFrom(*megamiss_timeout);
    megamiss_timeout = new_megamiss_timeout;
  }
  megamiss_timeout_ = megamiss_timeout;
  if (megamiss_timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Watchdog.megamiss_timeout)
}

// .google.protobuf.Duration kill_timeout = 3;
bool Watchdog::has_kill_timeout() const {
  return this != internal_default_instance() && kill_timeout_ != NULL;
}
void Watchdog::clear_kill_timeout() {
  if (GetArenaNoVirtual() == NULL && kill_timeout_ != NULL) delete kill_timeout_;
  kill_timeout_ = NULL;
}
const ::google::protobuf::Duration& Watchdog::kill_timeout() const {
  const ::google::protobuf::Duration* p = kill_timeout_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Watchdog.kill_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
::google::protobuf::Duration* Watchdog::mutable_kill_timeout() {
  
  if (kill_timeout_ == NULL) {
    kill_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Watchdog.kill_timeout)
  return kill_timeout_;
}
::google::protobuf::Duration* Watchdog::release_kill_timeout() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Watchdog.kill_timeout)
  
  ::google::protobuf::Duration* temp = kill_timeout_;
  kill_timeout_ = NULL;
  return temp;
}
void Watchdog::set_allocated_kill_timeout(::google::protobuf::Duration* kill_timeout) {
  delete kill_timeout_;
  if (kill_timeout != NULL && kill_timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_kill_timeout = new ::google::protobuf::Duration;
    new_kill_timeout->CopyFrom(*kill_timeout);
    kill_timeout = new_kill_timeout;
  }
  kill_timeout_ = kill_timeout;
  if (kill_timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Watchdog.kill_timeout)
}

// .google.protobuf.Duration multikill_timeout = 4;
bool Watchdog::has_multikill_timeout() const {
  return this != internal_default_instance() && multikill_timeout_ != NULL;
}
void Watchdog::clear_multikill_timeout() {
  if (GetArenaNoVirtual() == NULL && multikill_timeout_ != NULL) delete multikill_timeout_;
  multikill_timeout_ = NULL;
}
const ::google::protobuf::Duration& Watchdog::multikill_timeout() const {
  const ::google::protobuf::Duration* p = multikill_timeout_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Watchdog.multikill_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
::google::protobuf::Duration* Watchdog::mutable_multikill_timeout() {
  
  if (multikill_timeout_ == NULL) {
    multikill_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Watchdog.multikill_timeout)
  return multikill_timeout_;
}
::google::protobuf::Duration* Watchdog::release_multikill_timeout() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Watchdog.multikill_timeout)
  
  ::google::protobuf::Duration* temp = multikill_timeout_;
  multikill_timeout_ = NULL;
  return temp;
}
void Watchdog::set_allocated_multikill_timeout(::google::protobuf::Duration* multikill_timeout) {
  delete multikill_timeout_;
  if (multikill_timeout != NULL && multikill_timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_multikill_timeout = new ::google::protobuf::Duration;
    new_multikill_timeout->CopyFrom(*multikill_timeout);
    multikill_timeout = new_multikill_timeout;
  }
  multikill_timeout_ = multikill_timeout;
  if (multikill_timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Watchdog.multikill_timeout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Runtime::kSymlinkRootFieldNumber;
const int Runtime::kSubdirectoryFieldNumber;
const int Runtime::kOverrideSubdirectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Runtime::Runtime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Runtime)
}
Runtime::Runtime(const Runtime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symlink_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symlink_root().size() > 0) {
    symlink_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symlink_root_);
  }
  subdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subdirectory().size() > 0) {
    subdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subdirectory_);
  }
  override_subdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.override_subdirectory().size() > 0) {
    override_subdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.override_subdirectory_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Runtime)
}

void Runtime::SharedCtor() {
  symlink_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  override_subdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Runtime::~Runtime() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Runtime)
  SharedDtor();
}

void Runtime::SharedDtor() {
  symlink_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subdirectory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  override_subdirectory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Runtime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Runtime::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Runtime& Runtime::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Runtime* Runtime::New(::google::protobuf::Arena* arena) const {
  Runtime* n = new Runtime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Runtime::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Runtime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symlink_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  override_subdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Runtime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Runtime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symlink_root = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symlink_root()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symlink_root().data(), static_cast<int>(this->symlink_root().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Runtime.symlink_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subdirectory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subdirectory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subdirectory().data(), static_cast<int>(this->subdirectory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Runtime.subdirectory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string override_subdirectory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_override_subdirectory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->override_subdirectory().data(), static_cast<int>(this->override_subdirectory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Runtime.override_subdirectory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Runtime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Runtime)
  return false;
#undef DO_
}

void Runtime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Runtime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symlink_root = 1;
  if (this->symlink_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symlink_root().data(), static_cast<int>(this->symlink_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.symlink_root");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symlink_root(), output);
  }

  // string subdirectory = 2;
  if (this->subdirectory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subdirectory().data(), static_cast<int>(this->subdirectory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.subdirectory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subdirectory(), output);
  }

  // string override_subdirectory = 3;
  if (this->override_subdirectory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->override_subdirectory().data(), static_cast<int>(this->override_subdirectory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.override_subdirectory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->override_subdirectory(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Runtime)
}

::google::protobuf::uint8* Runtime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Runtime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symlink_root = 1;
  if (this->symlink_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symlink_root().data(), static_cast<int>(this->symlink_root().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.symlink_root");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symlink_root(), target);
  }

  // string subdirectory = 2;
  if (this->subdirectory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subdirectory().data(), static_cast<int>(this->subdirectory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.subdirectory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subdirectory(), target);
  }

  // string override_subdirectory = 3;
  if (this->override_subdirectory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->override_subdirectory().data(), static_cast<int>(this->override_subdirectory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Runtime.override_subdirectory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->override_subdirectory(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Runtime)
  return target;
}

size_t Runtime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Runtime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symlink_root = 1;
  if (this->symlink_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symlink_root());
  }

  // string subdirectory = 2;
  if (this->subdirectory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subdirectory());
  }

  // string override_subdirectory = 3;
  if (this->override_subdirectory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->override_subdirectory());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Runtime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Runtime)
  GOOGLE_DCHECK_NE(&from, this);
  const Runtime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Runtime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Runtime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Runtime)
    MergeFrom(*source);
  }
}

void Runtime::MergeFrom(const Runtime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Runtime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symlink_root().size() > 0) {

    symlink_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symlink_root_);
  }
  if (from.subdirectory().size() > 0) {

    subdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subdirectory_);
  }
  if (from.override_subdirectory().size() > 0) {

    override_subdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.override_subdirectory_);
  }
}

void Runtime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Runtime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Runtime::CopyFrom(const Runtime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Runtime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Runtime::IsInitialized() const {
  return true;
}

void Runtime::Swap(Runtime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Runtime::InternalSwap(Runtime* other) {
  using std::swap;
  symlink_root_.Swap(&other->symlink_root_);
  subdirectory_.Swap(&other->subdirectory_);
  override_subdirectory_.Swap(&other->override_subdirectory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Runtime::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Runtime

// string symlink_root = 1;
void Runtime::clear_symlink_root() {
  symlink_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Runtime::symlink_root() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Runtime.symlink_root)
  return symlink_root_.GetNoArena();
}
void Runtime::set_symlink_root(const ::std::string& value) {
  
  symlink_root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Runtime.symlink_root)
}
#if LANG_CXX11
void Runtime::set_symlink_root(::std::string&& value) {
  
  symlink_root_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Runtime.symlink_root)
}
#endif
void Runtime::set_symlink_root(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symlink_root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Runtime.symlink_root)
}
void Runtime::set_symlink_root(const char* value, size_t size) {
  
  symlink_root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Runtime.symlink_root)
}
::std::string* Runtime::mutable_symlink_root() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Runtime.symlink_root)
  return symlink_root_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Runtime::release_symlink_root() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Runtime.symlink_root)
  
  return symlink_root_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Runtime::set_allocated_symlink_root(::std::string* symlink_root) {
  if (symlink_root != NULL) {
    
  } else {
    
  }
  symlink_root_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symlink_root);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Runtime.symlink_root)
}

// string subdirectory = 2;
void Runtime::clear_subdirectory() {
  subdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Runtime::subdirectory() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Runtime.subdirectory)
  return subdirectory_.GetNoArena();
}
void Runtime::set_subdirectory(const ::std::string& value) {
  
  subdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Runtime.subdirectory)
}
#if LANG_CXX11
void Runtime::set_subdirectory(::std::string&& value) {
  
  subdirectory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Runtime.subdirectory)
}
#endif
void Runtime::set_subdirectory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Runtime.subdirectory)
}
void Runtime::set_subdirectory(const char* value, size_t size) {
  
  subdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Runtime.subdirectory)
}
::std::string* Runtime::mutable_subdirectory() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Runtime.subdirectory)
  return subdirectory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Runtime::release_subdirectory() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Runtime.subdirectory)
  
  return subdirectory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Runtime::set_allocated_subdirectory(::std::string* subdirectory) {
  if (subdirectory != NULL) {
    
  } else {
    
  }
  subdirectory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subdirectory);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Runtime.subdirectory)
}

// string override_subdirectory = 3;
void Runtime::clear_override_subdirectory() {
  override_subdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Runtime::override_subdirectory() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Runtime.override_subdirectory)
  return override_subdirectory_.GetNoArena();
}
void Runtime::set_override_subdirectory(const ::std::string& value) {
  
  override_subdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Runtime.override_subdirectory)
}
#if LANG_CXX11
void Runtime::set_override_subdirectory(::std::string&& value) {
  
  override_subdirectory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Runtime.override_subdirectory)
}
#endif
void Runtime::set_override_subdirectory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  override_subdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Runtime.override_subdirectory)
}
void Runtime::set_override_subdirectory(const char* value, size_t size) {
  
  override_subdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Runtime.override_subdirectory)
}
::std::string* Runtime::mutable_override_subdirectory() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Runtime.override_subdirectory)
  return override_subdirectory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Runtime::release_override_subdirectory() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Runtime.override_subdirectory)
  
  return override_subdirectory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Runtime::set_allocated_override_subdirectory(::std::string* override_subdirectory) {
  if (override_subdirectory != NULL) {
    
  } else {
    
  }
  override_subdirectory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), override_subdirectory);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Runtime.override_subdirectory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RateLimitServiceConfig::kClusterNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RateLimitServiceConfig::RateLimitServiceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.RateLimitServiceConfig)
}
RateLimitServiceConfig::RateLimitServiceConfig(const RateLimitServiceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.RateLimitServiceConfig)
}

void RateLimitServiceConfig::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RateLimitServiceConfig::~RateLimitServiceConfig() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.RateLimitServiceConfig)
  SharedDtor();
}

void RateLimitServiceConfig::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RateLimitServiceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RateLimitServiceConfig::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RateLimitServiceConfig& RateLimitServiceConfig::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

RateLimitServiceConfig* RateLimitServiceConfig::New(::google::protobuf::Arena* arena) const {
  RateLimitServiceConfig* n = new RateLimitServiceConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RateLimitServiceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.RateLimitServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RateLimitServiceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.RateLimitServiceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.RateLimitServiceConfig.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.RateLimitServiceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.RateLimitServiceConfig)
  return false;
#undef DO_
}

void RateLimitServiceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.RateLimitServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.RateLimitServiceConfig.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.RateLimitServiceConfig)
}

::google::protobuf::uint8* RateLimitServiceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.RateLimitServiceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.RateLimitServiceConfig.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.RateLimitServiceConfig)
  return target;
}

size_t RateLimitServiceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.RateLimitServiceConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RateLimitServiceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.RateLimitServiceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RateLimitServiceConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RateLimitServiceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.RateLimitServiceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.RateLimitServiceConfig)
    MergeFrom(*source);
  }
}

void RateLimitServiceConfig::MergeFrom(const RateLimitServiceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.RateLimitServiceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
}

void RateLimitServiceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.RateLimitServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RateLimitServiceConfig::CopyFrom(const RateLimitServiceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.RateLimitServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RateLimitServiceConfig::IsInitialized() const {
  return true;
}

void RateLimitServiceConfig::Swap(RateLimitServiceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RateLimitServiceConfig::InternalSwap(RateLimitServiceConfig* other) {
  using std::swap;
  cluster_name_.Swap(&other->cluster_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RateLimitServiceConfig::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RateLimitServiceConfig

// string cluster_name = 1;
void RateLimitServiceConfig::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RateLimitServiceConfig::cluster_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitServiceConfig.cluster_name)
  return cluster_name_.GetNoArena();
}
void RateLimitServiceConfig::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitServiceConfig.cluster_name)
}
#if LANG_CXX11
void RateLimitServiceConfig::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.RateLimitServiceConfig.cluster_name)
}
#endif
void RateLimitServiceConfig::set_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.RateLimitServiceConfig.cluster_name)
}
void RateLimitServiceConfig::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.RateLimitServiceConfig.cluster_name)
}
::std::string* RateLimitServiceConfig::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RateLimitServiceConfig.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RateLimitServiceConfig::release_cluster_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.RateLimitServiceConfig.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RateLimitServiceConfig::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.RateLimitServiceConfig.cluster_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap_StaticResources::kListenersFieldNumber;
const int Bootstrap_StaticResources::kClustersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap_StaticResources::Bootstrap_StaticResources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap.StaticResources)
}
Bootstrap_StaticResources::Bootstrap_StaticResources(const Bootstrap_StaticResources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      listeners_(from.listeners_),
      clusters_(from.clusters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap.StaticResources)
}

void Bootstrap_StaticResources::SharedCtor() {
  _cached_size_ = 0;
}

Bootstrap_StaticResources::~Bootstrap_StaticResources() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap.StaticResources)
  SharedDtor();
}

void Bootstrap_StaticResources::SharedDtor() {
}

void Bootstrap_StaticResources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap_StaticResources::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap_StaticResources& Bootstrap_StaticResources::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bootstrap_StaticResources* Bootstrap_StaticResources::New(::google::protobuf::Arena* arena) const {
  Bootstrap_StaticResources* n = new Bootstrap_StaticResources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap_StaticResources::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap.StaticResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listeners_.Clear();
  clusters_.Clear();
  _internal_metadata_.Clear();
}

bool Bootstrap_StaticResources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap.StaticResources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .envoy.api.v2.Listener listeners = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_listeners()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.Cluster clusters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap.StaticResources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap.StaticResources)
  return false;
#undef DO_
}

void Bootstrap_StaticResources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap.StaticResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .envoy.api.v2.Listener listeners = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listeners_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->listeners(static_cast<int>(i)), output);
  }

  // repeated .envoy.api.v2.Cluster clusters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->clusters(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap.StaticResources)
}

::google::protobuf::uint8* Bootstrap_StaticResources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap.StaticResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .envoy.api.v2.Listener listeners = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listeners_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->listeners(static_cast<int>(i)), deterministic, target);
  }

  // repeated .envoy.api.v2.Cluster clusters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->clusters(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap.StaticResources)
  return target;
}

size_t Bootstrap_StaticResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap.StaticResources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.Listener listeners = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->listeners_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->listeners(static_cast<int>(i)));
    }
  }

  // repeated .envoy.api.v2.Cluster clusters = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clusters(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap_StaticResources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap.StaticResources)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap_StaticResources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap_StaticResources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap.StaticResources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap.StaticResources)
    MergeFrom(*source);
  }
}

void Bootstrap_StaticResources::MergeFrom(const Bootstrap_StaticResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap.StaticResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listeners_.MergeFrom(from.listeners_);
  clusters_.MergeFrom(from.clusters_);
}

void Bootstrap_StaticResources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap.StaticResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap_StaticResources::CopyFrom(const Bootstrap_StaticResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap.StaticResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap_StaticResources::IsInitialized() const {
  return true;
}

void Bootstrap_StaticResources::Swap(Bootstrap_StaticResources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap_StaticResources::InternalSwap(Bootstrap_StaticResources* other) {
  using std::swap;
  listeners_.InternalSwap(&other->listeners_);
  clusters_.InternalSwap(&other->clusters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap_StaticResources::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bootstrap_StaticResources

// repeated .envoy.api.v2.Listener listeners = 1;
int Bootstrap_StaticResources::listeners_size() const {
  return listeners_.size();
}
void Bootstrap_StaticResources::clear_listeners() {
  listeners_.Clear();
}
const ::envoy::api::v2::Listener& Bootstrap_StaticResources::listeners(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.StaticResources.listeners)
  return listeners_.Get(index);
}
::envoy::api::v2::Listener* Bootstrap_StaticResources::mutable_listeners(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.StaticResources.listeners)
  return listeners_.Mutable(index);
}
::envoy::api::v2::Listener* Bootstrap_StaticResources::add_listeners() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.Bootstrap.StaticResources.listeners)
  return listeners_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Listener >*
Bootstrap_StaticResources::mutable_listeners() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.Bootstrap.StaticResources.listeners)
  return &listeners_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Listener >&
Bootstrap_StaticResources::listeners() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.Bootstrap.StaticResources.listeners)
  return listeners_;
}

// repeated .envoy.api.v2.Cluster clusters = 2;
int Bootstrap_StaticResources::clusters_size() const {
  return clusters_.size();
}
void Bootstrap_StaticResources::clear_clusters() {
  clusters_.Clear();
}
const ::envoy::api::v2::Cluster& Bootstrap_StaticResources::clusters(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.StaticResources.clusters)
  return clusters_.Get(index);
}
::envoy::api::v2::Cluster* Bootstrap_StaticResources::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.StaticResources.clusters)
  return clusters_.Mutable(index);
}
::envoy::api::v2::Cluster* Bootstrap_StaticResources::add_clusters() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.Bootstrap.StaticResources.clusters)
  return clusters_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster >*
Bootstrap_StaticResources::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.Bootstrap.StaticResources.clusters)
  return &clusters_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster >&
Bootstrap_StaticResources::clusters() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.Bootstrap.StaticResources.clusters)
  return clusters_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap_DynamicResources_DeprecatedV1::kSdsConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap_DynamicResources_DeprecatedV1::Bootstrap_DynamicResources_DeprecatedV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
}
Bootstrap_DynamicResources_DeprecatedV1::Bootstrap_DynamicResources_DeprecatedV1(const Bootstrap_DynamicResources_DeprecatedV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sds_config()) {
    sds_config_ = new ::envoy::api::v2::ConfigSource(*from.sds_config_);
  } else {
    sds_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
}

void Bootstrap_DynamicResources_DeprecatedV1::SharedCtor() {
  sds_config_ = NULL;
  _cached_size_ = 0;
}

Bootstrap_DynamicResources_DeprecatedV1::~Bootstrap_DynamicResources_DeprecatedV1() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  SharedDtor();
}

void Bootstrap_DynamicResources_DeprecatedV1::SharedDtor() {
  if (this != internal_default_instance()) delete sds_config_;
}

void Bootstrap_DynamicResources_DeprecatedV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap_DynamicResources_DeprecatedV1::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap_DynamicResources_DeprecatedV1& Bootstrap_DynamicResources_DeprecatedV1::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bootstrap_DynamicResources_DeprecatedV1* Bootstrap_DynamicResources_DeprecatedV1::New(::google::protobuf::Arena* arena) const {
  Bootstrap_DynamicResources_DeprecatedV1* n = new Bootstrap_DynamicResources_DeprecatedV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap_DynamicResources_DeprecatedV1::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sds_config_ != NULL) {
    delete sds_config_;
  }
  sds_config_ = NULL;
  _internal_metadata_.Clear();
}

bool Bootstrap_DynamicResources_DeprecatedV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.ConfigSource sds_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sds_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  return false;
#undef DO_
}

void Bootstrap_DynamicResources_DeprecatedV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ConfigSource sds_config = 1;
  if (this->has_sds_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sds_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
}

::google::protobuf::uint8* Bootstrap_DynamicResources_DeprecatedV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ConfigSource sds_config = 1;
  if (this->has_sds_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->sds_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  return target;
}

size_t Bootstrap_DynamicResources_DeprecatedV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.ConfigSource sds_config = 1;
  if (this->has_sds_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sds_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap_DynamicResources_DeprecatedV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap_DynamicResources_DeprecatedV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap_DynamicResources_DeprecatedV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
    MergeFrom(*source);
  }
}

void Bootstrap_DynamicResources_DeprecatedV1::MergeFrom(const Bootstrap_DynamicResources_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sds_config()) {
    mutable_sds_config()->::envoy::api::v2::ConfigSource::MergeFrom(from.sds_config());
  }
}

void Bootstrap_DynamicResources_DeprecatedV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap_DynamicResources_DeprecatedV1::CopyFrom(const Bootstrap_DynamicResources_DeprecatedV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap_DynamicResources_DeprecatedV1::IsInitialized() const {
  return true;
}

void Bootstrap_DynamicResources_DeprecatedV1::Swap(Bootstrap_DynamicResources_DeprecatedV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap_DynamicResources_DeprecatedV1::InternalSwap(Bootstrap_DynamicResources_DeprecatedV1* other) {
  using std::swap;
  swap(sds_config_, other->sds_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap_DynamicResources_DeprecatedV1::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bootstrap_DynamicResources_DeprecatedV1

// .envoy.api.v2.ConfigSource sds_config = 1;
bool Bootstrap_DynamicResources_DeprecatedV1::has_sds_config() const {
  return this != internal_default_instance() && sds_config_ != NULL;
}
void Bootstrap_DynamicResources_DeprecatedV1::clear_sds_config() {
  if (GetArenaNoVirtual() == NULL && sds_config_ != NULL) delete sds_config_;
  sds_config_ = NULL;
}
const ::envoy::api::v2::ConfigSource& Bootstrap_DynamicResources_DeprecatedV1::sds_config() const {
  const ::envoy::api::v2::ConfigSource* p = sds_config_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1.sds_config)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::ConfigSource*>(
      &::envoy::api::v2::_ConfigSource_default_instance_);
}
::envoy::api::v2::ConfigSource* Bootstrap_DynamicResources_DeprecatedV1::mutable_sds_config() {
  
  if (sds_config_ == NULL) {
    sds_config_ = new ::envoy::api::v2::ConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1.sds_config)
  return sds_config_;
}
::envoy::api::v2::ConfigSource* Bootstrap_DynamicResources_DeprecatedV1::release_sds_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1.sds_config)
  
  ::envoy::api::v2::ConfigSource* temp = sds_config_;
  sds_config_ = NULL;
  return temp;
}
void Bootstrap_DynamicResources_DeprecatedV1::set_allocated_sds_config(::envoy::api::v2::ConfigSource* sds_config) {
  delete sds_config_;
  sds_config_ = sds_config;
  if (sds_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1.sds_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap_DynamicResources::kLdsConfigFieldNumber;
const int Bootstrap_DynamicResources::kCdsConfigFieldNumber;
const int Bootstrap_DynamicResources::kAdsConfigFieldNumber;
const int Bootstrap_DynamicResources::kDeprecatedV1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap_DynamicResources::Bootstrap_DynamicResources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap.DynamicResources)
}
Bootstrap_DynamicResources::Bootstrap_DynamicResources(const Bootstrap_DynamicResources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lds_config()) {
    lds_config_ = new ::envoy::api::v2::ConfigSource(*from.lds_config_);
  } else {
    lds_config_ = NULL;
  }
  if (from.has_cds_config()) {
    cds_config_ = new ::envoy::api::v2::ConfigSource(*from.cds_config_);
  } else {
    cds_config_ = NULL;
  }
  if (from.has_ads_config()) {
    ads_config_ = new ::envoy::api::v2::ApiConfigSource(*from.ads_config_);
  } else {
    ads_config_ = NULL;
  }
  if (from.has_deprecated_v1()) {
    deprecated_v1_ = new ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1(*from.deprecated_v1_);
  } else {
    deprecated_v1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap.DynamicResources)
}

void Bootstrap_DynamicResources::SharedCtor() {
  ::memset(&lds_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecated_v1_) -
      reinterpret_cast<char*>(&lds_config_)) + sizeof(deprecated_v1_));
  _cached_size_ = 0;
}

Bootstrap_DynamicResources::~Bootstrap_DynamicResources() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap.DynamicResources)
  SharedDtor();
}

void Bootstrap_DynamicResources::SharedDtor() {
  if (this != internal_default_instance()) delete lds_config_;
  if (this != internal_default_instance()) delete cds_config_;
  if (this != internal_default_instance()) delete ads_config_;
  if (this != internal_default_instance()) delete deprecated_v1_;
}

void Bootstrap_DynamicResources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap_DynamicResources::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap_DynamicResources& Bootstrap_DynamicResources::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bootstrap_DynamicResources* Bootstrap_DynamicResources::New(::google::protobuf::Arena* arena) const {
  Bootstrap_DynamicResources* n = new Bootstrap_DynamicResources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap_DynamicResources::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap.DynamicResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lds_config_ != NULL) {
    delete lds_config_;
  }
  lds_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && cds_config_ != NULL) {
    delete cds_config_;
  }
  cds_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && ads_config_ != NULL) {
    delete ads_config_;
  }
  ads_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && deprecated_v1_ != NULL) {
    delete deprecated_v1_;
  }
  deprecated_v1_ = NULL;
  _internal_metadata_.Clear();
}

bool Bootstrap_DynamicResources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap.DynamicResources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.ConfigSource lds_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lds_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ConfigSource cds_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cds_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ApiConfigSource ads_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ads_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deprecated_v1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap.DynamicResources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap.DynamicResources)
  return false;
#undef DO_
}

void Bootstrap_DynamicResources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap.DynamicResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ConfigSource lds_config = 1;
  if (this->has_lds_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lds_config_, output);
  }

  // .envoy.api.v2.ConfigSource cds_config = 2;
  if (this->has_cds_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cds_config_, output);
  }

  // .envoy.api.v2.ApiConfigSource ads_config = 3;
  if (this->has_ads_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ads_config_, output);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
  if (this->has_deprecated_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->deprecated_v1_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap.DynamicResources)
}

::google::protobuf::uint8* Bootstrap_DynamicResources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap.DynamicResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.ConfigSource lds_config = 1;
  if (this->has_lds_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lds_config_, deterministic, target);
  }

  // .envoy.api.v2.ConfigSource cds_config = 2;
  if (this->has_cds_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->cds_config_, deterministic, target);
  }

  // .envoy.api.v2.ApiConfigSource ads_config = 3;
  if (this->has_ads_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ads_config_, deterministic, target);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
  if (this->has_deprecated_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->deprecated_v1_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap.DynamicResources)
  return target;
}

size_t Bootstrap_DynamicResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap.DynamicResources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .envoy.api.v2.ConfigSource lds_config = 1;
  if (this->has_lds_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lds_config_);
  }

  // .envoy.api.v2.ConfigSource cds_config = 2;
  if (this->has_cds_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cds_config_);
  }

  // .envoy.api.v2.ApiConfigSource ads_config = 3;
  if (this->has_ads_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ads_config_);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
  if (this->has_deprecated_v1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deprecated_v1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap_DynamicResources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap.DynamicResources)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap_DynamicResources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap_DynamicResources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap.DynamicResources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap.DynamicResources)
    MergeFrom(*source);
  }
}

void Bootstrap_DynamicResources::MergeFrom(const Bootstrap_DynamicResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap.DynamicResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lds_config()) {
    mutable_lds_config()->::envoy::api::v2::ConfigSource::MergeFrom(from.lds_config());
  }
  if (from.has_cds_config()) {
    mutable_cds_config()->::envoy::api::v2::ConfigSource::MergeFrom(from.cds_config());
  }
  if (from.has_ads_config()) {
    mutable_ads_config()->::envoy::api::v2::ApiConfigSource::MergeFrom(from.ads_config());
  }
  if (from.has_deprecated_v1()) {
    mutable_deprecated_v1()->::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1::MergeFrom(from.deprecated_v1());
  }
}

void Bootstrap_DynamicResources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap.DynamicResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap_DynamicResources::CopyFrom(const Bootstrap_DynamicResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap.DynamicResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap_DynamicResources::IsInitialized() const {
  return true;
}

void Bootstrap_DynamicResources::Swap(Bootstrap_DynamicResources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap_DynamicResources::InternalSwap(Bootstrap_DynamicResources* other) {
  using std::swap;
  swap(lds_config_, other->lds_config_);
  swap(cds_config_, other->cds_config_);
  swap(ads_config_, other->ads_config_);
  swap(deprecated_v1_, other->deprecated_v1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap_DynamicResources::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bootstrap_DynamicResources

// .envoy.api.v2.ConfigSource lds_config = 1;
bool Bootstrap_DynamicResources::has_lds_config() const {
  return this != internal_default_instance() && lds_config_ != NULL;
}
void Bootstrap_DynamicResources::clear_lds_config() {
  if (GetArenaNoVirtual() == NULL && lds_config_ != NULL) delete lds_config_;
  lds_config_ = NULL;
}
const ::envoy::api::v2::ConfigSource& Bootstrap_DynamicResources::lds_config() const {
  const ::envoy::api::v2::ConfigSource* p = lds_config_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.DynamicResources.lds_config)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::ConfigSource*>(
      &::envoy::api::v2::_ConfigSource_default_instance_);
}
::envoy::api::v2::ConfigSource* Bootstrap_DynamicResources::mutable_lds_config() {
  
  if (lds_config_ == NULL) {
    lds_config_ = new ::envoy::api::v2::ConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.DynamicResources.lds_config)
  return lds_config_;
}
::envoy::api::v2::ConfigSource* Bootstrap_DynamicResources::release_lds_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.DynamicResources.lds_config)
  
  ::envoy::api::v2::ConfigSource* temp = lds_config_;
  lds_config_ = NULL;
  return temp;
}
void Bootstrap_DynamicResources::set_allocated_lds_config(::envoy::api::v2::ConfigSource* lds_config) {
  delete lds_config_;
  lds_config_ = lds_config;
  if (lds_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.DynamicResources.lds_config)
}

// .envoy.api.v2.ConfigSource cds_config = 2;
bool Bootstrap_DynamicResources::has_cds_config() const {
  return this != internal_default_instance() && cds_config_ != NULL;
}
void Bootstrap_DynamicResources::clear_cds_config() {
  if (GetArenaNoVirtual() == NULL && cds_config_ != NULL) delete cds_config_;
  cds_config_ = NULL;
}
const ::envoy::api::v2::ConfigSource& Bootstrap_DynamicResources::cds_config() const {
  const ::envoy::api::v2::ConfigSource* p = cds_config_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.DynamicResources.cds_config)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::ConfigSource*>(
      &::envoy::api::v2::_ConfigSource_default_instance_);
}
::envoy::api::v2::ConfigSource* Bootstrap_DynamicResources::mutable_cds_config() {
  
  if (cds_config_ == NULL) {
    cds_config_ = new ::envoy::api::v2::ConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.DynamicResources.cds_config)
  return cds_config_;
}
::envoy::api::v2::ConfigSource* Bootstrap_DynamicResources::release_cds_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.DynamicResources.cds_config)
  
  ::envoy::api::v2::ConfigSource* temp = cds_config_;
  cds_config_ = NULL;
  return temp;
}
void Bootstrap_DynamicResources::set_allocated_cds_config(::envoy::api::v2::ConfigSource* cds_config) {
  delete cds_config_;
  cds_config_ = cds_config;
  if (cds_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.DynamicResources.cds_config)
}

// .envoy.api.v2.ApiConfigSource ads_config = 3;
bool Bootstrap_DynamicResources::has_ads_config() const {
  return this != internal_default_instance() && ads_config_ != NULL;
}
void Bootstrap_DynamicResources::clear_ads_config() {
  if (GetArenaNoVirtual() == NULL && ads_config_ != NULL) delete ads_config_;
  ads_config_ = NULL;
}
const ::envoy::api::v2::ApiConfigSource& Bootstrap_DynamicResources::ads_config() const {
  const ::envoy::api::v2::ApiConfigSource* p = ads_config_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.DynamicResources.ads_config)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::ApiConfigSource*>(
      &::envoy::api::v2::_ApiConfigSource_default_instance_);
}
::envoy::api::v2::ApiConfigSource* Bootstrap_DynamicResources::mutable_ads_config() {
  
  if (ads_config_ == NULL) {
    ads_config_ = new ::envoy::api::v2::ApiConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.DynamicResources.ads_config)
  return ads_config_;
}
::envoy::api::v2::ApiConfigSource* Bootstrap_DynamicResources::release_ads_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.DynamicResources.ads_config)
  
  ::envoy::api::v2::ApiConfigSource* temp = ads_config_;
  ads_config_ = NULL;
  return temp;
}
void Bootstrap_DynamicResources::set_allocated_ads_config(::envoy::api::v2::ApiConfigSource* ads_config) {
  delete ads_config_;
  ads_config_ = ads_config;
  if (ads_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.DynamicResources.ads_config)
}

// .envoy.api.v2.Bootstrap.DynamicResources.DeprecatedV1 deprecated_v1 = 4;
bool Bootstrap_DynamicResources::has_deprecated_v1() const {
  return this != internal_default_instance() && deprecated_v1_ != NULL;
}
void Bootstrap_DynamicResources::clear_deprecated_v1() {
  if (GetArenaNoVirtual() == NULL && deprecated_v1_ != NULL) delete deprecated_v1_;
  deprecated_v1_ = NULL;
}
const ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1& Bootstrap_DynamicResources::deprecated_v1() const {
  const ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1* p = deprecated_v1_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.DynamicResources.deprecated_v1)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1*>(
      &::envoy::api::v2::_Bootstrap_DynamicResources_DeprecatedV1_default_instance_);
}
::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1* Bootstrap_DynamicResources::mutable_deprecated_v1() {
  
  if (deprecated_v1_ == NULL) {
    deprecated_v1_ = new ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.DynamicResources.deprecated_v1)
  return deprecated_v1_;
}
::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1* Bootstrap_DynamicResources::release_deprecated_v1() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.DynamicResources.deprecated_v1)
  
  ::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1* temp = deprecated_v1_;
  deprecated_v1_ = NULL;
  return temp;
}
void Bootstrap_DynamicResources::set_allocated_deprecated_v1(::envoy::api::v2::Bootstrap_DynamicResources_DeprecatedV1* deprecated_v1) {
  delete deprecated_v1_;
  deprecated_v1_ = deprecated_v1;
  if (deprecated_v1) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.DynamicResources.deprecated_v1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap::kNodeFieldNumber;
const int Bootstrap::kStaticResourcesFieldNumber;
const int Bootstrap::kDynamicResourcesFieldNumber;
const int Bootstrap::kClusterManagerFieldNumber;
const int Bootstrap::kFlagsPathFieldNumber;
const int Bootstrap::kStatsSinksFieldNumber;
const int Bootstrap::kStatsFlushIntervalFieldNumber;
const int Bootstrap::kWatchdogFieldNumber;
const int Bootstrap::kTracingFieldNumber;
const int Bootstrap::kRateLimitServiceFieldNumber;
const int Bootstrap::kRuntimeFieldNumber;
const int Bootstrap::kAdminFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap::Bootstrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap)
}
Bootstrap::Bootstrap(const Bootstrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stats_sinks_(from.stats_sinks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flags_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.flags_path().size() > 0) {
    flags_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flags_path_);
  }
  if (from.has_node()) {
    node_ = new ::envoy::api::v2::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  if (from.has_static_resources()) {
    static_resources_ = new ::envoy::api::v2::Bootstrap_StaticResources(*from.static_resources_);
  } else {
    static_resources_ = NULL;
  }
  if (from.has_dynamic_resources()) {
    dynamic_resources_ = new ::envoy::api::v2::Bootstrap_DynamicResources(*from.dynamic_resources_);
  } else {
    dynamic_resources_ = NULL;
  }
  if (from.has_cluster_manager()) {
    cluster_manager_ = new ::envoy::api::v2::ClusterManager(*from.cluster_manager_);
  } else {
    cluster_manager_ = NULL;
  }
  if (from.has_stats_flush_interval()) {
    stats_flush_interval_ = new ::google::protobuf::Duration(*from.stats_flush_interval_);
  } else {
    stats_flush_interval_ = NULL;
  }
  if (from.has_watchdog()) {
    watchdog_ = new ::envoy::api::v2::Watchdog(*from.watchdog_);
  } else {
    watchdog_ = NULL;
  }
  if (from.has_tracing()) {
    tracing_ = new ::envoy::api::v2::Tracing(*from.tracing_);
  } else {
    tracing_ = NULL;
  }
  if (from.has_rate_limit_service()) {
    rate_limit_service_ = new ::envoy::api::v2::RateLimitServiceConfig(*from.rate_limit_service_);
  } else {
    rate_limit_service_ = NULL;
  }
  if (from.has_runtime()) {
    runtime_ = new ::envoy::api::v2::Runtime(*from.runtime_);
  } else {
    runtime_ = NULL;
  }
  if (from.has_admin()) {
    admin_ = new ::envoy::api::v2::Admin(*from.admin_);
  } else {
    admin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap)
}

void Bootstrap::SharedCtor() {
  flags_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&admin_) -
      reinterpret_cast<char*>(&node_)) + sizeof(admin_));
  _cached_size_ = 0;
}

Bootstrap::~Bootstrap() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap)
  SharedDtor();
}

void Bootstrap::SharedDtor() {
  flags_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_;
  if (this != internal_default_instance()) delete static_resources_;
  if (this != internal_default_instance()) delete dynamic_resources_;
  if (this != internal_default_instance()) delete cluster_manager_;
  if (this != internal_default_instance()) delete stats_flush_interval_;
  if (this != internal_default_instance()) delete watchdog_;
  if (this != internal_default_instance()) delete tracing_;
  if (this != internal_default_instance()) delete rate_limit_service_;
  if (this != internal_default_instance()) delete runtime_;
  if (this != internal_default_instance()) delete admin_;
}

void Bootstrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap& Bootstrap::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bootstrap* Bootstrap::New(::google::protobuf::Arena* arena) const {
  Bootstrap* n = new Bootstrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_sinks_.Clear();
  flags_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  if (GetArenaNoVirtual() == NULL && static_resources_ != NULL) {
    delete static_resources_;
  }
  static_resources_ = NULL;
  if (GetArenaNoVirtual() == NULL && dynamic_resources_ != NULL) {
    delete dynamic_resources_;
  }
  dynamic_resources_ = NULL;
  if (GetArenaNoVirtual() == NULL && cluster_manager_ != NULL) {
    delete cluster_manager_;
  }
  cluster_manager_ = NULL;
  if (GetArenaNoVirtual() == NULL && stats_flush_interval_ != NULL) {
    delete stats_flush_interval_;
  }
  stats_flush_interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && watchdog_ != NULL) {
    delete watchdog_;
  }
  watchdog_ = NULL;
  if (GetArenaNoVirtual() == NULL && tracing_ != NULL) {
    delete tracing_;
  }
  tracing_ = NULL;
  if (GetArenaNoVirtual() == NULL && rate_limit_service_ != NULL) {
    delete rate_limit_service_;
  }
  rate_limit_service_ = NULL;
  if (GetArenaNoVirtual() == NULL && runtime_ != NULL) {
    delete runtime_;
  }
  runtime_ = NULL;
  if (GetArenaNoVirtual() == NULL && admin_ != NULL) {
    delete admin_;
  }
  admin_ = NULL;
  _internal_metadata_.Clear();
}

bool Bootstrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Node node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_static_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ClusterManager cluster_manager = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster_manager()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string flags_path = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flags_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->flags_path().data(), static_cast<int>(this->flags_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.Bootstrap.flags_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.StatsSink stats_sinks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stats_sinks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration stats_flush_interval = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stats_flush_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Watchdog watchdog = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_watchdog()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Tracing tracing = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tracing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rate_limit_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Runtime runtime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_runtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Admin admin = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_admin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap)
  return false;
#undef DO_
}

void Bootstrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->node_, output);
  }

  // .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
  if (this->has_static_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->static_resources_, output);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
  if (this->has_dynamic_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dynamic_resources_, output);
  }

  // .envoy.api.v2.ClusterManager cluster_manager = 4;
  if (this->has_cluster_manager()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->cluster_manager_, output);
  }

  // string flags_path = 5;
  if (this->flags_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flags_path().data(), static_cast<int>(this->flags_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Bootstrap.flags_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->flags_path(), output);
  }

  // repeated .envoy.api.v2.StatsSink stats_sinks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_sinks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->stats_sinks(static_cast<int>(i)), output);
  }

  // .google.protobuf.Duration stats_flush_interval = 7;
  if (this->has_stats_flush_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->stats_flush_interval_, output);
  }

  // .envoy.api.v2.Watchdog watchdog = 8;
  if (this->has_watchdog()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->watchdog_, output);
  }

  // .envoy.api.v2.Tracing tracing = 9;
  if (this->has_tracing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->tracing_, output);
  }

  // .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
  if (this->has_rate_limit_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->rate_limit_service_, output);
  }

  // .envoy.api.v2.Runtime runtime = 11;
  if (this->has_runtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->runtime_, output);
  }

  // .envoy.api.v2.Admin admin = 12;
  if (this->has_admin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->admin_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap)
}

::google::protobuf::uint8* Bootstrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->node_, deterministic, target);
  }

  // .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
  if (this->has_static_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->static_resources_, deterministic, target);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
  if (this->has_dynamic_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->dynamic_resources_, deterministic, target);
  }

  // .envoy.api.v2.ClusterManager cluster_manager = 4;
  if (this->has_cluster_manager()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->cluster_manager_, deterministic, target);
  }

  // string flags_path = 5;
  if (this->flags_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flags_path().data(), static_cast<int>(this->flags_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.Bootstrap.flags_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->flags_path(), target);
  }

  // repeated .envoy.api.v2.StatsSink stats_sinks = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_sinks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->stats_sinks(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Duration stats_flush_interval = 7;
  if (this->has_stats_flush_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->stats_flush_interval_, deterministic, target);
  }

  // .envoy.api.v2.Watchdog watchdog = 8;
  if (this->has_watchdog()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->watchdog_, deterministic, target);
  }

  // .envoy.api.v2.Tracing tracing = 9;
  if (this->has_tracing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->tracing_, deterministic, target);
  }

  // .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
  if (this->has_rate_limit_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->rate_limit_service_, deterministic, target);
  }

  // .envoy.api.v2.Runtime runtime = 11;
  if (this->has_runtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->runtime_, deterministic, target);
  }

  // .envoy.api.v2.Admin admin = 12;
  if (this->has_admin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->admin_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap)
  return target;
}

size_t Bootstrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .envoy.api.v2.StatsSink stats_sinks = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_sinks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats_sinks(static_cast<int>(i)));
    }
  }

  // string flags_path = 5;
  if (this->flags_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->flags_path());
  }

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }

  // .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
  if (this->has_static_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->static_resources_);
  }

  // .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
  if (this->has_dynamic_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dynamic_resources_);
  }

  // .envoy.api.v2.ClusterManager cluster_manager = 4;
  if (this->has_cluster_manager()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cluster_manager_);
  }

  // .google.protobuf.Duration stats_flush_interval = 7;
  if (this->has_stats_flush_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stats_flush_interval_);
  }

  // .envoy.api.v2.Watchdog watchdog = 8;
  if (this->has_watchdog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->watchdog_);
  }

  // .envoy.api.v2.Tracing tracing = 9;
  if (this->has_tracing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tracing_);
  }

  // .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
  if (this->has_rate_limit_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rate_limit_service_);
  }

  // .envoy.api.v2.Runtime runtime = 11;
  if (this->has_runtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->runtime_);
  }

  // .envoy.api.v2.Admin admin = 12;
  if (this->has_admin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->admin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap)
    MergeFrom(*source);
  }
}

void Bootstrap::MergeFrom(const Bootstrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_sinks_.MergeFrom(from.stats_sinks_);
  if (from.flags_path().size() > 0) {

    flags_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flags_path_);
  }
  if (from.has_node()) {
    mutable_node()->::envoy::api::v2::Node::MergeFrom(from.node());
  }
  if (from.has_static_resources()) {
    mutable_static_resources()->::envoy::api::v2::Bootstrap_StaticResources::MergeFrom(from.static_resources());
  }
  if (from.has_dynamic_resources()) {
    mutable_dynamic_resources()->::envoy::api::v2::Bootstrap_DynamicResources::MergeFrom(from.dynamic_resources());
  }
  if (from.has_cluster_manager()) {
    mutable_cluster_manager()->::envoy::api::v2::ClusterManager::MergeFrom(from.cluster_manager());
  }
  if (from.has_stats_flush_interval()) {
    mutable_stats_flush_interval()->::google::protobuf::Duration::MergeFrom(from.stats_flush_interval());
  }
  if (from.has_watchdog()) {
    mutable_watchdog()->::envoy::api::v2::Watchdog::MergeFrom(from.watchdog());
  }
  if (from.has_tracing()) {
    mutable_tracing()->::envoy::api::v2::Tracing::MergeFrom(from.tracing());
  }
  if (from.has_rate_limit_service()) {
    mutable_rate_limit_service()->::envoy::api::v2::RateLimitServiceConfig::MergeFrom(from.rate_limit_service());
  }
  if (from.has_runtime()) {
    mutable_runtime()->::envoy::api::v2::Runtime::MergeFrom(from.runtime());
  }
  if (from.has_admin()) {
    mutable_admin()->::envoy::api::v2::Admin::MergeFrom(from.admin());
  }
}

void Bootstrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap::CopyFrom(const Bootstrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap::IsInitialized() const {
  return true;
}

void Bootstrap::Swap(Bootstrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap::InternalSwap(Bootstrap* other) {
  using std::swap;
  stats_sinks_.InternalSwap(&other->stats_sinks_);
  flags_path_.Swap(&other->flags_path_);
  swap(node_, other->node_);
  swap(static_resources_, other->static_resources_);
  swap(dynamic_resources_, other->dynamic_resources_);
  swap(cluster_manager_, other->cluster_manager_);
  swap(stats_flush_interval_, other->stats_flush_interval_);
  swap(watchdog_, other->watchdog_);
  swap(tracing_, other->tracing_);
  swap(rate_limit_service_, other->rate_limit_service_);
  swap(runtime_, other->runtime_);
  swap(admin_, other->admin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bootstrap

// .envoy.api.v2.Node node = 1;
bool Bootstrap::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
void Bootstrap::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
const ::envoy::api::v2::Node& Bootstrap::node() const {
  const ::envoy::api::v2::Node* p = node_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.node)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Node*>(
      &::envoy::api::v2::_Node_default_instance_);
}
::envoy::api::v2::Node* Bootstrap::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::envoy::api::v2::Node;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.node)
  return node_;
}
::envoy::api::v2::Node* Bootstrap::release_node() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.node)
  
  ::envoy::api::v2::Node* temp = node_;
  node_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_node(::envoy::api::v2::Node* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.node)
}

// .envoy.api.v2.Bootstrap.StaticResources static_resources = 2;
bool Bootstrap::has_static_resources() const {
  return this != internal_default_instance() && static_resources_ != NULL;
}
void Bootstrap::clear_static_resources() {
  if (GetArenaNoVirtual() == NULL && static_resources_ != NULL) delete static_resources_;
  static_resources_ = NULL;
}
const ::envoy::api::v2::Bootstrap_StaticResources& Bootstrap::static_resources() const {
  const ::envoy::api::v2::Bootstrap_StaticResources* p = static_resources_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.static_resources)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Bootstrap_StaticResources*>(
      &::envoy::api::v2::_Bootstrap_StaticResources_default_instance_);
}
::envoy::api::v2::Bootstrap_StaticResources* Bootstrap::mutable_static_resources() {
  
  if (static_resources_ == NULL) {
    static_resources_ = new ::envoy::api::v2::Bootstrap_StaticResources;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.static_resources)
  return static_resources_;
}
::envoy::api::v2::Bootstrap_StaticResources* Bootstrap::release_static_resources() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.static_resources)
  
  ::envoy::api::v2::Bootstrap_StaticResources* temp = static_resources_;
  static_resources_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_static_resources(::envoy::api::v2::Bootstrap_StaticResources* static_resources) {
  delete static_resources_;
  static_resources_ = static_resources;
  if (static_resources) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.static_resources)
}

// .envoy.api.v2.Bootstrap.DynamicResources dynamic_resources = 3;
bool Bootstrap::has_dynamic_resources() const {
  return this != internal_default_instance() && dynamic_resources_ != NULL;
}
void Bootstrap::clear_dynamic_resources() {
  if (GetArenaNoVirtual() == NULL && dynamic_resources_ != NULL) delete dynamic_resources_;
  dynamic_resources_ = NULL;
}
const ::envoy::api::v2::Bootstrap_DynamicResources& Bootstrap::dynamic_resources() const {
  const ::envoy::api::v2::Bootstrap_DynamicResources* p = dynamic_resources_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.dynamic_resources)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Bootstrap_DynamicResources*>(
      &::envoy::api::v2::_Bootstrap_DynamicResources_default_instance_);
}
::envoy::api::v2::Bootstrap_DynamicResources* Bootstrap::mutable_dynamic_resources() {
  
  if (dynamic_resources_ == NULL) {
    dynamic_resources_ = new ::envoy::api::v2::Bootstrap_DynamicResources;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.dynamic_resources)
  return dynamic_resources_;
}
::envoy::api::v2::Bootstrap_DynamicResources* Bootstrap::release_dynamic_resources() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.dynamic_resources)
  
  ::envoy::api::v2::Bootstrap_DynamicResources* temp = dynamic_resources_;
  dynamic_resources_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_dynamic_resources(::envoy::api::v2::Bootstrap_DynamicResources* dynamic_resources) {
  delete dynamic_resources_;
  dynamic_resources_ = dynamic_resources;
  if (dynamic_resources) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.dynamic_resources)
}

// .envoy.api.v2.ClusterManager cluster_manager = 4;
bool Bootstrap::has_cluster_manager() const {
  return this != internal_default_instance() && cluster_manager_ != NULL;
}
void Bootstrap::clear_cluster_manager() {
  if (GetArenaNoVirtual() == NULL && cluster_manager_ != NULL) delete cluster_manager_;
  cluster_manager_ = NULL;
}
const ::envoy::api::v2::ClusterManager& Bootstrap::cluster_manager() const {
  const ::envoy::api::v2::ClusterManager* p = cluster_manager_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.cluster_manager)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::ClusterManager*>(
      &::envoy::api::v2::_ClusterManager_default_instance_);
}
::envoy::api::v2::ClusterManager* Bootstrap::mutable_cluster_manager() {
  
  if (cluster_manager_ == NULL) {
    cluster_manager_ = new ::envoy::api::v2::ClusterManager;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.cluster_manager)
  return cluster_manager_;
}
::envoy::api::v2::ClusterManager* Bootstrap::release_cluster_manager() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.cluster_manager)
  
  ::envoy::api::v2::ClusterManager* temp = cluster_manager_;
  cluster_manager_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_cluster_manager(::envoy::api::v2::ClusterManager* cluster_manager) {
  delete cluster_manager_;
  cluster_manager_ = cluster_manager;
  if (cluster_manager) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.cluster_manager)
}

// string flags_path = 5;
void Bootstrap::clear_flags_path() {
  flags_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Bootstrap::flags_path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.flags_path)
  return flags_path_.GetNoArena();
}
void Bootstrap::set_flags_path(const ::std::string& value) {
  
  flags_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Bootstrap.flags_path)
}
#if LANG_CXX11
void Bootstrap::set_flags_path(::std::string&& value) {
  
  flags_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Bootstrap.flags_path)
}
#endif
void Bootstrap::set_flags_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  flags_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Bootstrap.flags_path)
}
void Bootstrap::set_flags_path(const char* value, size_t size) {
  
  flags_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Bootstrap.flags_path)
}
::std::string* Bootstrap::mutable_flags_path() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.flags_path)
  return flags_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Bootstrap::release_flags_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.flags_path)
  
  return flags_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Bootstrap::set_allocated_flags_path(::std::string* flags_path) {
  if (flags_path != NULL) {
    
  } else {
    
  }
  flags_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flags_path);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.flags_path)
}

// repeated .envoy.api.v2.StatsSink stats_sinks = 6;
int Bootstrap::stats_sinks_size() const {
  return stats_sinks_.size();
}
void Bootstrap::clear_stats_sinks() {
  stats_sinks_.Clear();
}
const ::envoy::api::v2::StatsSink& Bootstrap::stats_sinks(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.stats_sinks)
  return stats_sinks_.Get(index);
}
::envoy::api::v2::StatsSink* Bootstrap::mutable_stats_sinks(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.stats_sinks)
  return stats_sinks_.Mutable(index);
}
::envoy::api::v2::StatsSink* Bootstrap::add_stats_sinks() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.Bootstrap.stats_sinks)
  return stats_sinks_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::StatsSink >*
Bootstrap::mutable_stats_sinks() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.Bootstrap.stats_sinks)
  return &stats_sinks_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::StatsSink >&
Bootstrap::stats_sinks() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.Bootstrap.stats_sinks)
  return stats_sinks_;
}

// .google.protobuf.Duration stats_flush_interval = 7;
bool Bootstrap::has_stats_flush_interval() const {
  return this != internal_default_instance() && stats_flush_interval_ != NULL;
}
void Bootstrap::clear_stats_flush_interval() {
  if (GetArenaNoVirtual() == NULL && stats_flush_interval_ != NULL) delete stats_flush_interval_;
  stats_flush_interval_ = NULL;
}
const ::google::protobuf::Duration& Bootstrap::stats_flush_interval() const {
  const ::google::protobuf::Duration* p = stats_flush_interval_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.stats_flush_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
::google::protobuf::Duration* Bootstrap::mutable_stats_flush_interval() {
  
  if (stats_flush_interval_ == NULL) {
    stats_flush_interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.stats_flush_interval)
  return stats_flush_interval_;
}
::google::protobuf::Duration* Bootstrap::release_stats_flush_interval() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.stats_flush_interval)
  
  ::google::protobuf::Duration* temp = stats_flush_interval_;
  stats_flush_interval_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_stats_flush_interval(::google::protobuf::Duration* stats_flush_interval) {
  delete stats_flush_interval_;
  if (stats_flush_interval != NULL && stats_flush_interval->GetArena() != NULL) {
    ::google::protobuf::Duration* new_stats_flush_interval = new ::google::protobuf::Duration;
    new_stats_flush_interval->CopyFrom(*stats_flush_interval);
    stats_flush_interval = new_stats_flush_interval;
  }
  stats_flush_interval_ = stats_flush_interval;
  if (stats_flush_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.stats_flush_interval)
}

// .envoy.api.v2.Watchdog watchdog = 8;
bool Bootstrap::has_watchdog() const {
  return this != internal_default_instance() && watchdog_ != NULL;
}
void Bootstrap::clear_watchdog() {
  if (GetArenaNoVirtual() == NULL && watchdog_ != NULL) delete watchdog_;
  watchdog_ = NULL;
}
const ::envoy::api::v2::Watchdog& Bootstrap::watchdog() const {
  const ::envoy::api::v2::Watchdog* p = watchdog_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.watchdog)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Watchdog*>(
      &::envoy::api::v2::_Watchdog_default_instance_);
}
::envoy::api::v2::Watchdog* Bootstrap::mutable_watchdog() {
  
  if (watchdog_ == NULL) {
    watchdog_ = new ::envoy::api::v2::Watchdog;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.watchdog)
  return watchdog_;
}
::envoy::api::v2::Watchdog* Bootstrap::release_watchdog() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.watchdog)
  
  ::envoy::api::v2::Watchdog* temp = watchdog_;
  watchdog_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_watchdog(::envoy::api::v2::Watchdog* watchdog) {
  delete watchdog_;
  watchdog_ = watchdog;
  if (watchdog) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.watchdog)
}

// .envoy.api.v2.Tracing tracing = 9;
bool Bootstrap::has_tracing() const {
  return this != internal_default_instance() && tracing_ != NULL;
}
void Bootstrap::clear_tracing() {
  if (GetArenaNoVirtual() == NULL && tracing_ != NULL) delete tracing_;
  tracing_ = NULL;
}
const ::envoy::api::v2::Tracing& Bootstrap::tracing() const {
  const ::envoy::api::v2::Tracing* p = tracing_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.tracing)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Tracing*>(
      &::envoy::api::v2::_Tracing_default_instance_);
}
::envoy::api::v2::Tracing* Bootstrap::mutable_tracing() {
  
  if (tracing_ == NULL) {
    tracing_ = new ::envoy::api::v2::Tracing;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.tracing)
  return tracing_;
}
::envoy::api::v2::Tracing* Bootstrap::release_tracing() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.tracing)
  
  ::envoy::api::v2::Tracing* temp = tracing_;
  tracing_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_tracing(::envoy::api::v2::Tracing* tracing) {
  delete tracing_;
  tracing_ = tracing;
  if (tracing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.tracing)
}

// .envoy.api.v2.RateLimitServiceConfig rate_limit_service = 10;
bool Bootstrap::has_rate_limit_service() const {
  return this != internal_default_instance() && rate_limit_service_ != NULL;
}
void Bootstrap::clear_rate_limit_service() {
  if (GetArenaNoVirtual() == NULL && rate_limit_service_ != NULL) delete rate_limit_service_;
  rate_limit_service_ = NULL;
}
const ::envoy::api::v2::RateLimitServiceConfig& Bootstrap::rate_limit_service() const {
  const ::envoy::api::v2::RateLimitServiceConfig* p = rate_limit_service_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.rate_limit_service)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::RateLimitServiceConfig*>(
      &::envoy::api::v2::_RateLimitServiceConfig_default_instance_);
}
::envoy::api::v2::RateLimitServiceConfig* Bootstrap::mutable_rate_limit_service() {
  
  if (rate_limit_service_ == NULL) {
    rate_limit_service_ = new ::envoy::api::v2::RateLimitServiceConfig;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.rate_limit_service)
  return rate_limit_service_;
}
::envoy::api::v2::RateLimitServiceConfig* Bootstrap::release_rate_limit_service() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.rate_limit_service)
  
  ::envoy::api::v2::RateLimitServiceConfig* temp = rate_limit_service_;
  rate_limit_service_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_rate_limit_service(::envoy::api::v2::RateLimitServiceConfig* rate_limit_service) {
  delete rate_limit_service_;
  rate_limit_service_ = rate_limit_service;
  if (rate_limit_service) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.rate_limit_service)
}

// .envoy.api.v2.Runtime runtime = 11;
bool Bootstrap::has_runtime() const {
  return this != internal_default_instance() && runtime_ != NULL;
}
void Bootstrap::clear_runtime() {
  if (GetArenaNoVirtual() == NULL && runtime_ != NULL) delete runtime_;
  runtime_ = NULL;
}
const ::envoy::api::v2::Runtime& Bootstrap::runtime() const {
  const ::envoy::api::v2::Runtime* p = runtime_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.runtime)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Runtime*>(
      &::envoy::api::v2::_Runtime_default_instance_);
}
::envoy::api::v2::Runtime* Bootstrap::mutable_runtime() {
  
  if (runtime_ == NULL) {
    runtime_ = new ::envoy::api::v2::Runtime;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.runtime)
  return runtime_;
}
::envoy::api::v2::Runtime* Bootstrap::release_runtime() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.runtime)
  
  ::envoy::api::v2::Runtime* temp = runtime_;
  runtime_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_runtime(::envoy::api::v2::Runtime* runtime) {
  delete runtime_;
  runtime_ = runtime;
  if (runtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.runtime)
}

// .envoy.api.v2.Admin admin = 12;
bool Bootstrap::has_admin() const {
  return this != internal_default_instance() && admin_ != NULL;
}
void Bootstrap::clear_admin() {
  if (GetArenaNoVirtual() == NULL && admin_ != NULL) delete admin_;
  admin_ = NULL;
}
const ::envoy::api::v2::Admin& Bootstrap::admin() const {
  const ::envoy::api::v2::Admin* p = admin_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.admin)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Admin*>(
      &::envoy::api::v2::_Admin_default_instance_);
}
::envoy::api::v2::Admin* Bootstrap::mutable_admin() {
  
  if (admin_ == NULL) {
    admin_ = new ::envoy::api::v2::Admin;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.admin)
  return admin_;
}
::envoy::api::v2::Admin* Bootstrap::release_admin() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.admin)
  
  ::envoy::api::v2::Admin* temp = admin_;
  admin_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_admin(::envoy::api::v2::Admin* admin) {
  delete admin_;
  admin_ = admin;
  if (admin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.admin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
