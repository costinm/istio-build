// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/bootstrap.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/bootstrap.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace envoy {
namespace api {
namespace v2 {
class BootstrapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap> {
} _Bootstrap_default_instance_;

namespace protobuf_api_2fbootstrap_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, lds_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, cds_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bootstrap, bootstrap_clusters_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Bootstrap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bootstrap_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/bootstrap.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _Bootstrap_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::InitDefaults();
  ::envoy::api::v2::protobuf_api_2fcds_2eproto::InitDefaults();
  _Bootstrap_default_instance_.DefaultConstruct();
  _Bootstrap_default_instance_.get_mutable()->node_ = const_cast< ::envoy::api::v2::Node*>(
      ::envoy::api::v2::Node::internal_default_instance());
  _Bootstrap_default_instance_.get_mutable()->lds_config_ = const_cast< ::envoy::api::v2::ConfigSource*>(
      ::envoy::api::v2::ConfigSource::internal_default_instance());
  _Bootstrap_default_instance_.get_mutable()->cds_config_ = const_cast< ::envoy::api::v2::ConfigSource*>(
      ::envoy::api::v2::ConfigSource::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\023api/bootstrap.proto\022\014envoy.api.v2\032\016api"
      "/base.proto\032\rapi/cds.proto\"\300\001\n\tBootstrap"
      "\022 \n\004node\030\001 \001(\0132\022.envoy.api.v2.Node\022.\n\nld"
      "s_config\030\002 \001(\0132\032.envoy.api.v2.ConfigSour"
      "ce\022.\n\ncds_config\030\003 \001(\0132\032.envoy.api.v2.Co"
      "nfigSource\0221\n\022bootstrap_clusters\030\004 \003(\0132\025"
      ".envoy.api.v2.Clusterb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 269);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/bootstrap.proto", &protobuf_RegisterTypes);
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::AddDescriptors();
  ::envoy::api::v2::protobuf_api_2fcds_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2fbootstrap_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap::kNodeFieldNumber;
const int Bootstrap::kLdsConfigFieldNumber;
const int Bootstrap::kCdsConfigFieldNumber;
const int Bootstrap::kBootstrapClustersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap::Bootstrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fbootstrap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.Bootstrap)
}
Bootstrap::Bootstrap(const Bootstrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bootstrap_clusters_(from.bootstrap_clusters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::envoy::api::v2::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  if (from.has_lds_config()) {
    lds_config_ = new ::envoy::api::v2::ConfigSource(*from.lds_config_);
  } else {
    lds_config_ = NULL;
  }
  if (from.has_cds_config()) {
    cds_config_ = new ::envoy::api::v2::ConfigSource(*from.cds_config_);
  } else {
    cds_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.Bootstrap)
}

void Bootstrap::SharedCtor() {
  ::memset(&node_, 0, reinterpret_cast<char*>(&cds_config_) -
    reinterpret_cast<char*>(&node_) + sizeof(cds_config_));
  _cached_size_ = 0;
}

Bootstrap::~Bootstrap() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.Bootstrap)
  SharedDtor();
}

void Bootstrap::SharedDtor() {
  if (this != internal_default_instance()) {
    delete node_;
  }
  if (this != internal_default_instance()) {
    delete lds_config_;
  }
  if (this != internal_default_instance()) {
    delete cds_config_;
  }
}

void Bootstrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap::descriptor() {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[0].descriptor;
}

const Bootstrap& Bootstrap::default_instance() {
  protobuf_api_2fbootstrap_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bootstrap* Bootstrap::New(::google::protobuf::Arena* arena) const {
  Bootstrap* n = new Bootstrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.Bootstrap)
  bootstrap_clusters_.Clear();
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  if (GetArenaNoVirtual() == NULL && lds_config_ != NULL) {
    delete lds_config_;
  }
  lds_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && cds_config_ != NULL) {
    delete cds_config_;
  }
  cds_config_ = NULL;
}

bool Bootstrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.Bootstrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Node node = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ConfigSource lds_config = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lds_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.ConfigSource cds_config = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cds_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.Cluster bootstrap_clusters = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_bootstrap_clusters()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.Bootstrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.Bootstrap)
  return false;
#undef DO_
}

void Bootstrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.Bootstrap)
  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->node_, output);
  }

  // .envoy.api.v2.ConfigSource lds_config = 2;
  if (this->has_lds_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->lds_config_, output);
  }

  // .envoy.api.v2.ConfigSource cds_config = 3;
  if (this->has_cds_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cds_config_, output);
  }

  // repeated .envoy.api.v2.Cluster bootstrap_clusters = 4;
  for (unsigned int i = 0, n = this->bootstrap_clusters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bootstrap_clusters(i), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.Bootstrap)
}

::google::protobuf::uint8* Bootstrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.Bootstrap)
  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->node_, false, target);
  }

  // .envoy.api.v2.ConfigSource lds_config = 2;
  if (this->has_lds_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->lds_config_, false, target);
  }

  // .envoy.api.v2.ConfigSource cds_config = 3;
  if (this->has_cds_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cds_config_, false, target);
  }

  // repeated .envoy.api.v2.Cluster bootstrap_clusters = 4;
  for (unsigned int i = 0, n = this->bootstrap_clusters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->bootstrap_clusters(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.Bootstrap)
  return target;
}

size_t Bootstrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.Bootstrap)
  size_t total_size = 0;

  // repeated .envoy.api.v2.Cluster bootstrap_clusters = 4;
  {
    unsigned int count = this->bootstrap_clusters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bootstrap_clusters(i));
    }
  }

  // .envoy.api.v2.Node node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }

  // .envoy.api.v2.ConfigSource lds_config = 2;
  if (this->has_lds_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lds_config_);
  }

  // .envoy.api.v2.ConfigSource cds_config = 3;
  if (this->has_cds_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cds_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.Bootstrap)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.Bootstrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.Bootstrap)
    MergeFrom(*source);
  }
}

void Bootstrap::MergeFrom(const Bootstrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.Bootstrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bootstrap_clusters_.MergeFrom(from.bootstrap_clusters_);
  if (from.has_node()) {
    mutable_node()->::envoy::api::v2::Node::MergeFrom(from.node());
  }
  if (from.has_lds_config()) {
    mutable_lds_config()->::envoy::api::v2::ConfigSource::MergeFrom(from.lds_config());
  }
  if (from.has_cds_config()) {
    mutable_cds_config()->::envoy::api::v2::ConfigSource::MergeFrom(from.cds_config());
  }
}

void Bootstrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.Bootstrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap::CopyFrom(const Bootstrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.Bootstrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap::IsInitialized() const {
  return true;
}

void Bootstrap::Swap(Bootstrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap::InternalSwap(Bootstrap* other) {
  bootstrap_clusters_.UnsafeArenaSwap(&other->bootstrap_clusters_);
  std::swap(node_, other->node_);
  std::swap(lds_config_, other->lds_config_);
  std::swap(cds_config_, other->cds_config_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap::GetMetadata() const {
  protobuf_api_2fbootstrap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fbootstrap_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bootstrap

// .envoy.api.v2.Node node = 1;
bool Bootstrap::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
void Bootstrap::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
const ::envoy::api::v2::Node& Bootstrap::node() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.node)
  return node_ != NULL ? *node_
                         : *::envoy::api::v2::Node::internal_default_instance();
}
::envoy::api::v2::Node* Bootstrap::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::envoy::api::v2::Node;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.node)
  return node_;
}
::envoy::api::v2::Node* Bootstrap::release_node() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.node)
  
  ::envoy::api::v2::Node* temp = node_;
  node_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_node(::envoy::api::v2::Node* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.node)
}

// .envoy.api.v2.ConfigSource lds_config = 2;
bool Bootstrap::has_lds_config() const {
  return this != internal_default_instance() && lds_config_ != NULL;
}
void Bootstrap::clear_lds_config() {
  if (GetArenaNoVirtual() == NULL && lds_config_ != NULL) delete lds_config_;
  lds_config_ = NULL;
}
const ::envoy::api::v2::ConfigSource& Bootstrap::lds_config() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.lds_config)
  return lds_config_ != NULL ? *lds_config_
                         : *::envoy::api::v2::ConfigSource::internal_default_instance();
}
::envoy::api::v2::ConfigSource* Bootstrap::mutable_lds_config() {
  
  if (lds_config_ == NULL) {
    lds_config_ = new ::envoy::api::v2::ConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.lds_config)
  return lds_config_;
}
::envoy::api::v2::ConfigSource* Bootstrap::release_lds_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.lds_config)
  
  ::envoy::api::v2::ConfigSource* temp = lds_config_;
  lds_config_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_lds_config(::envoy::api::v2::ConfigSource* lds_config) {
  delete lds_config_;
  lds_config_ = lds_config;
  if (lds_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.lds_config)
}

// .envoy.api.v2.ConfigSource cds_config = 3;
bool Bootstrap::has_cds_config() const {
  return this != internal_default_instance() && cds_config_ != NULL;
}
void Bootstrap::clear_cds_config() {
  if (GetArenaNoVirtual() == NULL && cds_config_ != NULL) delete cds_config_;
  cds_config_ = NULL;
}
const ::envoy::api::v2::ConfigSource& Bootstrap::cds_config() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.cds_config)
  return cds_config_ != NULL ? *cds_config_
                         : *::envoy::api::v2::ConfigSource::internal_default_instance();
}
::envoy::api::v2::ConfigSource* Bootstrap::mutable_cds_config() {
  
  if (cds_config_ == NULL) {
    cds_config_ = new ::envoy::api::v2::ConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.cds_config)
  return cds_config_;
}
::envoy::api::v2::ConfigSource* Bootstrap::release_cds_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.cds_config)
  
  ::envoy::api::v2::ConfigSource* temp = cds_config_;
  cds_config_ = NULL;
  return temp;
}
void Bootstrap::set_allocated_cds_config(::envoy::api::v2::ConfigSource* cds_config) {
  delete cds_config_;
  cds_config_ = cds_config;
  if (cds_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.cds_config)
}

// repeated .envoy.api.v2.Cluster bootstrap_clusters = 4;
int Bootstrap::bootstrap_clusters_size() const {
  return bootstrap_clusters_.size();
}
void Bootstrap::clear_bootstrap_clusters() {
  bootstrap_clusters_.Clear();
}
const ::envoy::api::v2::Cluster& Bootstrap::bootstrap_clusters(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return bootstrap_clusters_.Get(index);
}
::envoy::api::v2::Cluster* Bootstrap::mutable_bootstrap_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return bootstrap_clusters_.Mutable(index);
}
::envoy::api::v2::Cluster* Bootstrap::add_bootstrap_clusters() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return bootstrap_clusters_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster >*
Bootstrap::mutable_bootstrap_clusters() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return &bootstrap_clusters_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster >&
Bootstrap::bootstrap_clusters() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return bootstrap_clusters_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
