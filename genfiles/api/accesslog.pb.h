// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/accesslog.proto

#ifndef PROTOBUF_api_2faccesslog_2eproto__INCLUDED
#define PROTOBUF_api_2faccesslog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "api/base.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class DiscoveryRequest;
class DiscoveryRequestDefaultTypeInternal;
extern DiscoveryRequestDefaultTypeInternal _DiscoveryRequest_default_instance_;
class DiscoveryResponse;
class DiscoveryResponseDefaultTypeInternal;
extern DiscoveryResponseDefaultTypeInternal _DiscoveryResponse_default_instance_;
class Endpoint;
class EndpointDefaultTypeInternal;
extern EndpointDefaultTypeInternal _Endpoint_default_instance_;
class EnvoyAccessLog;
class EnvoyAccessLogDefaultTypeInternal;
extern EnvoyAccessLogDefaultTypeInternal _EnvoyAccessLog_default_instance_;
class HeaderValue;
class HeaderValueDefaultTypeInternal;
extern HeaderValueDefaultTypeInternal _HeaderValue_default_instance_;
class HeaderValueOption;
class HeaderValueOptionDefaultTypeInternal;
extern HeaderValueOptionDefaultTypeInternal _HeaderValueOption_default_instance_;
class Locality;
class LocalityDefaultTypeInternal;
extern LocalityDefaultTypeInternal _Locality_default_instance_;
class Metadata;
class MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class RuntimeUInt32;
class RuntimeUInt32DefaultTypeInternal;
extern RuntimeUInt32DefaultTypeInternal _RuntimeUInt32_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace google {
namespace protobuf {
class BoolValue;
class BoolValueDefaultTypeInternal;
extern BoolValueDefaultTypeInternal _BoolValue_default_instance_;
class BytesValue;
class BytesValueDefaultTypeInternal;
extern BytesValueDefaultTypeInternal _BytesValue_default_instance_;
class DoubleValue;
class DoubleValueDefaultTypeInternal;
extern DoubleValueDefaultTypeInternal _DoubleValue_default_instance_;
class Duration;
class DurationDefaultTypeInternal;
extern DurationDefaultTypeInternal _Duration_default_instance_;
class FloatValue;
class FloatValueDefaultTypeInternal;
extern FloatValueDefaultTypeInternal _FloatValue_default_instance_;
class Int32Value;
class Int32ValueDefaultTypeInternal;
extern Int32ValueDefaultTypeInternal _Int32Value_default_instance_;
class Int64Value;
class Int64ValueDefaultTypeInternal;
extern Int64ValueDefaultTypeInternal _Int64Value_default_instance_;
class ListValue;
class ListValueDefaultTypeInternal;
extern ListValueDefaultTypeInternal _ListValue_default_instance_;
class StringValue;
class StringValueDefaultTypeInternal;
extern StringValueDefaultTypeInternal _StringValue_default_instance_;
class Struct;
class StructDefaultTypeInternal;
extern StructDefaultTypeInternal _Struct_default_instance_;
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
class UInt32Value;
class UInt32ValueDefaultTypeInternal;
extern UInt32ValueDefaultTypeInternal _UInt32Value_default_instance_;
class UInt64Value;
class UInt64ValueDefaultTypeInternal;
extern UInt64ValueDefaultTypeInternal _UInt64Value_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace envoy {
namespace api {
namespace v2 {

namespace protobuf_api_2faccesslog_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_api_2faccesslog_2eproto

enum EnvoyAccessLog_RequestMethod {
  EnvoyAccessLog_RequestMethod_METHOD_UNSPECIFIED = 0,
  EnvoyAccessLog_RequestMethod_GET = 1,
  EnvoyAccessLog_RequestMethod_HEAD = 2,
  EnvoyAccessLog_RequestMethod_POST = 3,
  EnvoyAccessLog_RequestMethod_PUT = 4,
  EnvoyAccessLog_RequestMethod_DELETE = 5,
  EnvoyAccessLog_RequestMethod_CONNECT = 6,
  EnvoyAccessLog_RequestMethod_OPTIONS = 7,
  EnvoyAccessLog_RequestMethod_TRACE = 8,
  EnvoyAccessLog_RequestMethod_EnvoyAccessLog_RequestMethod_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnvoyAccessLog_RequestMethod_EnvoyAccessLog_RequestMethod_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnvoyAccessLog_RequestMethod_IsValid(int value);
const EnvoyAccessLog_RequestMethod EnvoyAccessLog_RequestMethod_RequestMethod_MIN = EnvoyAccessLog_RequestMethod_METHOD_UNSPECIFIED;
const EnvoyAccessLog_RequestMethod EnvoyAccessLog_RequestMethod_RequestMethod_MAX = EnvoyAccessLog_RequestMethod_TRACE;
const int EnvoyAccessLog_RequestMethod_RequestMethod_ARRAYSIZE = EnvoyAccessLog_RequestMethod_RequestMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnvoyAccessLog_RequestMethod_descriptor();
inline const ::std::string& EnvoyAccessLog_RequestMethod_Name(EnvoyAccessLog_RequestMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnvoyAccessLog_RequestMethod_descriptor(), value);
}
inline bool EnvoyAccessLog_RequestMethod_Parse(
    const ::std::string& name, EnvoyAccessLog_RequestMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnvoyAccessLog_RequestMethod>(
    EnvoyAccessLog_RequestMethod_descriptor(), name, value);
}
enum EnvoyAccessLog_Protocol {
  EnvoyAccessLog_Protocol_PROTOCOL_UNSPECIFIED = 0,
  EnvoyAccessLog_Protocol_HTTP10 = 1,
  EnvoyAccessLog_Protocol_HTTP11 = 2,
  EnvoyAccessLog_Protocol_HTTP2 = 3,
  EnvoyAccessLog_Protocol_EnvoyAccessLog_Protocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnvoyAccessLog_Protocol_EnvoyAccessLog_Protocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnvoyAccessLog_Protocol_IsValid(int value);
const EnvoyAccessLog_Protocol EnvoyAccessLog_Protocol_Protocol_MIN = EnvoyAccessLog_Protocol_PROTOCOL_UNSPECIFIED;
const EnvoyAccessLog_Protocol EnvoyAccessLog_Protocol_Protocol_MAX = EnvoyAccessLog_Protocol_HTTP2;
const int EnvoyAccessLog_Protocol_Protocol_ARRAYSIZE = EnvoyAccessLog_Protocol_Protocol_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnvoyAccessLog_Protocol_descriptor();
inline const ::std::string& EnvoyAccessLog_Protocol_Name(EnvoyAccessLog_Protocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnvoyAccessLog_Protocol_descriptor(), value);
}
inline bool EnvoyAccessLog_Protocol_Parse(
    const ::std::string& name, EnvoyAccessLog_Protocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnvoyAccessLog_Protocol>(
    EnvoyAccessLog_Protocol_descriptor(), name, value);
}
enum EnvoyAccessLog_ResponseFlag {
  EnvoyAccessLog_ResponseFlag_FAILED_LOCAL_HEALTHCHECK = 0,
  EnvoyAccessLog_ResponseFlag_NO_HEALTHY_UPSTREAM = 1,
  EnvoyAccessLog_ResponseFlag_UPSTREAM_REQUEST_TIMEOUT = 2,
  EnvoyAccessLog_ResponseFlag_LOCAL_RESET = 3,
  EnvoyAccessLog_ResponseFlag_UPSTREAM_REMOTE_RESET = 4,
  EnvoyAccessLog_ResponseFlag_UPSTREAM_CONNECTION_FAILURE = 5,
  EnvoyAccessLog_ResponseFlag_UPSTREAM_CONNECTION_TERMINATION = 6,
  EnvoyAccessLog_ResponseFlag_UPSTREAM_OVERFLOW = 7,
  EnvoyAccessLog_ResponseFlag_NO_ROUTE_FOUND = 8,
  EnvoyAccessLog_ResponseFlag_DELAY_INJECTED = 9,
  EnvoyAccessLog_ResponseFlag_FAULT_INJECTED = 10,
  EnvoyAccessLog_ResponseFlag_RATE_LIMITED = 11,
  EnvoyAccessLog_ResponseFlag_EnvoyAccessLog_ResponseFlag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnvoyAccessLog_ResponseFlag_EnvoyAccessLog_ResponseFlag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnvoyAccessLog_ResponseFlag_IsValid(int value);
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog_ResponseFlag_ResponseFlag_MIN = EnvoyAccessLog_ResponseFlag_FAILED_LOCAL_HEALTHCHECK;
const EnvoyAccessLog_ResponseFlag EnvoyAccessLog_ResponseFlag_ResponseFlag_MAX = EnvoyAccessLog_ResponseFlag_RATE_LIMITED;
const int EnvoyAccessLog_ResponseFlag_ResponseFlag_ARRAYSIZE = EnvoyAccessLog_ResponseFlag_ResponseFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnvoyAccessLog_ResponseFlag_descriptor();
inline const ::std::string& EnvoyAccessLog_ResponseFlag_Name(EnvoyAccessLog_ResponseFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnvoyAccessLog_ResponseFlag_descriptor(), value);
}
inline bool EnvoyAccessLog_ResponseFlag_Parse(
    const ::std::string& name, EnvoyAccessLog_ResponseFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnvoyAccessLog_ResponseFlag>(
    EnvoyAccessLog_ResponseFlag_descriptor(), name, value);
}
enum EnvoyAccessLog_TLSVersion {
  EnvoyAccessLog_TLSVersion_VERSION_UNSPECIFIED = 0,
  EnvoyAccessLog_TLSVersion_TLSv1 = 1,
  EnvoyAccessLog_TLSVersion_TLSv1_1 = 2,
  EnvoyAccessLog_TLSVersion_TLSv1_2 = 3,
  EnvoyAccessLog_TLSVersion_TLSv1_3 = 4,
  EnvoyAccessLog_TLSVersion_EnvoyAccessLog_TLSVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnvoyAccessLog_TLSVersion_EnvoyAccessLog_TLSVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnvoyAccessLog_TLSVersion_IsValid(int value);
const EnvoyAccessLog_TLSVersion EnvoyAccessLog_TLSVersion_TLSVersion_MIN = EnvoyAccessLog_TLSVersion_VERSION_UNSPECIFIED;
const EnvoyAccessLog_TLSVersion EnvoyAccessLog_TLSVersion_TLSVersion_MAX = EnvoyAccessLog_TLSVersion_TLSv1_3;
const int EnvoyAccessLog_TLSVersion_TLSVersion_ARRAYSIZE = EnvoyAccessLog_TLSVersion_TLSVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnvoyAccessLog_TLSVersion_descriptor();
inline const ::std::string& EnvoyAccessLog_TLSVersion_Name(EnvoyAccessLog_TLSVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnvoyAccessLog_TLSVersion_descriptor(), value);
}
inline bool EnvoyAccessLog_TLSVersion_Parse(
    const ::std::string& name, EnvoyAccessLog_TLSVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnvoyAccessLog_TLSVersion>(
    EnvoyAccessLog_TLSVersion_descriptor(), name, value);
}
// ===================================================================

class EnvoyAccessLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.EnvoyAccessLog) */ {
 public:
  EnvoyAccessLog();
  virtual ~EnvoyAccessLog();

  EnvoyAccessLog(const EnvoyAccessLog& from);

  inline EnvoyAccessLog& operator=(const EnvoyAccessLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnvoyAccessLog& default_instance();

  static inline const EnvoyAccessLog* internal_default_instance() {
    return reinterpret_cast<const EnvoyAccessLog*>(
               &_EnvoyAccessLog_default_instance_);
  }

  void Swap(EnvoyAccessLog* other);

  // implements Message ----------------------------------------------

  inline EnvoyAccessLog* New() const PROTOBUF_FINAL { return New(NULL); }

  EnvoyAccessLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnvoyAccessLog& from);
  void MergeFrom(const EnvoyAccessLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnvoyAccessLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnvoyAccessLog_RequestMethod RequestMethod;
  static const RequestMethod METHOD_UNSPECIFIED =
    EnvoyAccessLog_RequestMethod_METHOD_UNSPECIFIED;
  static const RequestMethod GET =
    EnvoyAccessLog_RequestMethod_GET;
  static const RequestMethod HEAD =
    EnvoyAccessLog_RequestMethod_HEAD;
  static const RequestMethod POST =
    EnvoyAccessLog_RequestMethod_POST;
  static const RequestMethod PUT =
    EnvoyAccessLog_RequestMethod_PUT;
  static const RequestMethod DELETE =
    EnvoyAccessLog_RequestMethod_DELETE;
  static const RequestMethod CONNECT =
    EnvoyAccessLog_RequestMethod_CONNECT;
  static const RequestMethod OPTIONS =
    EnvoyAccessLog_RequestMethod_OPTIONS;
  static const RequestMethod TRACE =
    EnvoyAccessLog_RequestMethod_TRACE;
  static inline bool RequestMethod_IsValid(int value) {
    return EnvoyAccessLog_RequestMethod_IsValid(value);
  }
  static const RequestMethod RequestMethod_MIN =
    EnvoyAccessLog_RequestMethod_RequestMethod_MIN;
  static const RequestMethod RequestMethod_MAX =
    EnvoyAccessLog_RequestMethod_RequestMethod_MAX;
  static const int RequestMethod_ARRAYSIZE =
    EnvoyAccessLog_RequestMethod_RequestMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestMethod_descriptor() {
    return EnvoyAccessLog_RequestMethod_descriptor();
  }
  static inline const ::std::string& RequestMethod_Name(RequestMethod value) {
    return EnvoyAccessLog_RequestMethod_Name(value);
  }
  static inline bool RequestMethod_Parse(const ::std::string& name,
      RequestMethod* value) {
    return EnvoyAccessLog_RequestMethod_Parse(name, value);
  }

  typedef EnvoyAccessLog_Protocol Protocol;
  static const Protocol PROTOCOL_UNSPECIFIED =
    EnvoyAccessLog_Protocol_PROTOCOL_UNSPECIFIED;
  static const Protocol HTTP10 =
    EnvoyAccessLog_Protocol_HTTP10;
  static const Protocol HTTP11 =
    EnvoyAccessLog_Protocol_HTTP11;
  static const Protocol HTTP2 =
    EnvoyAccessLog_Protocol_HTTP2;
  static inline bool Protocol_IsValid(int value) {
    return EnvoyAccessLog_Protocol_IsValid(value);
  }
  static const Protocol Protocol_MIN =
    EnvoyAccessLog_Protocol_Protocol_MIN;
  static const Protocol Protocol_MAX =
    EnvoyAccessLog_Protocol_Protocol_MAX;
  static const int Protocol_ARRAYSIZE =
    EnvoyAccessLog_Protocol_Protocol_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Protocol_descriptor() {
    return EnvoyAccessLog_Protocol_descriptor();
  }
  static inline const ::std::string& Protocol_Name(Protocol value) {
    return EnvoyAccessLog_Protocol_Name(value);
  }
  static inline bool Protocol_Parse(const ::std::string& name,
      Protocol* value) {
    return EnvoyAccessLog_Protocol_Parse(name, value);
  }

  typedef EnvoyAccessLog_ResponseFlag ResponseFlag;
  static const ResponseFlag FAILED_LOCAL_HEALTHCHECK =
    EnvoyAccessLog_ResponseFlag_FAILED_LOCAL_HEALTHCHECK;
  static const ResponseFlag NO_HEALTHY_UPSTREAM =
    EnvoyAccessLog_ResponseFlag_NO_HEALTHY_UPSTREAM;
  static const ResponseFlag UPSTREAM_REQUEST_TIMEOUT =
    EnvoyAccessLog_ResponseFlag_UPSTREAM_REQUEST_TIMEOUT;
  static const ResponseFlag LOCAL_RESET =
    EnvoyAccessLog_ResponseFlag_LOCAL_RESET;
  static const ResponseFlag UPSTREAM_REMOTE_RESET =
    EnvoyAccessLog_ResponseFlag_UPSTREAM_REMOTE_RESET;
  static const ResponseFlag UPSTREAM_CONNECTION_FAILURE =
    EnvoyAccessLog_ResponseFlag_UPSTREAM_CONNECTION_FAILURE;
  static const ResponseFlag UPSTREAM_CONNECTION_TERMINATION =
    EnvoyAccessLog_ResponseFlag_UPSTREAM_CONNECTION_TERMINATION;
  static const ResponseFlag UPSTREAM_OVERFLOW =
    EnvoyAccessLog_ResponseFlag_UPSTREAM_OVERFLOW;
  static const ResponseFlag NO_ROUTE_FOUND =
    EnvoyAccessLog_ResponseFlag_NO_ROUTE_FOUND;
  static const ResponseFlag DELAY_INJECTED =
    EnvoyAccessLog_ResponseFlag_DELAY_INJECTED;
  static const ResponseFlag FAULT_INJECTED =
    EnvoyAccessLog_ResponseFlag_FAULT_INJECTED;
  static const ResponseFlag RATE_LIMITED =
    EnvoyAccessLog_ResponseFlag_RATE_LIMITED;
  static inline bool ResponseFlag_IsValid(int value) {
    return EnvoyAccessLog_ResponseFlag_IsValid(value);
  }
  static const ResponseFlag ResponseFlag_MIN =
    EnvoyAccessLog_ResponseFlag_ResponseFlag_MIN;
  static const ResponseFlag ResponseFlag_MAX =
    EnvoyAccessLog_ResponseFlag_ResponseFlag_MAX;
  static const int ResponseFlag_ARRAYSIZE =
    EnvoyAccessLog_ResponseFlag_ResponseFlag_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseFlag_descriptor() {
    return EnvoyAccessLog_ResponseFlag_descriptor();
  }
  static inline const ::std::string& ResponseFlag_Name(ResponseFlag value) {
    return EnvoyAccessLog_ResponseFlag_Name(value);
  }
  static inline bool ResponseFlag_Parse(const ::std::string& name,
      ResponseFlag* value) {
    return EnvoyAccessLog_ResponseFlag_Parse(name, value);
  }

  typedef EnvoyAccessLog_TLSVersion TLSVersion;
  static const TLSVersion VERSION_UNSPECIFIED =
    EnvoyAccessLog_TLSVersion_VERSION_UNSPECIFIED;
  static const TLSVersion TLSv1 =
    EnvoyAccessLog_TLSVersion_TLSv1;
  static const TLSVersion TLSv1_1 =
    EnvoyAccessLog_TLSVersion_TLSv1_1;
  static const TLSVersion TLSv1_2 =
    EnvoyAccessLog_TLSVersion_TLSv1_2;
  static const TLSVersion TLSv1_3 =
    EnvoyAccessLog_TLSVersion_TLSv1_3;
  static inline bool TLSVersion_IsValid(int value) {
    return EnvoyAccessLog_TLSVersion_IsValid(value);
  }
  static const TLSVersion TLSVersion_MIN =
    EnvoyAccessLog_TLSVersion_TLSVersion_MIN;
  static const TLSVersion TLSVersion_MAX =
    EnvoyAccessLog_TLSVersion_TLSVersion_MAX;
  static const int TLSVersion_ARRAYSIZE =
    EnvoyAccessLog_TLSVersion_TLSVersion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TLSVersion_descriptor() {
    return EnvoyAccessLog_TLSVersion_descriptor();
  }
  static inline const ::std::string& TLSVersion_Name(TLSVersion value) {
    return EnvoyAccessLog_TLSVersion_Name(value);
  }
  static inline bool TLSVersion_Parse(const ::std::string& name,
      TLSVersion* value) {
    return EnvoyAccessLog_TLSVersion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.EnvoyAccessLog.ResponseFlag response_flags = 4;
  int response_flags_size() const;
  void clear_response_flags();
  static const int kResponseFlagsFieldNumber = 4;
  ::envoy::api::v2::EnvoyAccessLog_ResponseFlag response_flags(int index) const;
  void set_response_flags(int index, ::envoy::api::v2::EnvoyAccessLog_ResponseFlag value);
  void add_response_flags(::envoy::api::v2::EnvoyAccessLog_ResponseFlag value);
  const ::google::protobuf::RepeatedField<int>& response_flags() const;
  ::google::protobuf::RepeatedField<int>* mutable_response_flags();

  // repeated .envoy.api.v2.HeaderValue request_headers = 26;
  int request_headers_size() const;
  void clear_request_headers();
  static const int kRequestHeadersFieldNumber = 26;
  const ::envoy::api::v2::HeaderValue& request_headers(int index) const;
  ::envoy::api::v2::HeaderValue* mutable_request_headers(int index);
  ::envoy::api::v2::HeaderValue* add_request_headers();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >*
      mutable_request_headers();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >&
      request_headers() const;

  // repeated .envoy.api.v2.HeaderValue response_headers = 27;
  int response_headers_size() const;
  void clear_response_headers();
  static const int kResponseHeadersFieldNumber = 27;
  const ::envoy::api::v2::HeaderValue& response_headers(int index) const;
  ::envoy::api::v2::HeaderValue* mutable_response_headers(int index);
  ::envoy::api::v2::HeaderValue* add_response_headers();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >*
      mutable_response_headers();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >&
      response_headers() const;

  // string upstream_host = 5;
  void clear_upstream_host();
  static const int kUpstreamHostFieldNumber = 5;
  const ::std::string& upstream_host() const;
  void set_upstream_host(const ::std::string& value);
  #if LANG_CXX11
  void set_upstream_host(::std::string&& value);
  #endif
  void set_upstream_host(const char* value);
  void set_upstream_host(const char* value, size_t size);
  ::std::string* mutable_upstream_host();
  ::std::string* release_upstream_host();
  void set_allocated_upstream_host(::std::string* upstream_host);

  // string upstream_cluster = 6;
  void clear_upstream_cluster();
  static const int kUpstreamClusterFieldNumber = 6;
  const ::std::string& upstream_cluster() const;
  void set_upstream_cluster(const ::std::string& value);
  #if LANG_CXX11
  void set_upstream_cluster(::std::string&& value);
  #endif
  void set_upstream_cluster(const char* value);
  void set_upstream_cluster(const char* value, size_t size);
  ::std::string* mutable_upstream_cluster();
  ::std::string* release_upstream_cluster();
  void set_allocated_upstream_cluster(::std::string* upstream_cluster);

  // string destination_host = 7;
  void clear_destination_host();
  static const int kDestinationHostFieldNumber = 7;
  const ::std::string& destination_host() const;
  void set_destination_host(const ::std::string& value);
  #if LANG_CXX11
  void set_destination_host(::std::string&& value);
  #endif
  void set_destination_host(const char* value);
  void set_destination_host(const char* value, size_t size);
  ::std::string* mutable_destination_host();
  ::std::string* release_destination_host();
  void set_allocated_destination_host(::std::string* destination_host);

  // string user_agent = 15;
  void clear_user_agent();
  static const int kUserAgentFieldNumber = 15;
  const ::std::string& user_agent() const;
  void set_user_agent(const ::std::string& value);
  #if LANG_CXX11
  void set_user_agent(::std::string&& value);
  #endif
  void set_user_agent(const char* value);
  void set_user_agent(const char* value, size_t size);
  ::std::string* mutable_user_agent();
  ::std::string* release_user_agent();
  void set_allocated_user_agent(::std::string* user_agent);

  // string path = 17;
  void clear_path();
  static const int kPathFieldNumber = 17;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // string referer = 18;
  void clear_referer();
  static const int kRefererFieldNumber = 18;
  const ::std::string& referer() const;
  void set_referer(const ::std::string& value);
  #if LANG_CXX11
  void set_referer(::std::string&& value);
  #endif
  void set_referer(const char* value);
  void set_referer(const char* value, size_t size);
  ::std::string* mutable_referer();
  ::std::string* release_referer();
  void set_allocated_referer(::std::string* referer);

  // string forwarded_for = 19;
  void clear_forwarded_for();
  static const int kForwardedForFieldNumber = 19;
  const ::std::string& forwarded_for() const;
  void set_forwarded_for(const ::std::string& value);
  #if LANG_CXX11
  void set_forwarded_for(::std::string&& value);
  #endif
  void set_forwarded_for(const char* value);
  void set_forwarded_for(const char* value, size_t size);
  ::std::string* mutable_forwarded_for();
  ::std::string* release_forwarded_for();
  void set_allocated_forwarded_for(::std::string* forwarded_for);

  // string request_id = 20;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 20;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string authority = 21;
  void clear_authority();
  static const int kAuthorityFieldNumber = 21;
  const ::std::string& authority() const;
  void set_authority(const ::std::string& value);
  #if LANG_CXX11
  void set_authority(::std::string&& value);
  #endif
  void set_authority(const char* value);
  void set_authority(const char* value, size_t size);
  ::std::string* mutable_authority();
  ::std::string* release_authority();
  void set_allocated_authority(::std::string* authority);

  // string original_path = 24;
  void clear_original_path();
  static const int kOriginalPathFieldNumber = 24;
  const ::std::string& original_path() const;
  void set_original_path(const ::std::string& value);
  #if LANG_CXX11
  void set_original_path(::std::string&& value);
  #endif
  void set_original_path(const char* value);
  void set_original_path(const char* value, size_t size);
  ::std::string* mutable_original_path();
  ::std::string* release_original_path();
  void set_allocated_original_path(::std::string* original_path);

  // string tls_sni_hostname = 28;
  void clear_tls_sni_hostname();
  static const int kTlsSniHostnameFieldNumber = 28;
  const ::std::string& tls_sni_hostname() const;
  void set_tls_sni_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_tls_sni_hostname(::std::string&& value);
  #endif
  void set_tls_sni_hostname(const char* value);
  void set_tls_sni_hostname(const char* value, size_t size);
  ::std::string* mutable_tls_sni_hostname();
  ::std::string* release_tls_sni_hostname();
  void set_allocated_tls_sni_hostname(::std::string* tls_sni_hostname);

  // .google.protobuf.Timestamp start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.UInt64Value request_body_bytes = 8;
  bool has_request_body_bytes() const;
  void clear_request_body_bytes();
  static const int kRequestBodyBytesFieldNumber = 8;
  const ::google::protobuf::UInt64Value& request_body_bytes() const;
  ::google::protobuf::UInt64Value* mutable_request_body_bytes();
  ::google::protobuf::UInt64Value* release_request_body_bytes();
  void set_allocated_request_body_bytes(::google::protobuf::UInt64Value* request_body_bytes);

  // .google.protobuf.UInt64Value response_body_bytes = 9;
  bool has_response_body_bytes() const;
  void clear_response_body_bytes();
  static const int kResponseBodyBytesFieldNumber = 9;
  const ::google::protobuf::UInt64Value& response_body_bytes() const;
  ::google::protobuf::UInt64Value* mutable_response_body_bytes();
  ::google::protobuf::UInt64Value* release_response_body_bytes();
  void set_allocated_response_body_bytes(::google::protobuf::UInt64Value* response_body_bytes);

  // .google.protobuf.UInt64Value request_headers_bytes = 10;
  bool has_request_headers_bytes() const;
  void clear_request_headers_bytes();
  static const int kRequestHeadersBytesFieldNumber = 10;
  const ::google::protobuf::UInt64Value& request_headers_bytes() const;
  ::google::protobuf::UInt64Value* mutable_request_headers_bytes();
  ::google::protobuf::UInt64Value* release_request_headers_bytes();
  void set_allocated_request_headers_bytes(::google::protobuf::UInt64Value* request_headers_bytes);

  // .google.protobuf.UInt64Value response_headers_bytes = 11;
  bool has_response_headers_bytes() const;
  void clear_response_headers_bytes();
  static const int kResponseHeadersBytesFieldNumber = 11;
  const ::google::protobuf::UInt64Value& response_headers_bytes() const;
  ::google::protobuf::UInt64Value* mutable_response_headers_bytes();
  ::google::protobuf::UInt64Value* release_response_headers_bytes();
  void set_allocated_response_headers_bytes(::google::protobuf::UInt64Value* response_headers_bytes);

  // .google.protobuf.BoolValue secure = 12;
  bool has_secure() const;
  void clear_secure();
  static const int kSecureFieldNumber = 12;
  const ::google::protobuf::BoolValue& secure() const;
  ::google::protobuf::BoolValue* mutable_secure();
  ::google::protobuf::BoolValue* release_secure();
  void set_allocated_secure(::google::protobuf::BoolValue* secure);

  // .google.protobuf.BoolValue health_check = 13;
  bool has_health_check() const;
  void clear_health_check();
  static const int kHealthCheckFieldNumber = 13;
  const ::google::protobuf::BoolValue& health_check() const;
  ::google::protobuf::BoolValue* mutable_health_check();
  ::google::protobuf::BoolValue* release_health_check();
  void set_allocated_health_check(::google::protobuf::BoolValue* health_check);

  // .google.protobuf.UInt32Value response_code = 14;
  bool has_response_code() const;
  void clear_response_code();
  static const int kResponseCodeFieldNumber = 14;
  const ::google::protobuf::UInt32Value& response_code() const;
  ::google::protobuf::UInt32Value* mutable_response_code();
  ::google::protobuf::UInt32Value* release_response_code();
  void set_allocated_response_code(::google::protobuf::UInt32Value* response_code);

  // .google.protobuf.Duration response_duration = 22;
  bool has_response_duration() const;
  void clear_response_duration();
  static const int kResponseDurationFieldNumber = 22;
  const ::google::protobuf::Duration& response_duration() const;
  ::google::protobuf::Duration* mutable_response_duration();
  ::google::protobuf::Duration* release_response_duration();
  void set_allocated_response_duration(::google::protobuf::Duration* response_duration);

  // .google.protobuf.Duration upstream_service_duration = 23;
  bool has_upstream_service_duration() const;
  void clear_upstream_service_duration();
  static const int kUpstreamServiceDurationFieldNumber = 23;
  const ::google::protobuf::Duration& upstream_service_duration() const;
  ::google::protobuf::Duration* mutable_upstream_service_duration();
  ::google::protobuf::Duration* release_upstream_service_duration();
  void set_allocated_upstream_service_duration(::google::protobuf::Duration* upstream_service_duration);

  // .google.protobuf.Struct metadata = 25;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 25;
  const ::google::protobuf::Struct& metadata() const;
  ::google::protobuf::Struct* mutable_metadata();
  ::google::protobuf::Struct* release_metadata();
  void set_allocated_metadata(::google::protobuf::Struct* metadata);

  // .google.protobuf.UInt32Value tls_cipher_suite = 30;
  bool has_tls_cipher_suite() const;
  void clear_tls_cipher_suite();
  static const int kTlsCipherSuiteFieldNumber = 30;
  const ::google::protobuf::UInt32Value& tls_cipher_suite() const;
  ::google::protobuf::UInt32Value* mutable_tls_cipher_suite();
  ::google::protobuf::UInt32Value* release_tls_cipher_suite();
  void set_allocated_tls_cipher_suite(::google::protobuf::UInt32Value* tls_cipher_suite);

  // .envoy.api.v2.EnvoyAccessLog.RequestMethod request_method = 1;
  void clear_request_method();
  static const int kRequestMethodFieldNumber = 1;
  ::envoy::api::v2::EnvoyAccessLog_RequestMethod request_method() const;
  void set_request_method(::envoy::api::v2::EnvoyAccessLog_RequestMethod value);

  // .envoy.api.v2.EnvoyAccessLog.Protocol protocol_variant = 3;
  void clear_protocol_variant();
  static const int kProtocolVariantFieldNumber = 3;
  ::envoy::api::v2::EnvoyAccessLog_Protocol protocol_variant() const;
  void set_protocol_variant(::envoy::api::v2::EnvoyAccessLog_Protocol value);

  // .envoy.api.v2.EnvoyAccessLog.TLSVersion tls_version = 29;
  void clear_tls_version();
  static const int kTlsVersionFieldNumber = 29;
  ::envoy::api::v2::EnvoyAccessLog_TLSVersion tls_version() const;
  void set_tls_version(::envoy::api::v2::EnvoyAccessLog_TLSVersion value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.EnvoyAccessLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> response_flags_;
  mutable int _response_flags_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue > request_headers_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue > response_headers_;
  ::google::protobuf::internal::ArenaStringPtr upstream_host_;
  ::google::protobuf::internal::ArenaStringPtr upstream_cluster_;
  ::google::protobuf::internal::ArenaStringPtr destination_host_;
  ::google::protobuf::internal::ArenaStringPtr user_agent_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr referer_;
  ::google::protobuf::internal::ArenaStringPtr forwarded_for_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr authority_;
  ::google::protobuf::internal::ArenaStringPtr original_path_;
  ::google::protobuf::internal::ArenaStringPtr tls_sni_hostname_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::UInt64Value* request_body_bytes_;
  ::google::protobuf::UInt64Value* response_body_bytes_;
  ::google::protobuf::UInt64Value* request_headers_bytes_;
  ::google::protobuf::UInt64Value* response_headers_bytes_;
  ::google::protobuf::BoolValue* secure_;
  ::google::protobuf::BoolValue* health_check_;
  ::google::protobuf::UInt32Value* response_code_;
  ::google::protobuf::Duration* response_duration_;
  ::google::protobuf::Duration* upstream_service_duration_;
  ::google::protobuf::Struct* metadata_;
  ::google::protobuf::UInt32Value* tls_cipher_suite_;
  int request_method_;
  int protocol_variant_;
  int tls_version_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2faccesslog_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EnvoyAccessLog

// .envoy.api.v2.EnvoyAccessLog.RequestMethod request_method = 1;
inline void EnvoyAccessLog::clear_request_method() {
  request_method_ = 0;
}
inline ::envoy::api::v2::EnvoyAccessLog_RequestMethod EnvoyAccessLog::request_method() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_method)
  return static_cast< ::envoy::api::v2::EnvoyAccessLog_RequestMethod >(request_method_);
}
inline void EnvoyAccessLog::set_request_method(::envoy::api::v2::EnvoyAccessLog_RequestMethod value) {
  
  request_method_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.request_method)
}

// .google.protobuf.Timestamp start_time = 2;
inline bool EnvoyAccessLog::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void EnvoyAccessLog::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& EnvoyAccessLog::start_time() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* EnvoyAccessLog::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* EnvoyAccessLog::release_start_time() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.start_time)
}

// .envoy.api.v2.EnvoyAccessLog.Protocol protocol_variant = 3;
inline void EnvoyAccessLog::clear_protocol_variant() {
  protocol_variant_ = 0;
}
inline ::envoy::api::v2::EnvoyAccessLog_Protocol EnvoyAccessLog::protocol_variant() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.protocol_variant)
  return static_cast< ::envoy::api::v2::EnvoyAccessLog_Protocol >(protocol_variant_);
}
inline void EnvoyAccessLog::set_protocol_variant(::envoy::api::v2::EnvoyAccessLog_Protocol value) {
  
  protocol_variant_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.protocol_variant)
}

// repeated .envoy.api.v2.EnvoyAccessLog.ResponseFlag response_flags = 4;
inline int EnvoyAccessLog::response_flags_size() const {
  return response_flags_.size();
}
inline void EnvoyAccessLog::clear_response_flags() {
  response_flags_.Clear();
}
inline ::envoy::api::v2::EnvoyAccessLog_ResponseFlag EnvoyAccessLog::response_flags(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_flags)
  return static_cast< ::envoy::api::v2::EnvoyAccessLog_ResponseFlag >(response_flags_.Get(index));
}
inline void EnvoyAccessLog::set_response_flags(int index, ::envoy::api::v2::EnvoyAccessLog_ResponseFlag value) {
  response_flags_.Set(index, value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.response_flags)
}
inline void EnvoyAccessLog::add_response_flags(::envoy::api::v2::EnvoyAccessLog_ResponseFlag value) {
  response_flags_.Add(value);
  // @@protoc_insertion_point(field_add:envoy.api.v2.EnvoyAccessLog.response_flags)
}
inline const ::google::protobuf::RepeatedField<int>&
EnvoyAccessLog::response_flags() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.EnvoyAccessLog.response_flags)
  return response_flags_;
}
inline ::google::protobuf::RepeatedField<int>*
EnvoyAccessLog::mutable_response_flags() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.EnvoyAccessLog.response_flags)
  return &response_flags_;
}

// string upstream_host = 5;
inline void EnvoyAccessLog::clear_upstream_host() {
  upstream_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::upstream_host() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.upstream_host)
  return upstream_host_.GetNoArena();
}
inline void EnvoyAccessLog::set_upstream_host(const ::std::string& value) {
  
  upstream_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.upstream_host)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_upstream_host(::std::string&& value) {
  
  upstream_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.upstream_host)
}
#endif
inline void EnvoyAccessLog::set_upstream_host(const char* value) {
  
  upstream_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.upstream_host)
}
inline void EnvoyAccessLog::set_upstream_host(const char* value, size_t size) {
  
  upstream_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.upstream_host)
}
inline ::std::string* EnvoyAccessLog::mutable_upstream_host() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.upstream_host)
  return upstream_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_upstream_host() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.upstream_host)
  
  return upstream_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_upstream_host(::std::string* upstream_host) {
  if (upstream_host != NULL) {
    
  } else {
    
  }
  upstream_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upstream_host);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.upstream_host)
}

// string upstream_cluster = 6;
inline void EnvoyAccessLog::clear_upstream_cluster() {
  upstream_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::upstream_cluster() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
  return upstream_cluster_.GetNoArena();
}
inline void EnvoyAccessLog::set_upstream_cluster(const ::std::string& value) {
  
  upstream_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_upstream_cluster(::std::string&& value) {
  
  upstream_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}
#endif
inline void EnvoyAccessLog::set_upstream_cluster(const char* value) {
  
  upstream_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}
inline void EnvoyAccessLog::set_upstream_cluster(const char* value, size_t size) {
  
  upstream_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}
inline ::std::string* EnvoyAccessLog::mutable_upstream_cluster() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
  return upstream_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_upstream_cluster() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
  
  return upstream_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_upstream_cluster(::std::string* upstream_cluster) {
  if (upstream_cluster != NULL) {
    
  } else {
    
  }
  upstream_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upstream_cluster);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.upstream_cluster)
}

// string destination_host = 7;
inline void EnvoyAccessLog::clear_destination_host() {
  destination_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::destination_host() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.destination_host)
  return destination_host_.GetNoArena();
}
inline void EnvoyAccessLog::set_destination_host(const ::std::string& value) {
  
  destination_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.destination_host)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_destination_host(::std::string&& value) {
  
  destination_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.destination_host)
}
#endif
inline void EnvoyAccessLog::set_destination_host(const char* value) {
  
  destination_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.destination_host)
}
inline void EnvoyAccessLog::set_destination_host(const char* value, size_t size) {
  
  destination_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.destination_host)
}
inline ::std::string* EnvoyAccessLog::mutable_destination_host() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.destination_host)
  return destination_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_destination_host() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.destination_host)
  
  return destination_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_destination_host(::std::string* destination_host) {
  if (destination_host != NULL) {
    
  } else {
    
  }
  destination_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_host);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.destination_host)
}

// .google.protobuf.UInt64Value request_body_bytes = 8;
inline bool EnvoyAccessLog::has_request_body_bytes() const {
  return this != internal_default_instance() && request_body_bytes_ != NULL;
}
inline void EnvoyAccessLog::clear_request_body_bytes() {
  if (GetArenaNoVirtual() == NULL && request_body_bytes_ != NULL) delete request_body_bytes_;
  request_body_bytes_ = NULL;
}
inline const ::google::protobuf::UInt64Value& EnvoyAccessLog::request_body_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_body_bytes)
  return request_body_bytes_ != NULL ? *request_body_bytes_
                         : *::google::protobuf::UInt64Value::internal_default_instance();
}
inline ::google::protobuf::UInt64Value* EnvoyAccessLog::mutable_request_body_bytes() {
  
  if (request_body_bytes_ == NULL) {
    request_body_bytes_ = new ::google::protobuf::UInt64Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.request_body_bytes)
  return request_body_bytes_;
}
inline ::google::protobuf::UInt64Value* EnvoyAccessLog::release_request_body_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.request_body_bytes)
  
  ::google::protobuf::UInt64Value* temp = request_body_bytes_;
  request_body_bytes_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_request_body_bytes(::google::protobuf::UInt64Value* request_body_bytes) {
  delete request_body_bytes_;
  if (request_body_bytes != NULL && request_body_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt64Value* new_request_body_bytes = new ::google::protobuf::UInt64Value;
    new_request_body_bytes->CopyFrom(*request_body_bytes);
    request_body_bytes = new_request_body_bytes;
  }
  request_body_bytes_ = request_body_bytes;
  if (request_body_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.request_body_bytes)
}

// .google.protobuf.UInt64Value response_body_bytes = 9;
inline bool EnvoyAccessLog::has_response_body_bytes() const {
  return this != internal_default_instance() && response_body_bytes_ != NULL;
}
inline void EnvoyAccessLog::clear_response_body_bytes() {
  if (GetArenaNoVirtual() == NULL && response_body_bytes_ != NULL) delete response_body_bytes_;
  response_body_bytes_ = NULL;
}
inline const ::google::protobuf::UInt64Value& EnvoyAccessLog::response_body_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_body_bytes)
  return response_body_bytes_ != NULL ? *response_body_bytes_
                         : *::google::protobuf::UInt64Value::internal_default_instance();
}
inline ::google::protobuf::UInt64Value* EnvoyAccessLog::mutable_response_body_bytes() {
  
  if (response_body_bytes_ == NULL) {
    response_body_bytes_ = new ::google::protobuf::UInt64Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_body_bytes)
  return response_body_bytes_;
}
inline ::google::protobuf::UInt64Value* EnvoyAccessLog::release_response_body_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.response_body_bytes)
  
  ::google::protobuf::UInt64Value* temp = response_body_bytes_;
  response_body_bytes_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_response_body_bytes(::google::protobuf::UInt64Value* response_body_bytes) {
  delete response_body_bytes_;
  if (response_body_bytes != NULL && response_body_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt64Value* new_response_body_bytes = new ::google::protobuf::UInt64Value;
    new_response_body_bytes->CopyFrom(*response_body_bytes);
    response_body_bytes = new_response_body_bytes;
  }
  response_body_bytes_ = response_body_bytes;
  if (response_body_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.response_body_bytes)
}

// .google.protobuf.UInt64Value request_headers_bytes = 10;
inline bool EnvoyAccessLog::has_request_headers_bytes() const {
  return this != internal_default_instance() && request_headers_bytes_ != NULL;
}
inline void EnvoyAccessLog::clear_request_headers_bytes() {
  if (GetArenaNoVirtual() == NULL && request_headers_bytes_ != NULL) delete request_headers_bytes_;
  request_headers_bytes_ = NULL;
}
inline const ::google::protobuf::UInt64Value& EnvoyAccessLog::request_headers_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_headers_bytes)
  return request_headers_bytes_ != NULL ? *request_headers_bytes_
                         : *::google::protobuf::UInt64Value::internal_default_instance();
}
inline ::google::protobuf::UInt64Value* EnvoyAccessLog::mutable_request_headers_bytes() {
  
  if (request_headers_bytes_ == NULL) {
    request_headers_bytes_ = new ::google::protobuf::UInt64Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.request_headers_bytes)
  return request_headers_bytes_;
}
inline ::google::protobuf::UInt64Value* EnvoyAccessLog::release_request_headers_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.request_headers_bytes)
  
  ::google::protobuf::UInt64Value* temp = request_headers_bytes_;
  request_headers_bytes_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_request_headers_bytes(::google::protobuf::UInt64Value* request_headers_bytes) {
  delete request_headers_bytes_;
  if (request_headers_bytes != NULL && request_headers_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt64Value* new_request_headers_bytes = new ::google::protobuf::UInt64Value;
    new_request_headers_bytes->CopyFrom(*request_headers_bytes);
    request_headers_bytes = new_request_headers_bytes;
  }
  request_headers_bytes_ = request_headers_bytes;
  if (request_headers_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.request_headers_bytes)
}

// .google.protobuf.UInt64Value response_headers_bytes = 11;
inline bool EnvoyAccessLog::has_response_headers_bytes() const {
  return this != internal_default_instance() && response_headers_bytes_ != NULL;
}
inline void EnvoyAccessLog::clear_response_headers_bytes() {
  if (GetArenaNoVirtual() == NULL && response_headers_bytes_ != NULL) delete response_headers_bytes_;
  response_headers_bytes_ = NULL;
}
inline const ::google::protobuf::UInt64Value& EnvoyAccessLog::response_headers_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_headers_bytes)
  return response_headers_bytes_ != NULL ? *response_headers_bytes_
                         : *::google::protobuf::UInt64Value::internal_default_instance();
}
inline ::google::protobuf::UInt64Value* EnvoyAccessLog::mutable_response_headers_bytes() {
  
  if (response_headers_bytes_ == NULL) {
    response_headers_bytes_ = new ::google::protobuf::UInt64Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_headers_bytes)
  return response_headers_bytes_;
}
inline ::google::protobuf::UInt64Value* EnvoyAccessLog::release_response_headers_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.response_headers_bytes)
  
  ::google::protobuf::UInt64Value* temp = response_headers_bytes_;
  response_headers_bytes_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_response_headers_bytes(::google::protobuf::UInt64Value* response_headers_bytes) {
  delete response_headers_bytes_;
  if (response_headers_bytes != NULL && response_headers_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt64Value* new_response_headers_bytes = new ::google::protobuf::UInt64Value;
    new_response_headers_bytes->CopyFrom(*response_headers_bytes);
    response_headers_bytes = new_response_headers_bytes;
  }
  response_headers_bytes_ = response_headers_bytes;
  if (response_headers_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.response_headers_bytes)
}

// .google.protobuf.BoolValue secure = 12;
inline bool EnvoyAccessLog::has_secure() const {
  return this != internal_default_instance() && secure_ != NULL;
}
inline void EnvoyAccessLog::clear_secure() {
  if (GetArenaNoVirtual() == NULL && secure_ != NULL) delete secure_;
  secure_ = NULL;
}
inline const ::google::protobuf::BoolValue& EnvoyAccessLog::secure() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.secure)
  return secure_ != NULL ? *secure_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
inline ::google::protobuf::BoolValue* EnvoyAccessLog::mutable_secure() {
  
  if (secure_ == NULL) {
    secure_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.secure)
  return secure_;
}
inline ::google::protobuf::BoolValue* EnvoyAccessLog::release_secure() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.secure)
  
  ::google::protobuf::BoolValue* temp = secure_;
  secure_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_secure(::google::protobuf::BoolValue* secure) {
  delete secure_;
  if (secure != NULL && secure->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_secure = new ::google::protobuf::BoolValue;
    new_secure->CopyFrom(*secure);
    secure = new_secure;
  }
  secure_ = secure;
  if (secure) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.secure)
}

// .google.protobuf.BoolValue health_check = 13;
inline bool EnvoyAccessLog::has_health_check() const {
  return this != internal_default_instance() && health_check_ != NULL;
}
inline void EnvoyAccessLog::clear_health_check() {
  if (GetArenaNoVirtual() == NULL && health_check_ != NULL) delete health_check_;
  health_check_ = NULL;
}
inline const ::google::protobuf::BoolValue& EnvoyAccessLog::health_check() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.health_check)
  return health_check_ != NULL ? *health_check_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
inline ::google::protobuf::BoolValue* EnvoyAccessLog::mutable_health_check() {
  
  if (health_check_ == NULL) {
    health_check_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.health_check)
  return health_check_;
}
inline ::google::protobuf::BoolValue* EnvoyAccessLog::release_health_check() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.health_check)
  
  ::google::protobuf::BoolValue* temp = health_check_;
  health_check_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_health_check(::google::protobuf::BoolValue* health_check) {
  delete health_check_;
  if (health_check != NULL && health_check->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_health_check = new ::google::protobuf::BoolValue;
    new_health_check->CopyFrom(*health_check);
    health_check = new_health_check;
  }
  health_check_ = health_check;
  if (health_check) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.health_check)
}

// .google.protobuf.UInt32Value response_code = 14;
inline bool EnvoyAccessLog::has_response_code() const {
  return this != internal_default_instance() && response_code_ != NULL;
}
inline void EnvoyAccessLog::clear_response_code() {
  if (GetArenaNoVirtual() == NULL && response_code_ != NULL) delete response_code_;
  response_code_ = NULL;
}
inline const ::google::protobuf::UInt32Value& EnvoyAccessLog::response_code() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_code)
  return response_code_ != NULL ? *response_code_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
inline ::google::protobuf::UInt32Value* EnvoyAccessLog::mutable_response_code() {
  
  if (response_code_ == NULL) {
    response_code_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_code)
  return response_code_;
}
inline ::google::protobuf::UInt32Value* EnvoyAccessLog::release_response_code() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.response_code)
  
  ::google::protobuf::UInt32Value* temp = response_code_;
  response_code_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_response_code(::google::protobuf::UInt32Value* response_code) {
  delete response_code_;
  if (response_code != NULL && response_code->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_response_code = new ::google::protobuf::UInt32Value;
    new_response_code->CopyFrom(*response_code);
    response_code = new_response_code;
  }
  response_code_ = response_code;
  if (response_code) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.response_code)
}

// string user_agent = 15;
inline void EnvoyAccessLog::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::user_agent() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.user_agent)
  return user_agent_.GetNoArena();
}
inline void EnvoyAccessLog::set_user_agent(const ::std::string& value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.user_agent)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_user_agent(::std::string&& value) {
  
  user_agent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.user_agent)
}
#endif
inline void EnvoyAccessLog::set_user_agent(const char* value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.user_agent)
}
inline void EnvoyAccessLog::set_user_agent(const char* value, size_t size) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.user_agent)
}
inline ::std::string* EnvoyAccessLog::mutable_user_agent() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_user_agent() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.user_agent)
  
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    
  } else {
    
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.user_agent)
}

// string path = 17;
inline void EnvoyAccessLog::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.path)
  return path_.GetNoArena();
}
inline void EnvoyAccessLog::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.path)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.path)
}
#endif
inline void EnvoyAccessLog::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.path)
}
inline void EnvoyAccessLog::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.path)
}
inline ::std::string* EnvoyAccessLog::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.path)
}

// string referer = 18;
inline void EnvoyAccessLog::clear_referer() {
  referer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::referer() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.referer)
  return referer_.GetNoArena();
}
inline void EnvoyAccessLog::set_referer(const ::std::string& value) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.referer)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_referer(::std::string&& value) {
  
  referer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.referer)
}
#endif
inline void EnvoyAccessLog::set_referer(const char* value) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.referer)
}
inline void EnvoyAccessLog::set_referer(const char* value, size_t size) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.referer)
}
inline ::std::string* EnvoyAccessLog::mutable_referer() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.referer)
  return referer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_referer() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.referer)
  
  return referer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_referer(::std::string* referer) {
  if (referer != NULL) {
    
  } else {
    
  }
  referer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referer);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.referer)
}

// string forwarded_for = 19;
inline void EnvoyAccessLog::clear_forwarded_for() {
  forwarded_for_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::forwarded_for() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.forwarded_for)
  return forwarded_for_.GetNoArena();
}
inline void EnvoyAccessLog::set_forwarded_for(const ::std::string& value) {
  
  forwarded_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_forwarded_for(::std::string&& value) {
  
  forwarded_for_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}
#endif
inline void EnvoyAccessLog::set_forwarded_for(const char* value) {
  
  forwarded_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}
inline void EnvoyAccessLog::set_forwarded_for(const char* value, size_t size) {
  
  forwarded_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}
inline ::std::string* EnvoyAccessLog::mutable_forwarded_for() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.forwarded_for)
  return forwarded_for_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_forwarded_for() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.forwarded_for)
  
  return forwarded_for_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_forwarded_for(::std::string* forwarded_for) {
  if (forwarded_for != NULL) {
    
  } else {
    
  }
  forwarded_for_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), forwarded_for);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.forwarded_for)
}

// string request_id = 20;
inline void EnvoyAccessLog::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::request_id() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_id)
  return request_id_.GetNoArena();
}
inline void EnvoyAccessLog::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.request_id)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.request_id)
}
#endif
inline void EnvoyAccessLog::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.request_id)
}
inline void EnvoyAccessLog::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.request_id)
}
inline ::std::string* EnvoyAccessLog::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_request_id() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.request_id)
}

// string authority = 21;
inline void EnvoyAccessLog::clear_authority() {
  authority_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::authority() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.authority)
  return authority_.GetNoArena();
}
inline void EnvoyAccessLog::set_authority(const ::std::string& value) {
  
  authority_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.authority)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_authority(::std::string&& value) {
  
  authority_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.authority)
}
#endif
inline void EnvoyAccessLog::set_authority(const char* value) {
  
  authority_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.authority)
}
inline void EnvoyAccessLog::set_authority(const char* value, size_t size) {
  
  authority_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.authority)
}
inline ::std::string* EnvoyAccessLog::mutable_authority() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.authority)
  return authority_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_authority() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.authority)
  
  return authority_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_authority(::std::string* authority) {
  if (authority != NULL) {
    
  } else {
    
  }
  authority_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authority);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.authority)
}

// .google.protobuf.Duration response_duration = 22;
inline bool EnvoyAccessLog::has_response_duration() const {
  return this != internal_default_instance() && response_duration_ != NULL;
}
inline void EnvoyAccessLog::clear_response_duration() {
  if (GetArenaNoVirtual() == NULL && response_duration_ != NULL) delete response_duration_;
  response_duration_ = NULL;
}
inline const ::google::protobuf::Duration& EnvoyAccessLog::response_duration() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_duration)
  return response_duration_ != NULL ? *response_duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* EnvoyAccessLog::mutable_response_duration() {
  
  if (response_duration_ == NULL) {
    response_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_duration)
  return response_duration_;
}
inline ::google::protobuf::Duration* EnvoyAccessLog::release_response_duration() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.response_duration)
  
  ::google::protobuf::Duration* temp = response_duration_;
  response_duration_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_response_duration(::google::protobuf::Duration* response_duration) {
  delete response_duration_;
  if (response_duration != NULL && response_duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_response_duration = new ::google::protobuf::Duration;
    new_response_duration->CopyFrom(*response_duration);
    response_duration = new_response_duration;
  }
  response_duration_ = response_duration;
  if (response_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.response_duration)
}

// .google.protobuf.Duration upstream_service_duration = 23;
inline bool EnvoyAccessLog::has_upstream_service_duration() const {
  return this != internal_default_instance() && upstream_service_duration_ != NULL;
}
inline void EnvoyAccessLog::clear_upstream_service_duration() {
  if (GetArenaNoVirtual() == NULL && upstream_service_duration_ != NULL) delete upstream_service_duration_;
  upstream_service_duration_ = NULL;
}
inline const ::google::protobuf::Duration& EnvoyAccessLog::upstream_service_duration() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.upstream_service_duration)
  return upstream_service_duration_ != NULL ? *upstream_service_duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* EnvoyAccessLog::mutable_upstream_service_duration() {
  
  if (upstream_service_duration_ == NULL) {
    upstream_service_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.upstream_service_duration)
  return upstream_service_duration_;
}
inline ::google::protobuf::Duration* EnvoyAccessLog::release_upstream_service_duration() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.upstream_service_duration)
  
  ::google::protobuf::Duration* temp = upstream_service_duration_;
  upstream_service_duration_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_upstream_service_duration(::google::protobuf::Duration* upstream_service_duration) {
  delete upstream_service_duration_;
  if (upstream_service_duration != NULL && upstream_service_duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_upstream_service_duration = new ::google::protobuf::Duration;
    new_upstream_service_duration->CopyFrom(*upstream_service_duration);
    upstream_service_duration = new_upstream_service_duration;
  }
  upstream_service_duration_ = upstream_service_duration;
  if (upstream_service_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.upstream_service_duration)
}

// string original_path = 24;
inline void EnvoyAccessLog::clear_original_path() {
  original_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::original_path() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.original_path)
  return original_path_.GetNoArena();
}
inline void EnvoyAccessLog::set_original_path(const ::std::string& value) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.original_path)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_original_path(::std::string&& value) {
  
  original_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.original_path)
}
#endif
inline void EnvoyAccessLog::set_original_path(const char* value) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.original_path)
}
inline void EnvoyAccessLog::set_original_path(const char* value, size_t size) {
  
  original_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.original_path)
}
inline ::std::string* EnvoyAccessLog::mutable_original_path() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.original_path)
  return original_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_original_path() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.original_path)
  
  return original_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_original_path(::std::string* original_path) {
  if (original_path != NULL) {
    
  } else {
    
  }
  original_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_path);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.original_path)
}

// .google.protobuf.Struct metadata = 25;
inline bool EnvoyAccessLog::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
inline void EnvoyAccessLog::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) delete metadata_;
  metadata_ = NULL;
}
inline const ::google::protobuf::Struct& EnvoyAccessLog::metadata() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::google::protobuf::Struct::internal_default_instance();
}
inline ::google::protobuf::Struct* EnvoyAccessLog::mutable_metadata() {
  
  if (metadata_ == NULL) {
    metadata_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.metadata)
  return metadata_;
}
inline ::google::protobuf::Struct* EnvoyAccessLog::release_metadata() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.metadata)
  
  ::google::protobuf::Struct* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_metadata(::google::protobuf::Struct* metadata) {
  delete metadata_;
  if (metadata != NULL && metadata->GetArena() != NULL) {
    ::google::protobuf::Struct* new_metadata = new ::google::protobuf::Struct;
    new_metadata->CopyFrom(*metadata);
    metadata = new_metadata;
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.metadata)
}

// repeated .envoy.api.v2.HeaderValue request_headers = 26;
inline int EnvoyAccessLog::request_headers_size() const {
  return request_headers_.size();
}
inline void EnvoyAccessLog::clear_request_headers() {
  request_headers_.Clear();
}
inline const ::envoy::api::v2::HeaderValue& EnvoyAccessLog::request_headers(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.request_headers)
  return request_headers_.Get(index);
}
inline ::envoy::api::v2::HeaderValue* EnvoyAccessLog::mutable_request_headers(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.request_headers)
  return request_headers_.Mutable(index);
}
inline ::envoy::api::v2::HeaderValue* EnvoyAccessLog::add_request_headers() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.EnvoyAccessLog.request_headers)
  return request_headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >*
EnvoyAccessLog::mutable_request_headers() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.EnvoyAccessLog.request_headers)
  return &request_headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >&
EnvoyAccessLog::request_headers() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.EnvoyAccessLog.request_headers)
  return request_headers_;
}

// repeated .envoy.api.v2.HeaderValue response_headers = 27;
inline int EnvoyAccessLog::response_headers_size() const {
  return response_headers_.size();
}
inline void EnvoyAccessLog::clear_response_headers() {
  response_headers_.Clear();
}
inline const ::envoy::api::v2::HeaderValue& EnvoyAccessLog::response_headers(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.response_headers)
  return response_headers_.Get(index);
}
inline ::envoy::api::v2::HeaderValue* EnvoyAccessLog::mutable_response_headers(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.response_headers)
  return response_headers_.Mutable(index);
}
inline ::envoy::api::v2::HeaderValue* EnvoyAccessLog::add_response_headers() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.EnvoyAccessLog.response_headers)
  return response_headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >*
EnvoyAccessLog::mutable_response_headers() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.EnvoyAccessLog.response_headers)
  return &response_headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HeaderValue >&
EnvoyAccessLog::response_headers() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.EnvoyAccessLog.response_headers)
  return response_headers_;
}

// string tls_sni_hostname = 28;
inline void EnvoyAccessLog::clear_tls_sni_hostname() {
  tls_sni_hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnvoyAccessLog::tls_sni_hostname() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
  return tls_sni_hostname_.GetNoArena();
}
inline void EnvoyAccessLog::set_tls_sni_hostname(const ::std::string& value) {
  
  tls_sni_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}
#if LANG_CXX11
inline void EnvoyAccessLog::set_tls_sni_hostname(::std::string&& value) {
  
  tls_sni_hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}
#endif
inline void EnvoyAccessLog::set_tls_sni_hostname(const char* value) {
  
  tls_sni_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}
inline void EnvoyAccessLog::set_tls_sni_hostname(const char* value, size_t size) {
  
  tls_sni_hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}
inline ::std::string* EnvoyAccessLog::mutable_tls_sni_hostname() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
  return tls_sni_hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnvoyAccessLog::release_tls_sni_hostname() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
  
  return tls_sni_hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnvoyAccessLog::set_allocated_tls_sni_hostname(::std::string* tls_sni_hostname) {
  if (tls_sni_hostname != NULL) {
    
  } else {
    
  }
  tls_sni_hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tls_sni_hostname);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.tls_sni_hostname)
}

// .envoy.api.v2.EnvoyAccessLog.TLSVersion tls_version = 29;
inline void EnvoyAccessLog::clear_tls_version() {
  tls_version_ = 0;
}
inline ::envoy::api::v2::EnvoyAccessLog_TLSVersion EnvoyAccessLog::tls_version() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.tls_version)
  return static_cast< ::envoy::api::v2::EnvoyAccessLog_TLSVersion >(tls_version_);
}
inline void EnvoyAccessLog::set_tls_version(::envoy::api::v2::EnvoyAccessLog_TLSVersion value) {
  
  tls_version_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EnvoyAccessLog.tls_version)
}

// .google.protobuf.UInt32Value tls_cipher_suite = 30;
inline bool EnvoyAccessLog::has_tls_cipher_suite() const {
  return this != internal_default_instance() && tls_cipher_suite_ != NULL;
}
inline void EnvoyAccessLog::clear_tls_cipher_suite() {
  if (GetArenaNoVirtual() == NULL && tls_cipher_suite_ != NULL) delete tls_cipher_suite_;
  tls_cipher_suite_ = NULL;
}
inline const ::google::protobuf::UInt32Value& EnvoyAccessLog::tls_cipher_suite() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EnvoyAccessLog.tls_cipher_suite)
  return tls_cipher_suite_ != NULL ? *tls_cipher_suite_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
inline ::google::protobuf::UInt32Value* EnvoyAccessLog::mutable_tls_cipher_suite() {
  
  if (tls_cipher_suite_ == NULL) {
    tls_cipher_suite_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EnvoyAccessLog.tls_cipher_suite)
  return tls_cipher_suite_;
}
inline ::google::protobuf::UInt32Value* EnvoyAccessLog::release_tls_cipher_suite() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EnvoyAccessLog.tls_cipher_suite)
  
  ::google::protobuf::UInt32Value* temp = tls_cipher_suite_;
  tls_cipher_suite_ = NULL;
  return temp;
}
inline void EnvoyAccessLog::set_allocated_tls_cipher_suite(::google::protobuf::UInt32Value* tls_cipher_suite) {
  delete tls_cipher_suite_;
  if (tls_cipher_suite != NULL && tls_cipher_suite->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_tls_cipher_suite = new ::google::protobuf::UInt32Value;
    new_tls_cipher_suite->CopyFrom(*tls_cipher_suite);
    tls_cipher_suite = new_tls_cipher_suite;
  }
  tls_cipher_suite_ = tls_cipher_suite;
  if (tls_cipher_suite) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EnvoyAccessLog.tls_cipher_suite)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace v2
}  // namespace api
}  // namespace envoy

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::envoy::api::v2::EnvoyAccessLog_RequestMethod> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::api::v2::EnvoyAccessLog_RequestMethod>() {
  return ::envoy::api::v2::EnvoyAccessLog_RequestMethod_descriptor();
}
template <> struct is_proto_enum< ::envoy::api::v2::EnvoyAccessLog_Protocol> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::api::v2::EnvoyAccessLog_Protocol>() {
  return ::envoy::api::v2::EnvoyAccessLog_Protocol_descriptor();
}
template <> struct is_proto_enum< ::envoy::api::v2::EnvoyAccessLog_ResponseFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::api::v2::EnvoyAccessLog_ResponseFlag>() {
  return ::envoy::api::v2::EnvoyAccessLog_ResponseFlag_descriptor();
}
template <> struct is_proto_enum< ::envoy::api::v2::EnvoyAccessLog_TLSVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::api::v2::EnvoyAccessLog_TLSVersion>() {
  return ::envoy::api::v2::EnvoyAccessLog_TLSVersion_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2faccesslog_2eproto__INCLUDED
