// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/eds.proto

#ifndef PROTOBUF_api_2feds_2eproto__INCLUDED
#define PROTOBUF_api_2feds_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "api/base.pb.h"
#include "api/discovery.pb.h"
#include "api/health_check.pb.h"
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class ClusterLoadAssignment;
class ClusterLoadAssignmentDefaultTypeInternal;
extern ClusterLoadAssignmentDefaultTypeInternal _ClusterLoadAssignment_default_instance_;
class ClusterLoadAssignment_Policy;
class ClusterLoadAssignment_PolicyDefaultTypeInternal;
extern ClusterLoadAssignment_PolicyDefaultTypeInternal _ClusterLoadAssignment_Policy_default_instance_;
class ClusterStats;
class ClusterStatsDefaultTypeInternal;
extern ClusterStatsDefaultTypeInternal _ClusterStats_default_instance_;
class EndpointLoadMetricStats;
class EndpointLoadMetricStatsDefaultTypeInternal;
extern EndpointLoadMetricStatsDefaultTypeInternal _EndpointLoadMetricStats_default_instance_;
class LbEndpoint;
class LbEndpointDefaultTypeInternal;
extern LbEndpointDefaultTypeInternal _LbEndpoint_default_instance_;
class LoadStatsRequest;
class LoadStatsRequestDefaultTypeInternal;
extern LoadStatsRequestDefaultTypeInternal _LoadStatsRequest_default_instance_;
class LoadStatsResponse;
class LoadStatsResponseDefaultTypeInternal;
extern LoadStatsResponseDefaultTypeInternal _LoadStatsResponse_default_instance_;
class LocalityLbEndpoints;
class LocalityLbEndpointsDefaultTypeInternal;
extern LocalityLbEndpointsDefaultTypeInternal _LocalityLbEndpoints_default_instance_;
class UpstreamLocalityStats;
class UpstreamLocalityStatsDefaultTypeInternal;
extern UpstreamLocalityStatsDefaultTypeInternal _UpstreamLocalityStats_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy

namespace envoy {
namespace api {
namespace v2 {

namespace protobuf_api_2feds_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_api_2feds_2eproto

// ===================================================================

class LbEndpoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.LbEndpoint) */ {
 public:
  LbEndpoint();
  virtual ~LbEndpoint();

  LbEndpoint(const LbEndpoint& from);

  inline LbEndpoint& operator=(const LbEndpoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LbEndpoint(LbEndpoint&& from) noexcept
    : LbEndpoint() {
    *this = ::std::move(from);
  }

  inline LbEndpoint& operator=(LbEndpoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LbEndpoint& default_instance();

  static inline const LbEndpoint* internal_default_instance() {
    return reinterpret_cast<const LbEndpoint*>(
               &_LbEndpoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LbEndpoint* other);
  friend void swap(LbEndpoint& a, LbEndpoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LbEndpoint* New() const PROTOBUF_FINAL { return New(NULL); }

  LbEndpoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbEndpoint& from);
  void MergeFrom(const LbEndpoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbEndpoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .envoy.api.v2.Endpoint endpoint = 1;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 1;
  const ::envoy::api::v2::Endpoint& endpoint() const;
  ::envoy::api::v2::Endpoint* mutable_endpoint();
  ::envoy::api::v2::Endpoint* release_endpoint();
  void set_allocated_endpoint(::envoy::api::v2::Endpoint* endpoint);

  // .envoy.api.v2.Metadata metadata = 3;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::envoy::api::v2::Metadata& metadata() const;
  ::envoy::api::v2::Metadata* mutable_metadata();
  ::envoy::api::v2::Metadata* release_metadata();
  void set_allocated_metadata(::envoy::api::v2::Metadata* metadata);

  // .google.protobuf.UInt32Value load_balancing_weight = 4;
  bool has_load_balancing_weight() const;
  void clear_load_balancing_weight();
  static const int kLoadBalancingWeightFieldNumber = 4;
  const ::google::protobuf::UInt32Value& load_balancing_weight() const;
  ::google::protobuf::UInt32Value* mutable_load_balancing_weight();
  ::google::protobuf::UInt32Value* release_load_balancing_weight();
  void set_allocated_load_balancing_weight(::google::protobuf::UInt32Value* load_balancing_weight);

  // .envoy.api.v2.HealthStatus health_status = 2;
  void clear_health_status();
  static const int kHealthStatusFieldNumber = 2;
  ::envoy::api::v2::HealthStatus health_status() const;
  void set_health_status(::envoy::api::v2::HealthStatus value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.LbEndpoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::envoy::api::v2::Endpoint* endpoint_;
  ::envoy::api::v2::Metadata* metadata_;
  ::google::protobuf::UInt32Value* load_balancing_weight_;
  int health_status_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LocalityLbEndpoints : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.LocalityLbEndpoints) */ {
 public:
  LocalityLbEndpoints();
  virtual ~LocalityLbEndpoints();

  LocalityLbEndpoints(const LocalityLbEndpoints& from);

  inline LocalityLbEndpoints& operator=(const LocalityLbEndpoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalityLbEndpoints(LocalityLbEndpoints&& from) noexcept
    : LocalityLbEndpoints() {
    *this = ::std::move(from);
  }

  inline LocalityLbEndpoints& operator=(LocalityLbEndpoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalityLbEndpoints& default_instance();

  static inline const LocalityLbEndpoints* internal_default_instance() {
    return reinterpret_cast<const LocalityLbEndpoints*>(
               &_LocalityLbEndpoints_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LocalityLbEndpoints* other);
  friend void swap(LocalityLbEndpoints& a, LocalityLbEndpoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalityLbEndpoints* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalityLbEndpoints* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalityLbEndpoints& from);
  void MergeFrom(const LocalityLbEndpoints& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalityLbEndpoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
  int lb_endpoints_size() const;
  void clear_lb_endpoints();
  static const int kLbEndpointsFieldNumber = 2;
  const ::envoy::api::v2::LbEndpoint& lb_endpoints(int index) const;
  ::envoy::api::v2::LbEndpoint* mutable_lb_endpoints(int index);
  ::envoy::api::v2::LbEndpoint* add_lb_endpoints();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LbEndpoint >*
      mutable_lb_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LbEndpoint >&
      lb_endpoints() const;

  // .envoy.api.v2.Locality locality = 1;
  bool has_locality() const;
  void clear_locality();
  static const int kLocalityFieldNumber = 1;
  const ::envoy::api::v2::Locality& locality() const;
  ::envoy::api::v2::Locality* mutable_locality();
  ::envoy::api::v2::Locality* release_locality();
  void set_allocated_locality(::envoy::api::v2::Locality* locality);

  // .google.protobuf.UInt32Value load_balancing_weight = 3;
  bool has_load_balancing_weight() const;
  void clear_load_balancing_weight();
  static const int kLoadBalancingWeightFieldNumber = 3;
  const ::google::protobuf::UInt32Value& load_balancing_weight() const;
  ::google::protobuf::UInt32Value* mutable_load_balancing_weight();
  ::google::protobuf::UInt32Value* release_load_balancing_weight();
  void set_allocated_load_balancing_weight(::google::protobuf::UInt32Value* load_balancing_weight);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.LocalityLbEndpoints)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LbEndpoint > lb_endpoints_;
  ::envoy::api::v2::Locality* locality_;
  ::google::protobuf::UInt32Value* load_balancing_weight_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndpointLoadMetricStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.EndpointLoadMetricStats) */ {
 public:
  EndpointLoadMetricStats();
  virtual ~EndpointLoadMetricStats();

  EndpointLoadMetricStats(const EndpointLoadMetricStats& from);

  inline EndpointLoadMetricStats& operator=(const EndpointLoadMetricStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndpointLoadMetricStats(EndpointLoadMetricStats&& from) noexcept
    : EndpointLoadMetricStats() {
    *this = ::std::move(from);
  }

  inline EndpointLoadMetricStats& operator=(EndpointLoadMetricStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndpointLoadMetricStats& default_instance();

  static inline const EndpointLoadMetricStats* internal_default_instance() {
    return reinterpret_cast<const EndpointLoadMetricStats*>(
               &_EndpointLoadMetricStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(EndpointLoadMetricStats* other);
  friend void swap(EndpointLoadMetricStats& a, EndpointLoadMetricStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndpointLoadMetricStats* New() const PROTOBUF_FINAL { return New(NULL); }

  EndpointLoadMetricStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndpointLoadMetricStats& from);
  void MergeFrom(const EndpointLoadMetricStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndpointLoadMetricStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string metric_name = 1;
  void clear_metric_name();
  static const int kMetricNameFieldNumber = 1;
  const ::std::string& metric_name() const;
  void set_metric_name(const ::std::string& value);
  #if LANG_CXX11
  void set_metric_name(::std::string&& value);
  #endif
  void set_metric_name(const char* value);
  void set_metric_name(const char* value, size_t size);
  ::std::string* mutable_metric_name();
  ::std::string* release_metric_name();
  void set_allocated_metric_name(::std::string* metric_name);

  // uint64 num_requests_finished_with_metric = 2;
  void clear_num_requests_finished_with_metric();
  static const int kNumRequestsFinishedWithMetricFieldNumber = 2;
  ::google::protobuf::uint64 num_requests_finished_with_metric() const;
  void set_num_requests_finished_with_metric(::google::protobuf::uint64 value);

  // double total_metric_value = 3;
  void clear_total_metric_value();
  static const int kTotalMetricValueFieldNumber = 3;
  double total_metric_value() const;
  void set_total_metric_value(double value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.EndpointLoadMetricStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr metric_name_;
  ::google::protobuf::uint64 num_requests_finished_with_metric_;
  double total_metric_value_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpstreamLocalityStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.UpstreamLocalityStats) */ {
 public:
  UpstreamLocalityStats();
  virtual ~UpstreamLocalityStats();

  UpstreamLocalityStats(const UpstreamLocalityStats& from);

  inline UpstreamLocalityStats& operator=(const UpstreamLocalityStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpstreamLocalityStats(UpstreamLocalityStats&& from) noexcept
    : UpstreamLocalityStats() {
    *this = ::std::move(from);
  }

  inline UpstreamLocalityStats& operator=(UpstreamLocalityStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpstreamLocalityStats& default_instance();

  static inline const UpstreamLocalityStats* internal_default_instance() {
    return reinterpret_cast<const UpstreamLocalityStats*>(
               &_UpstreamLocalityStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UpstreamLocalityStats* other);
  friend void swap(UpstreamLocalityStats& a, UpstreamLocalityStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpstreamLocalityStats* New() const PROTOBUF_FINAL { return New(NULL); }

  UpstreamLocalityStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpstreamLocalityStats& from);
  void MergeFrom(const UpstreamLocalityStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpstreamLocalityStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 6;
  int load_metric_stats_size() const;
  void clear_load_metric_stats();
  static const int kLoadMetricStatsFieldNumber = 6;
  const ::envoy::api::v2::EndpointLoadMetricStats& load_metric_stats(int index) const;
  ::envoy::api::v2::EndpointLoadMetricStats* mutable_load_metric_stats(int index);
  ::envoy::api::v2::EndpointLoadMetricStats* add_load_metric_stats();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointLoadMetricStats >*
      mutable_load_metric_stats();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointLoadMetricStats >&
      load_metric_stats() const;

  // .envoy.api.v2.Locality locality = 1;
  bool has_locality() const;
  void clear_locality();
  static const int kLocalityFieldNumber = 1;
  const ::envoy::api::v2::Locality& locality() const;
  ::envoy::api::v2::Locality* mutable_locality();
  ::envoy::api::v2::Locality* release_locality();
  void set_allocated_locality(::envoy::api::v2::Locality* locality);

  // uint64 total_successful_requests = 2;
  void clear_total_successful_requests();
  static const int kTotalSuccessfulRequestsFieldNumber = 2;
  ::google::protobuf::uint64 total_successful_requests() const;
  void set_total_successful_requests(::google::protobuf::uint64 value);

  // uint64 total_requests_in_progress = 3;
  void clear_total_requests_in_progress();
  static const int kTotalRequestsInProgressFieldNumber = 3;
  ::google::protobuf::uint64 total_requests_in_progress() const;
  void set_total_requests_in_progress(::google::protobuf::uint64 value);

  // uint64 total_error_requests = 4;
  void clear_total_error_requests();
  static const int kTotalErrorRequestsFieldNumber = 4;
  ::google::protobuf::uint64 total_error_requests() const;
  void set_total_error_requests(::google::protobuf::uint64 value);

  // uint64 total_dropped_requests = 5;
  void clear_total_dropped_requests();
  static const int kTotalDroppedRequestsFieldNumber = 5;
  ::google::protobuf::uint64 total_dropped_requests() const;
  void set_total_dropped_requests(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.UpstreamLocalityStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointLoadMetricStats > load_metric_stats_;
  ::envoy::api::v2::Locality* locality_;
  ::google::protobuf::uint64 total_successful_requests_;
  ::google::protobuf::uint64 total_requests_in_progress_;
  ::google::protobuf::uint64 total_error_requests_;
  ::google::protobuf::uint64 total_dropped_requests_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.ClusterStats) */ {
 public:
  ClusterStats();
  virtual ~ClusterStats();

  ClusterStats(const ClusterStats& from);

  inline ClusterStats& operator=(const ClusterStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClusterStats(ClusterStats&& from) noexcept
    : ClusterStats() {
    *this = ::std::move(from);
  }

  inline ClusterStats& operator=(ClusterStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterStats& default_instance();

  static inline const ClusterStats* internal_default_instance() {
    return reinterpret_cast<const ClusterStats*>(
               &_ClusterStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ClusterStats* other);
  friend void swap(ClusterStats& a, ClusterStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterStats* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterStats& from);
  void MergeFrom(const ClusterStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
  int upstream_locality_stats_size() const;
  void clear_upstream_locality_stats();
  static const int kUpstreamLocalityStatsFieldNumber = 2;
  const ::envoy::api::v2::UpstreamLocalityStats& upstream_locality_stats(int index) const;
  ::envoy::api::v2::UpstreamLocalityStats* mutable_upstream_locality_stats(int index);
  ::envoy::api::v2::UpstreamLocalityStats* add_upstream_locality_stats();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::UpstreamLocalityStats >*
      mutable_upstream_locality_stats();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::UpstreamLocalityStats >&
      upstream_locality_stats() const;

  // string cluster_name = 1;
  void clear_cluster_name();
  static const int kClusterNameFieldNumber = 1;
  const ::std::string& cluster_name() const;
  void set_cluster_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_name(::std::string&& value);
  #endif
  void set_cluster_name(const char* value);
  void set_cluster_name(const char* value, size_t size);
  ::std::string* mutable_cluster_name();
  ::std::string* release_cluster_name();
  void set_allocated_cluster_name(::std::string* cluster_name);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::UpstreamLocalityStats > upstream_locality_stats_;
  ::google::protobuf::internal::ArenaStringPtr cluster_name_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoadStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.LoadStatsRequest) */ {
 public:
  LoadStatsRequest();
  virtual ~LoadStatsRequest();

  LoadStatsRequest(const LoadStatsRequest& from);

  inline LoadStatsRequest& operator=(const LoadStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadStatsRequest(LoadStatsRequest&& from) noexcept
    : LoadStatsRequest() {
    *this = ::std::move(from);
  }

  inline LoadStatsRequest& operator=(LoadStatsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadStatsRequest& default_instance();

  static inline const LoadStatsRequest* internal_default_instance() {
    return reinterpret_cast<const LoadStatsRequest*>(
               &_LoadStatsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(LoadStatsRequest* other);
  friend void swap(LoadStatsRequest& a, LoadStatsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadStatsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LoadStatsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoadStatsRequest& from);
  void MergeFrom(const LoadStatsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.ClusterStats cluster_stats = 2;
  int cluster_stats_size() const;
  void clear_cluster_stats();
  static const int kClusterStatsFieldNumber = 2;
  const ::envoy::api::v2::ClusterStats& cluster_stats(int index) const;
  ::envoy::api::v2::ClusterStats* mutable_cluster_stats(int index);
  ::envoy::api::v2::ClusterStats* add_cluster_stats();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterStats >*
      mutable_cluster_stats();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterStats >&
      cluster_stats() const;

  // .envoy.api.v2.Node node = 1;
  bool has_node() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  const ::envoy::api::v2::Node& node() const;
  ::envoy::api::v2::Node* mutable_node();
  ::envoy::api::v2::Node* release_node();
  void set_allocated_node(::envoy::api::v2::Node* node);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.LoadStatsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterStats > cluster_stats_;
  ::envoy::api::v2::Node* node_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterLoadAssignment_Policy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.ClusterLoadAssignment.Policy) */ {
 public:
  ClusterLoadAssignment_Policy();
  virtual ~ClusterLoadAssignment_Policy();

  ClusterLoadAssignment_Policy(const ClusterLoadAssignment_Policy& from);

  inline ClusterLoadAssignment_Policy& operator=(const ClusterLoadAssignment_Policy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClusterLoadAssignment_Policy(ClusterLoadAssignment_Policy&& from) noexcept
    : ClusterLoadAssignment_Policy() {
    *this = ::std::move(from);
  }

  inline ClusterLoadAssignment_Policy& operator=(ClusterLoadAssignment_Policy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterLoadAssignment_Policy& default_instance();

  static inline const ClusterLoadAssignment_Policy* internal_default_instance() {
    return reinterpret_cast<const ClusterLoadAssignment_Policy*>(
               &_ClusterLoadAssignment_Policy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ClusterLoadAssignment_Policy* other);
  friend void swap(ClusterLoadAssignment_Policy& a, ClusterLoadAssignment_Policy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterLoadAssignment_Policy* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterLoadAssignment_Policy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterLoadAssignment_Policy& from);
  void MergeFrom(const ClusterLoadAssignment_Policy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterLoadAssignment_Policy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double drop_overload = 1;
  void clear_drop_overload();
  static const int kDropOverloadFieldNumber = 1;
  double drop_overload() const;
  void set_drop_overload(double value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterLoadAssignment.Policy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double drop_overload_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterLoadAssignment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.ClusterLoadAssignment) */ {
 public:
  ClusterLoadAssignment();
  virtual ~ClusterLoadAssignment();

  ClusterLoadAssignment(const ClusterLoadAssignment& from);

  inline ClusterLoadAssignment& operator=(const ClusterLoadAssignment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClusterLoadAssignment(ClusterLoadAssignment&& from) noexcept
    : ClusterLoadAssignment() {
    *this = ::std::move(from);
  }

  inline ClusterLoadAssignment& operator=(ClusterLoadAssignment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterLoadAssignment& default_instance();

  static inline const ClusterLoadAssignment* internal_default_instance() {
    return reinterpret_cast<const ClusterLoadAssignment*>(
               &_ClusterLoadAssignment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ClusterLoadAssignment* other);
  friend void swap(ClusterLoadAssignment& a, ClusterLoadAssignment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterLoadAssignment* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterLoadAssignment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterLoadAssignment& from);
  void MergeFrom(const ClusterLoadAssignment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterLoadAssignment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClusterLoadAssignment_Policy Policy;

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
  int endpoints_size() const;
  void clear_endpoints();
  static const int kEndpointsFieldNumber = 2;
  const ::envoy::api::v2::LocalityLbEndpoints& endpoints(int index) const;
  ::envoy::api::v2::LocalityLbEndpoints* mutable_endpoints(int index);
  ::envoy::api::v2::LocalityLbEndpoints* add_endpoints();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >*
      mutable_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >&
      endpoints() const;

  // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
  int failover_endpoints_size() const;
  void clear_failover_endpoints();
  static const int kFailoverEndpointsFieldNumber = 3;
  const ::envoy::api::v2::LocalityLbEndpoints& failover_endpoints(int index) const;
  ::envoy::api::v2::LocalityLbEndpoints* mutable_failover_endpoints(int index);
  ::envoy::api::v2::LocalityLbEndpoints* add_failover_endpoints();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >*
      mutable_failover_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >&
      failover_endpoints() const;

  // string cluster_name = 1;
  void clear_cluster_name();
  static const int kClusterNameFieldNumber = 1;
  const ::std::string& cluster_name() const;
  void set_cluster_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_name(::std::string&& value);
  #endif
  void set_cluster_name(const char* value);
  void set_cluster_name(const char* value, size_t size);
  ::std::string* mutable_cluster_name();
  ::std::string* release_cluster_name();
  void set_allocated_cluster_name(::std::string* cluster_name);

  // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
  bool has_policy() const;
  void clear_policy();
  static const int kPolicyFieldNumber = 4;
  const ::envoy::api::v2::ClusterLoadAssignment_Policy& policy() const;
  ::envoy::api::v2::ClusterLoadAssignment_Policy* mutable_policy();
  ::envoy::api::v2::ClusterLoadAssignment_Policy* release_policy();
  void set_allocated_policy(::envoy::api::v2::ClusterLoadAssignment_Policy* policy);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterLoadAssignment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints > endpoints_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints > failover_endpoints_;
  ::google::protobuf::internal::ArenaStringPtr cluster_name_;
  ::envoy::api::v2::ClusterLoadAssignment_Policy* policy_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoadStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.LoadStatsResponse) */ {
 public:
  LoadStatsResponse();
  virtual ~LoadStatsResponse();

  LoadStatsResponse(const LoadStatsResponse& from);

  inline LoadStatsResponse& operator=(const LoadStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadStatsResponse(LoadStatsResponse&& from) noexcept
    : LoadStatsResponse() {
    *this = ::std::move(from);
  }

  inline LoadStatsResponse& operator=(LoadStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadStatsResponse& default_instance();

  static inline const LoadStatsResponse* internal_default_instance() {
    return reinterpret_cast<const LoadStatsResponse*>(
               &_LoadStatsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(LoadStatsResponse* other);
  friend void swap(LoadStatsResponse& a, LoadStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadStatsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LoadStatsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoadStatsResponse& from);
  void MergeFrom(const LoadStatsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string clusters = 1;
  int clusters_size() const;
  void clear_clusters();
  static const int kClustersFieldNumber = 1;
  const ::std::string& clusters(int index) const;
  ::std::string* mutable_clusters(int index);
  void set_clusters(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_clusters(int index, ::std::string&& value);
  #endif
  void set_clusters(int index, const char* value);
  void set_clusters(int index, const char* value, size_t size);
  ::std::string* add_clusters();
  void add_clusters(const ::std::string& value);
  #if LANG_CXX11
  void add_clusters(::std::string&& value);
  #endif
  void add_clusters(const char* value);
  void add_clusters(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& clusters() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_clusters();

  // .google.protobuf.Duration load_reporting_interval = 2;
  bool has_load_reporting_interval() const;
  void clear_load_reporting_interval();
  static const int kLoadReportingIntervalFieldNumber = 2;
  const ::google::protobuf::Duration& load_reporting_interval() const;
  ::google::protobuf::Duration* mutable_load_reporting_interval();
  ::google::protobuf::Duration* release_load_reporting_interval();
  void set_allocated_load_reporting_interval(::google::protobuf::Duration* load_reporting_interval);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.LoadStatsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> clusters_;
  ::google::protobuf::Duration* load_reporting_interval_;
  mutable int _cached_size_;
  friend struct protobuf_api_2feds_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LbEndpoint

// .envoy.api.v2.Endpoint endpoint = 1;
inline bool LbEndpoint::has_endpoint() const {
  return this != internal_default_instance() && endpoint_ != NULL;
}
inline void LbEndpoint::clear_endpoint() {
  if (GetArenaNoVirtual() == NULL && endpoint_ != NULL) delete endpoint_;
  endpoint_ = NULL;
}
inline const ::envoy::api::v2::Endpoint& LbEndpoint::endpoint() const {
  const ::envoy::api::v2::Endpoint* p = endpoint_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.LbEndpoint.endpoint)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Endpoint*>(
      &::envoy::api::v2::_Endpoint_default_instance_);
}
inline ::envoy::api::v2::Endpoint* LbEndpoint::mutable_endpoint() {
  
  if (endpoint_ == NULL) {
    endpoint_ = new ::envoy::api::v2::Endpoint;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LbEndpoint.endpoint)
  return endpoint_;
}
inline ::envoy::api::v2::Endpoint* LbEndpoint::release_endpoint() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LbEndpoint.endpoint)
  
  ::envoy::api::v2::Endpoint* temp = endpoint_;
  endpoint_ = NULL;
  return temp;
}
inline void LbEndpoint::set_allocated_endpoint(::envoy::api::v2::Endpoint* endpoint) {
  delete endpoint_;
  endpoint_ = endpoint;
  if (endpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LbEndpoint.endpoint)
}

// .envoy.api.v2.HealthStatus health_status = 2;
inline void LbEndpoint::clear_health_status() {
  health_status_ = 0;
}
inline ::envoy::api::v2::HealthStatus LbEndpoint::health_status() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LbEndpoint.health_status)
  return static_cast< ::envoy::api::v2::HealthStatus >(health_status_);
}
inline void LbEndpoint::set_health_status(::envoy::api::v2::HealthStatus value) {
  
  health_status_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.LbEndpoint.health_status)
}

// .envoy.api.v2.Metadata metadata = 3;
inline bool LbEndpoint::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
inline void LbEndpoint::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) delete metadata_;
  metadata_ = NULL;
}
inline const ::envoy::api::v2::Metadata& LbEndpoint::metadata() const {
  const ::envoy::api::v2::Metadata* p = metadata_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.LbEndpoint.metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Metadata*>(
      &::envoy::api::v2::_Metadata_default_instance_);
}
inline ::envoy::api::v2::Metadata* LbEndpoint::mutable_metadata() {
  
  if (metadata_ == NULL) {
    metadata_ = new ::envoy::api::v2::Metadata;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LbEndpoint.metadata)
  return metadata_;
}
inline ::envoy::api::v2::Metadata* LbEndpoint::release_metadata() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LbEndpoint.metadata)
  
  ::envoy::api::v2::Metadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void LbEndpoint::set_allocated_metadata(::envoy::api::v2::Metadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LbEndpoint.metadata)
}

// .google.protobuf.UInt32Value load_balancing_weight = 4;
inline bool LbEndpoint::has_load_balancing_weight() const {
  return this != internal_default_instance() && load_balancing_weight_ != NULL;
}
inline void LbEndpoint::clear_load_balancing_weight() {
  if (GetArenaNoVirtual() == NULL && load_balancing_weight_ != NULL) delete load_balancing_weight_;
  load_balancing_weight_ = NULL;
}
inline const ::google::protobuf::UInt32Value& LbEndpoint::load_balancing_weight() const {
  const ::google::protobuf::UInt32Value* p = load_balancing_weight_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.LbEndpoint.load_balancing_weight)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::UInt32Value*>(
      &::google::protobuf::_UInt32Value_default_instance_);
}
inline ::google::protobuf::UInt32Value* LbEndpoint::mutable_load_balancing_weight() {
  
  if (load_balancing_weight_ == NULL) {
    load_balancing_weight_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LbEndpoint.load_balancing_weight)
  return load_balancing_weight_;
}
inline ::google::protobuf::UInt32Value* LbEndpoint::release_load_balancing_weight() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LbEndpoint.load_balancing_weight)
  
  ::google::protobuf::UInt32Value* temp = load_balancing_weight_;
  load_balancing_weight_ = NULL;
  return temp;
}
inline void LbEndpoint::set_allocated_load_balancing_weight(::google::protobuf::UInt32Value* load_balancing_weight) {
  delete load_balancing_weight_;
  if (load_balancing_weight != NULL && load_balancing_weight->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_load_balancing_weight = new ::google::protobuf::UInt32Value;
    new_load_balancing_weight->CopyFrom(*load_balancing_weight);
    load_balancing_weight = new_load_balancing_weight;
  }
  load_balancing_weight_ = load_balancing_weight;
  if (load_balancing_weight) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LbEndpoint.load_balancing_weight)
}

// -------------------------------------------------------------------

// LocalityLbEndpoints

// .envoy.api.v2.Locality locality = 1;
inline bool LocalityLbEndpoints::has_locality() const {
  return this != internal_default_instance() && locality_ != NULL;
}
inline void LocalityLbEndpoints::clear_locality() {
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) delete locality_;
  locality_ = NULL;
}
inline const ::envoy::api::v2::Locality& LocalityLbEndpoints::locality() const {
  const ::envoy::api::v2::Locality* p = locality_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.LocalityLbEndpoints.locality)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Locality*>(
      &::envoy::api::v2::_Locality_default_instance_);
}
inline ::envoy::api::v2::Locality* LocalityLbEndpoints::mutable_locality() {
  
  if (locality_ == NULL) {
    locality_ = new ::envoy::api::v2::Locality;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LocalityLbEndpoints.locality)
  return locality_;
}
inline ::envoy::api::v2::Locality* LocalityLbEndpoints::release_locality() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LocalityLbEndpoints.locality)
  
  ::envoy::api::v2::Locality* temp = locality_;
  locality_ = NULL;
  return temp;
}
inline void LocalityLbEndpoints::set_allocated_locality(::envoy::api::v2::Locality* locality) {
  delete locality_;
  locality_ = locality;
  if (locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LocalityLbEndpoints.locality)
}

// repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
inline int LocalityLbEndpoints::lb_endpoints_size() const {
  return lb_endpoints_.size();
}
inline void LocalityLbEndpoints::clear_lb_endpoints() {
  lb_endpoints_.Clear();
}
inline const ::envoy::api::v2::LbEndpoint& LocalityLbEndpoints::lb_endpoints(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return lb_endpoints_.Get(index);
}
inline ::envoy::api::v2::LbEndpoint* LocalityLbEndpoints::mutable_lb_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return lb_endpoints_.Mutable(index);
}
inline ::envoy::api::v2::LbEndpoint* LocalityLbEndpoints::add_lb_endpoints() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return lb_endpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LbEndpoint >*
LocalityLbEndpoints::mutable_lb_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return &lb_endpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LbEndpoint >&
LocalityLbEndpoints::lb_endpoints() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return lb_endpoints_;
}

// .google.protobuf.UInt32Value load_balancing_weight = 3;
inline bool LocalityLbEndpoints::has_load_balancing_weight() const {
  return this != internal_default_instance() && load_balancing_weight_ != NULL;
}
inline void LocalityLbEndpoints::clear_load_balancing_weight() {
  if (GetArenaNoVirtual() == NULL && load_balancing_weight_ != NULL) delete load_balancing_weight_;
  load_balancing_weight_ = NULL;
}
inline const ::google::protobuf::UInt32Value& LocalityLbEndpoints::load_balancing_weight() const {
  const ::google::protobuf::UInt32Value* p = load_balancing_weight_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.LocalityLbEndpoints.load_balancing_weight)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::UInt32Value*>(
      &::google::protobuf::_UInt32Value_default_instance_);
}
inline ::google::protobuf::UInt32Value* LocalityLbEndpoints::mutable_load_balancing_weight() {
  
  if (load_balancing_weight_ == NULL) {
    load_balancing_weight_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LocalityLbEndpoints.load_balancing_weight)
  return load_balancing_weight_;
}
inline ::google::protobuf::UInt32Value* LocalityLbEndpoints::release_load_balancing_weight() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LocalityLbEndpoints.load_balancing_weight)
  
  ::google::protobuf::UInt32Value* temp = load_balancing_weight_;
  load_balancing_weight_ = NULL;
  return temp;
}
inline void LocalityLbEndpoints::set_allocated_load_balancing_weight(::google::protobuf::UInt32Value* load_balancing_weight) {
  delete load_balancing_weight_;
  if (load_balancing_weight != NULL && load_balancing_weight->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_load_balancing_weight = new ::google::protobuf::UInt32Value;
    new_load_balancing_weight->CopyFrom(*load_balancing_weight);
    load_balancing_weight = new_load_balancing_weight;
  }
  load_balancing_weight_ = load_balancing_weight;
  if (load_balancing_weight) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LocalityLbEndpoints.load_balancing_weight)
}

// -------------------------------------------------------------------

// EndpointLoadMetricStats

// string metric_name = 1;
inline void EndpointLoadMetricStats::clear_metric_name() {
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EndpointLoadMetricStats::metric_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointLoadMetricStats.metric_name)
  return metric_name_.GetNoArena();
}
inline void EndpointLoadMetricStats::set_metric_name(const ::std::string& value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}
#if LANG_CXX11
inline void EndpointLoadMetricStats::set_metric_name(::std::string&& value) {
  
  metric_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}
#endif
inline void EndpointLoadMetricStats::set_metric_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}
inline void EndpointLoadMetricStats::set_metric_name(const char* value, size_t size) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}
inline ::std::string* EndpointLoadMetricStats::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EndpointLoadMetricStats.metric_name)
  return metric_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndpointLoadMetricStats::release_metric_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EndpointLoadMetricStats.metric_name)
  
  return metric_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndpointLoadMetricStats::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}

// uint64 num_requests_finished_with_metric = 2;
inline void EndpointLoadMetricStats::clear_num_requests_finished_with_metric() {
  num_requests_finished_with_metric_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EndpointLoadMetricStats::num_requests_finished_with_metric() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointLoadMetricStats.num_requests_finished_with_metric)
  return num_requests_finished_with_metric_;
}
inline void EndpointLoadMetricStats::set_num_requests_finished_with_metric(::google::protobuf::uint64 value) {
  
  num_requests_finished_with_metric_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EndpointLoadMetricStats.num_requests_finished_with_metric)
}

// double total_metric_value = 3;
inline void EndpointLoadMetricStats::clear_total_metric_value() {
  total_metric_value_ = 0;
}
inline double EndpointLoadMetricStats::total_metric_value() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointLoadMetricStats.total_metric_value)
  return total_metric_value_;
}
inline void EndpointLoadMetricStats::set_total_metric_value(double value) {
  
  total_metric_value_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EndpointLoadMetricStats.total_metric_value)
}

// -------------------------------------------------------------------

// UpstreamLocalityStats

// .envoy.api.v2.Locality locality = 1;
inline bool UpstreamLocalityStats::has_locality() const {
  return this != internal_default_instance() && locality_ != NULL;
}
inline void UpstreamLocalityStats::clear_locality() {
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) delete locality_;
  locality_ = NULL;
}
inline const ::envoy::api::v2::Locality& UpstreamLocalityStats::locality() const {
  const ::envoy::api::v2::Locality* p = locality_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.locality)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Locality*>(
      &::envoy::api::v2::_Locality_default_instance_);
}
inline ::envoy::api::v2::Locality* UpstreamLocalityStats::mutable_locality() {
  
  if (locality_ == NULL) {
    locality_ = new ::envoy::api::v2::Locality;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.UpstreamLocalityStats.locality)
  return locality_;
}
inline ::envoy::api::v2::Locality* UpstreamLocalityStats::release_locality() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.UpstreamLocalityStats.locality)
  
  ::envoy::api::v2::Locality* temp = locality_;
  locality_ = NULL;
  return temp;
}
inline void UpstreamLocalityStats::set_allocated_locality(::envoy::api::v2::Locality* locality) {
  delete locality_;
  locality_ = locality;
  if (locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.UpstreamLocalityStats.locality)
}

// uint64 total_successful_requests = 2;
inline void UpstreamLocalityStats::clear_total_successful_requests() {
  total_successful_requests_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpstreamLocalityStats::total_successful_requests() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.total_successful_requests)
  return total_successful_requests_;
}
inline void UpstreamLocalityStats::set_total_successful_requests(::google::protobuf::uint64 value) {
  
  total_successful_requests_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.UpstreamLocalityStats.total_successful_requests)
}

// uint64 total_requests_in_progress = 3;
inline void UpstreamLocalityStats::clear_total_requests_in_progress() {
  total_requests_in_progress_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpstreamLocalityStats::total_requests_in_progress() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.total_requests_in_progress)
  return total_requests_in_progress_;
}
inline void UpstreamLocalityStats::set_total_requests_in_progress(::google::protobuf::uint64 value) {
  
  total_requests_in_progress_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.UpstreamLocalityStats.total_requests_in_progress)
}

// uint64 total_error_requests = 4;
inline void UpstreamLocalityStats::clear_total_error_requests() {
  total_error_requests_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpstreamLocalityStats::total_error_requests() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.total_error_requests)
  return total_error_requests_;
}
inline void UpstreamLocalityStats::set_total_error_requests(::google::protobuf::uint64 value) {
  
  total_error_requests_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.UpstreamLocalityStats.total_error_requests)
}

// uint64 total_dropped_requests = 5;
inline void UpstreamLocalityStats::clear_total_dropped_requests() {
  total_dropped_requests_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpstreamLocalityStats::total_dropped_requests() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.total_dropped_requests)
  return total_dropped_requests_;
}
inline void UpstreamLocalityStats::set_total_dropped_requests(::google::protobuf::uint64 value) {
  
  total_dropped_requests_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.UpstreamLocalityStats.total_dropped_requests)
}

// repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 6;
inline int UpstreamLocalityStats::load_metric_stats_size() const {
  return load_metric_stats_.size();
}
inline void UpstreamLocalityStats::clear_load_metric_stats() {
  load_metric_stats_.Clear();
}
inline const ::envoy::api::v2::EndpointLoadMetricStats& UpstreamLocalityStats::load_metric_stats(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return load_metric_stats_.Get(index);
}
inline ::envoy::api::v2::EndpointLoadMetricStats* UpstreamLocalityStats::mutable_load_metric_stats(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return load_metric_stats_.Mutable(index);
}
inline ::envoy::api::v2::EndpointLoadMetricStats* UpstreamLocalityStats::add_load_metric_stats() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return load_metric_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointLoadMetricStats >*
UpstreamLocalityStats::mutable_load_metric_stats() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return &load_metric_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointLoadMetricStats >&
UpstreamLocalityStats::load_metric_stats() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return load_metric_stats_;
}

// -------------------------------------------------------------------

// ClusterStats

// string cluster_name = 1;
inline void ClusterStats::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterStats::cluster_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterStats.cluster_name)
  return cluster_name_.GetNoArena();
}
inline void ClusterStats::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterStats.cluster_name)
}
#if LANG_CXX11
inline void ClusterStats::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ClusterStats.cluster_name)
}
#endif
inline void ClusterStats::set_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ClusterStats.cluster_name)
}
inline void ClusterStats::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ClusterStats.cluster_name)
}
inline ::std::string* ClusterStats::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterStats.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterStats::release_cluster_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterStats.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterStats::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterStats.cluster_name)
}

// repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
inline int ClusterStats::upstream_locality_stats_size() const {
  return upstream_locality_stats_.size();
}
inline void ClusterStats::clear_upstream_locality_stats() {
  upstream_locality_stats_.Clear();
}
inline const ::envoy::api::v2::UpstreamLocalityStats& ClusterStats::upstream_locality_stats(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return upstream_locality_stats_.Get(index);
}
inline ::envoy::api::v2::UpstreamLocalityStats* ClusterStats::mutable_upstream_locality_stats(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return upstream_locality_stats_.Mutable(index);
}
inline ::envoy::api::v2::UpstreamLocalityStats* ClusterStats::add_upstream_locality_stats() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return upstream_locality_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::UpstreamLocalityStats >*
ClusterStats::mutable_upstream_locality_stats() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return &upstream_locality_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::UpstreamLocalityStats >&
ClusterStats::upstream_locality_stats() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return upstream_locality_stats_;
}

// -------------------------------------------------------------------

// LoadStatsRequest

// .envoy.api.v2.Node node = 1;
inline bool LoadStatsRequest::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
inline void LoadStatsRequest::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
inline const ::envoy::api::v2::Node& LoadStatsRequest::node() const {
  const ::envoy::api::v2::Node* p = node_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadStatsRequest.node)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Node*>(
      &::envoy::api::v2::_Node_default_instance_);
}
inline ::envoy::api::v2::Node* LoadStatsRequest::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::envoy::api::v2::Node;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadStatsRequest.node)
  return node_;
}
inline ::envoy::api::v2::Node* LoadStatsRequest::release_node() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LoadStatsRequest.node)
  
  ::envoy::api::v2::Node* temp = node_;
  node_ = NULL;
  return temp;
}
inline void LoadStatsRequest::set_allocated_node(::envoy::api::v2::Node* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LoadStatsRequest.node)
}

// repeated .envoy.api.v2.ClusterStats cluster_stats = 2;
inline int LoadStatsRequest::cluster_stats_size() const {
  return cluster_stats_.size();
}
inline void LoadStatsRequest::clear_cluster_stats() {
  cluster_stats_.Clear();
}
inline const ::envoy::api::v2::ClusterStats& LoadStatsRequest::cluster_stats(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadStatsRequest.cluster_stats)
  return cluster_stats_.Get(index);
}
inline ::envoy::api::v2::ClusterStats* LoadStatsRequest::mutable_cluster_stats(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadStatsRequest.cluster_stats)
  return cluster_stats_.Mutable(index);
}
inline ::envoy::api::v2::ClusterStats* LoadStatsRequest::add_cluster_stats() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.LoadStatsRequest.cluster_stats)
  return cluster_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterStats >*
LoadStatsRequest::mutable_cluster_stats() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.LoadStatsRequest.cluster_stats)
  return &cluster_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterStats >&
LoadStatsRequest::cluster_stats() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.LoadStatsRequest.cluster_stats)
  return cluster_stats_;
}

// -------------------------------------------------------------------

// ClusterLoadAssignment_Policy

// double drop_overload = 1;
inline void ClusterLoadAssignment_Policy::clear_drop_overload() {
  drop_overload_ = 0;
}
inline double ClusterLoadAssignment_Policy::drop_overload() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.Policy.drop_overload)
  return drop_overload_;
}
inline void ClusterLoadAssignment_Policy::set_drop_overload(double value) {
  
  drop_overload_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterLoadAssignment.Policy.drop_overload)
}

// -------------------------------------------------------------------

// ClusterLoadAssignment

// string cluster_name = 1;
inline void ClusterLoadAssignment::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterLoadAssignment::cluster_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.cluster_name)
  return cluster_name_.GetNoArena();
}
inline void ClusterLoadAssignment::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}
#if LANG_CXX11
inline void ClusterLoadAssignment::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}
#endif
inline void ClusterLoadAssignment::set_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}
inline void ClusterLoadAssignment::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}
inline ::std::string* ClusterLoadAssignment::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterLoadAssignment.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterLoadAssignment::release_cluster_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterLoadAssignment.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterLoadAssignment::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}

// repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
inline int ClusterLoadAssignment::endpoints_size() const {
  return endpoints_.size();
}
inline void ClusterLoadAssignment::clear_endpoints() {
  endpoints_.Clear();
}
inline const ::envoy::api::v2::LocalityLbEndpoints& ClusterLoadAssignment::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return endpoints_.Get(index);
}
inline ::envoy::api::v2::LocalityLbEndpoints* ClusterLoadAssignment::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return endpoints_.Mutable(index);
}
inline ::envoy::api::v2::LocalityLbEndpoints* ClusterLoadAssignment::add_endpoints() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return endpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >*
ClusterLoadAssignment::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return &endpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >&
ClusterLoadAssignment::endpoints() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return endpoints_;
}

// repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
inline int ClusterLoadAssignment::failover_endpoints_size() const {
  return failover_endpoints_.size();
}
inline void ClusterLoadAssignment::clear_failover_endpoints() {
  failover_endpoints_.Clear();
}
inline const ::envoy::api::v2::LocalityLbEndpoints& ClusterLoadAssignment::failover_endpoints(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return failover_endpoints_.Get(index);
}
inline ::envoy::api::v2::LocalityLbEndpoints* ClusterLoadAssignment::mutable_failover_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return failover_endpoints_.Mutable(index);
}
inline ::envoy::api::v2::LocalityLbEndpoints* ClusterLoadAssignment::add_failover_endpoints() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return failover_endpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >*
ClusterLoadAssignment::mutable_failover_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return &failover_endpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >&
ClusterLoadAssignment::failover_endpoints() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return failover_endpoints_;
}

// .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
inline bool ClusterLoadAssignment::has_policy() const {
  return this != internal_default_instance() && policy_ != NULL;
}
inline void ClusterLoadAssignment::clear_policy() {
  if (GetArenaNoVirtual() == NULL && policy_ != NULL) delete policy_;
  policy_ = NULL;
}
inline const ::envoy::api::v2::ClusterLoadAssignment_Policy& ClusterLoadAssignment::policy() const {
  const ::envoy::api::v2::ClusterLoadAssignment_Policy* p = policy_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.policy)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::ClusterLoadAssignment_Policy*>(
      &::envoy::api::v2::_ClusterLoadAssignment_Policy_default_instance_);
}
inline ::envoy::api::v2::ClusterLoadAssignment_Policy* ClusterLoadAssignment::mutable_policy() {
  
  if (policy_ == NULL) {
    policy_ = new ::envoy::api::v2::ClusterLoadAssignment_Policy;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterLoadAssignment.policy)
  return policy_;
}
inline ::envoy::api::v2::ClusterLoadAssignment_Policy* ClusterLoadAssignment::release_policy() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterLoadAssignment.policy)
  
  ::envoy::api::v2::ClusterLoadAssignment_Policy* temp = policy_;
  policy_ = NULL;
  return temp;
}
inline void ClusterLoadAssignment::set_allocated_policy(::envoy::api::v2::ClusterLoadAssignment_Policy* policy) {
  delete policy_;
  policy_ = policy;
  if (policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterLoadAssignment.policy)
}

// -------------------------------------------------------------------

// LoadStatsResponse

// repeated string clusters = 1;
inline int LoadStatsResponse::clusters_size() const {
  return clusters_.size();
}
inline void LoadStatsResponse::clear_clusters() {
  clusters_.Clear();
}
inline const ::std::string& LoadStatsResponse::clusters(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadStatsResponse.clusters)
  return clusters_.Get(index);
}
inline ::std::string* LoadStatsResponse::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadStatsResponse.clusters)
  return clusters_.Mutable(index);
}
inline void LoadStatsResponse::set_clusters(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.LoadStatsResponse.clusters)
  clusters_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void LoadStatsResponse::set_clusters(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.LoadStatsResponse.clusters)
  clusters_.Mutable(index)->assign(std::move(value));
}
#endif
inline void LoadStatsResponse::set_clusters(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  clusters_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.LoadStatsResponse.clusters)
}
inline void LoadStatsResponse::set_clusters(int index, const char* value, size_t size) {
  clusters_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.LoadStatsResponse.clusters)
}
inline ::std::string* LoadStatsResponse::add_clusters() {
  // @@protoc_insertion_point(field_add_mutable:envoy.api.v2.LoadStatsResponse.clusters)
  return clusters_.Add();
}
inline void LoadStatsResponse::add_clusters(const ::std::string& value) {
  clusters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:envoy.api.v2.LoadStatsResponse.clusters)
}
#if LANG_CXX11
inline void LoadStatsResponse::add_clusters(::std::string&& value) {
  clusters_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:envoy.api.v2.LoadStatsResponse.clusters)
}
#endif
inline void LoadStatsResponse::add_clusters(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  clusters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:envoy.api.v2.LoadStatsResponse.clusters)
}
inline void LoadStatsResponse::add_clusters(const char* value, size_t size) {
  clusters_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:envoy.api.v2.LoadStatsResponse.clusters)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LoadStatsResponse::clusters() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.LoadStatsResponse.clusters)
  return clusters_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LoadStatsResponse::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.LoadStatsResponse.clusters)
  return &clusters_;
}

// .google.protobuf.Duration load_reporting_interval = 2;
inline bool LoadStatsResponse::has_load_reporting_interval() const {
  return this != internal_default_instance() && load_reporting_interval_ != NULL;
}
inline void LoadStatsResponse::clear_load_reporting_interval() {
  if (GetArenaNoVirtual() == NULL && load_reporting_interval_ != NULL) delete load_reporting_interval_;
  load_reporting_interval_ = NULL;
}
inline const ::google::protobuf::Duration& LoadStatsResponse::load_reporting_interval() const {
  const ::google::protobuf::Duration* p = load_reporting_interval_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadStatsResponse.load_reporting_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* LoadStatsResponse::mutable_load_reporting_interval() {
  
  if (load_reporting_interval_ == NULL) {
    load_reporting_interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadStatsResponse.load_reporting_interval)
  return load_reporting_interval_;
}
inline ::google::protobuf::Duration* LoadStatsResponse::release_load_reporting_interval() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LoadStatsResponse.load_reporting_interval)
  
  ::google::protobuf::Duration* temp = load_reporting_interval_;
  load_reporting_interval_ = NULL;
  return temp;
}
inline void LoadStatsResponse::set_allocated_load_reporting_interval(::google::protobuf::Duration* load_reporting_interval) {
  delete load_reporting_interval_;
  if (load_reporting_interval != NULL && load_reporting_interval->GetArena() != NULL) {
    ::google::protobuf::Duration* new_load_reporting_interval = new ::google::protobuf::Duration;
    new_load_reporting_interval->CopyFrom(*load_reporting_interval);
    load_reporting_interval = new_load_reporting_interval;
  }
  load_reporting_interval_ = load_reporting_interval;
  if (load_reporting_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LoadStatsResponse.load_reporting_interval)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2feds_2eproto__INCLUDED
