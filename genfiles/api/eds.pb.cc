// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/eds.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/eds.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace envoy {
namespace api {
namespace v2 {
class LbEndpointDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbEndpoint> {
} _LbEndpoint_default_instance_;
class LocalityLbEndpointsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LocalityLbEndpoints> {
} _LocalityLbEndpoints_default_instance_;
class EndpointLoadMetricStatsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EndpointLoadMetricStats> {
} _EndpointLoadMetricStats_default_instance_;
class UpstreamLocalityStatsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpstreamLocalityStats> {
} _UpstreamLocalityStats_default_instance_;
class ClusterStatsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClusterStats> {
} _ClusterStats_default_instance_;
class LoadAssignmentRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoadAssignmentRequest> {
} _LoadAssignmentRequest_default_instance_;
class ClusterLoadAssignment_PolicyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClusterLoadAssignment_Policy> {
} _ClusterLoadAssignment_Policy_default_instance_;
class ClusterLoadAssignmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClusterLoadAssignment> {
} _ClusterLoadAssignment_default_instance_;
class LoadAssignmentResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoadAssignmentResponse> {
} _LoadAssignmentResponse_default_instance_;

namespace protobuf_api_2feds_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbEndpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbEndpoint, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbEndpoint, health_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbEndpoint, canary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbEndpoint, load_balancing_weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalityLbEndpoints, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalityLbEndpoints, locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalityLbEndpoints, lb_endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalityLbEndpoints, load_balancing_weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndpointLoadMetricStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndpointLoadMetricStats, metric_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndpointLoadMetricStats, num_requests_finished_with_metric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndpointLoadMetricStats, total_metric_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, total_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, total_requests_in_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, tcp_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, http_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, grpc_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, dropped_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpstreamLocalityStats, load_metric_stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterStats, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterStats, upstream_locality_stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadAssignmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadAssignmentRequest, version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadAssignmentRequest, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadAssignmentRequest, cluster_stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterLoadAssignment_Policy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterLoadAssignment_Policy, drop_overload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterLoadAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterLoadAssignment, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterLoadAssignment, endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterLoadAssignment, failover_endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterLoadAssignment, policy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadAssignmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadAssignmentResponse, version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadAssignmentResponse, clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadAssignmentResponse, load_reporting_interval_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(LbEndpoint)},
  { 8, -1, sizeof(LocalityLbEndpoints)},
  { 15, -1, sizeof(EndpointLoadMetricStats)},
  { 22, -1, sizeof(UpstreamLocalityStats)},
  { 34, -1, sizeof(ClusterStats)},
  { 40, -1, sizeof(LoadAssignmentRequest)},
  { 47, -1, sizeof(ClusterLoadAssignment_Policy)},
  { 52, -1, sizeof(ClusterLoadAssignment)},
  { 60, -1, sizeof(LoadAssignmentResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbEndpoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LocalityLbEndpoints_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EndpointLoadMetricStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpstreamLocalityStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClusterStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoadAssignmentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClusterLoadAssignment_Policy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClusterLoadAssignment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoadAssignmentResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/eds.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
  const ::google::protobuf::Descriptor* UpstreamLocalityStats_TcpErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[3].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        UpstreamLocalityStats_TcpErrorsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::uint32,
            ::google::protobuf::uint64,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
            0>::CreateDefaultInstance(
                UpstreamLocalityStats_TcpErrorsEntry_descriptor));
  const ::google::protobuf::Descriptor* UpstreamLocalityStats_HttpErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[4].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        UpstreamLocalityStats_HttpErrorsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::uint32,
            ::google::protobuf::uint64,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
            0>::CreateDefaultInstance(
                UpstreamLocalityStats_HttpErrorsEntry_descriptor));
  const ::google::protobuf::Descriptor* UpstreamLocalityStats_GrpcErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[5].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        UpstreamLocalityStats_GrpcErrorsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::uint32,
            ::google::protobuf::uint64,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
            0>::CreateDefaultInstance(
                UpstreamLocalityStats_GrpcErrorsEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _LbEndpoint_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LocalityLbEndpoints_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _EndpointLoadMetricStats_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _UpstreamLocalityStats_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ClusterStats_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _LoadAssignmentRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ClusterLoadAssignment_Policy_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _ClusterLoadAssignment_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _LoadAssignmentResponse_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::InitDefaults();
  ::envoy::api::v2::protobuf_api_2fhealth_5fcheck_2eproto::InitDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  _LbEndpoint_default_instance_.DefaultConstruct();
  _LocalityLbEndpoints_default_instance_.DefaultConstruct();
  _EndpointLoadMetricStats_default_instance_.DefaultConstruct();
  _UpstreamLocalityStats_default_instance_.DefaultConstruct();
  _ClusterStats_default_instance_.DefaultConstruct();
  _LoadAssignmentRequest_default_instance_.DefaultConstruct();
  _ClusterLoadAssignment_Policy_default_instance_.DefaultConstruct();
  _ClusterLoadAssignment_default_instance_.DefaultConstruct();
  _LoadAssignmentResponse_default_instance_.DefaultConstruct();
  _LbEndpoint_default_instance_.get_mutable()->endpoint_ = const_cast< ::envoy::api::v2::Endpoint*>(
      ::envoy::api::v2::Endpoint::internal_default_instance());
  _LbEndpoint_default_instance_.get_mutable()->canary_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _LbEndpoint_default_instance_.get_mutable()->load_balancing_weight_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
  _LocalityLbEndpoints_default_instance_.get_mutable()->locality_ = const_cast< ::envoy::api::v2::Locality*>(
      ::envoy::api::v2::Locality::internal_default_instance());
  _LocalityLbEndpoints_default_instance_.get_mutable()->load_balancing_weight_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
  _LoadAssignmentRequest_default_instance_.get_mutable()->node_ = const_cast< ::envoy::api::v2::Node*>(
      ::envoy::api::v2::Node::internal_default_instance());
  _ClusterLoadAssignment_default_instance_.get_mutable()->policy_ = const_cast< ::envoy::api::v2::ClusterLoadAssignment_Policy*>(
      ::envoy::api::v2::ClusterLoadAssignment_Policy::internal_default_instance());
  _LoadAssignmentResponse_default_instance_.get_mutable()->load_reporting_interval_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rapi/eds.proto\022\014envoy.api.v2\032\016api/base."
      "proto\032\026api/health_check.proto\032\034google/ap"
      "i/annotations.proto\032\036google/protobuf/dur"
      "ation.proto\032\036google/protobuf/wrappers.pr"
      "oto\"\322\001\n\nLbEndpoint\022(\n\010endpoint\030\001 \001(\0132\026.e"
      "nvoy.api.v2.Endpoint\0221\n\rhealth_status\030\002 "
      "\001(\0162\032.envoy.api.v2.HealthStatus\022*\n\006canar"
      "y\030\003 \001(\0132\032.google.protobuf.BoolValue\022;\n\025l"
      "oad_balancing_weight\030\004 \001(\0132\034.google.prot"
      "obuf.UInt32Value\"\254\001\n\023LocalityLbEndpoints"
      "\022(\n\010locality\030\001 \001(\0132\026.envoy.api.v2.Locali"
      "ty\022.\n\014lb_endpoints\030\002 \003(\0132\030.envoy.api.v2."
      "LbEndpoint\022;\n\025load_balancing_weight\030\003 \001("
      "\0132\034.google.protobuf.UInt32Value\"u\n\027Endpo"
      "intLoadMetricStats\022\023\n\013metric_name\030\001 \001(\t\022"
      ")\n!num_requests_finished_with_metric\030\002 \001"
      "(\004\022\032\n\022total_metric_value\030\003 \001(\001\"\322\004\n\025Upstr"
      "eamLocalityStats\022\020\n\010Locality\030\001 \001(\t\022\026\n\016to"
      "tal_requests\030\002 \001(\004\022\"\n\032total_requests_in_"
      "progress\030\003 \001(\004\022F\n\ntcp_errors\030\004 \003(\01322.env"
      "oy.api.v2.UpstreamLocalityStats.TcpError"
      "sEntry\022H\n\013http_errors\030\005 \003(\01323.envoy.api."
      "v2.UpstreamLocalityStats.HttpErrorsEntry"
      "\022H\n\013grpc_errors\030\006 \003(\01323.envoy.api.v2.Ups"
      "treamLocalityStats.GrpcErrorsEntry\022\030\n\020dr"
      "opped_requests\030\007 \001(\004\022@\n\021load_metric_stat"
      "s\030\010 \003(\0132%.envoy.api.v2.EndpointLoadMetri"
      "cStats\0320\n\016TcpErrorsEntry\022\013\n\003key\030\001 \001(\r\022\r\n"
      "\005value\030\002 \001(\004:\0028\001\0321\n\017HttpErrorsEntry\022\013\n\003k"
      "ey\030\001 \001(\r\022\r\n\005value\030\002 \001(\004:\0028\001\0321\n\017GrpcError"
      "sEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\004:\0028\001\"\033"
      "\n\014TcpErrorType\022\013\n\007TIMEOUT\020\000\"j\n\014ClusterSt"
      "ats\022\024\n\014cluster_name\030\001 \001(\t\022D\n\027upstream_lo"
      "cality_stats\030\002 \003(\0132#.envoy.api.v2.Upstre"
      "amLocalityStats\"\202\001\n\025LoadAssignmentReques"
      "t\022\024\n\014version_info\030\001 \001(\014\022 \n\004node\030\002 \001(\0132\022."
      "envoy.api.v2.Node\0221\n\rcluster_stats\030\003 \003(\013"
      "2\032.envoy.api.v2.ClusterStats\"\377\001\n\025Cluster"
      "LoadAssignment\022\024\n\014cluster_name\030\001 \001(\t\0224\n\t"
      "endpoints\030\002 \003(\0132!.envoy.api.v2.LocalityL"
      "bEndpoints\022=\n\022failover_endpoints\030\003 \003(\0132!"
      ".envoy.api.v2.LocalityLbEndpoints\022:\n\006pol"
      "icy\030\004 \001(\0132*.envoy.api.v2.ClusterLoadAssi"
      "gnment.Policy\032\037\n\006Policy\022\025\n\rdrop_overload"
      "\030\001 \001(\001\"\241\001\n\026LoadAssignmentResponse\022\024\n\014ver"
      "sion_info\030\001 \001(\014\0225\n\010clusters\030\002 \003(\0132#.envo"
      "y.api.v2.ClusterLoadAssignment\022:\n\027load_r"
      "eporting_interval\030\003 \001(\0132\031.google.protobu"
      "f.Duration2\341\003\n\030EndpointDiscoveryService\022"
      "X\n\017StreamEndpoints\022\036.envoy.api.v2.Discov"
      "eryRequest\032\037.envoy.api.v2.DiscoveryRespo"
      "nse\"\000(\0010\001\022u\n\016FetchEndpoints\022\036.envoy.api."
      "v2.DiscoveryRequest\032\037.envoy.api.v2.Disco"
      "veryResponse\"\"\202\323\344\223\002\034\"\027/v2/discovery:endp"
      "oints:\001*\022g\n\024StreamLoadAssignment\022#.envoy"
      ".api.v2.LoadAssignmentRequest\032$.envoy.ap"
      "i.v2.LoadAssignmentResponse\"\000(\0010\001\022\212\001\n\023Fe"
      "tchLoadAssignment\022#.envoy.api.v2.LoadAss"
      "ignmentRequest\032$.envoy.api.v2.LoadAssign"
      "mentResponse\"(\202\323\344\223\002\"\"\035/v2/discovery:load"
      "_assignment:\001*b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2422);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/eds.proto", &protobuf_RegisterTypes);
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::AddDescriptors();
  ::envoy::api::v2::protobuf_api_2fhealth_5fcheck_2eproto::AddDescriptors();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2feds_2eproto

const ::google::protobuf::EnumDescriptor* UpstreamLocalityStats_TcpErrorType_descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_enum_descriptors[0];
}
bool UpstreamLocalityStats_TcpErrorType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UpstreamLocalityStats_TcpErrorType UpstreamLocalityStats::TIMEOUT;
const UpstreamLocalityStats_TcpErrorType UpstreamLocalityStats::TcpErrorType_MIN;
const UpstreamLocalityStats_TcpErrorType UpstreamLocalityStats::TcpErrorType_MAX;
const int UpstreamLocalityStats::TcpErrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbEndpoint::kEndpointFieldNumber;
const int LbEndpoint::kHealthStatusFieldNumber;
const int LbEndpoint::kCanaryFieldNumber;
const int LbEndpoint::kLoadBalancingWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbEndpoint::LbEndpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LbEndpoint)
}
LbEndpoint::LbEndpoint(const LbEndpoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_endpoint()) {
    endpoint_ = new ::envoy::api::v2::Endpoint(*from.endpoint_);
  } else {
    endpoint_ = NULL;
  }
  if (from.has_canary()) {
    canary_ = new ::google::protobuf::BoolValue(*from.canary_);
  } else {
    canary_ = NULL;
  }
  if (from.has_load_balancing_weight()) {
    load_balancing_weight_ = new ::google::protobuf::UInt32Value(*from.load_balancing_weight_);
  } else {
    load_balancing_weight_ = NULL;
  }
  health_status_ = from.health_status_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LbEndpoint)
}

void LbEndpoint::SharedCtor() {
  ::memset(&endpoint_, 0, reinterpret_cast<char*>(&health_status_) -
    reinterpret_cast<char*>(&endpoint_) + sizeof(health_status_));
  _cached_size_ = 0;
}

LbEndpoint::~LbEndpoint() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LbEndpoint)
  SharedDtor();
}

void LbEndpoint::SharedDtor() {
  if (this != internal_default_instance()) {
    delete endpoint_;
  }
  if (this != internal_default_instance()) {
    delete canary_;
  }
  if (this != internal_default_instance()) {
    delete load_balancing_weight_;
  }
}

void LbEndpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbEndpoint::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[0].descriptor;
}

const LbEndpoint& LbEndpoint::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbEndpoint* LbEndpoint::New(::google::protobuf::Arena* arena) const {
  LbEndpoint* n = new LbEndpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbEndpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LbEndpoint)
  if (GetArenaNoVirtual() == NULL && endpoint_ != NULL) {
    delete endpoint_;
  }
  endpoint_ = NULL;
  if (GetArenaNoVirtual() == NULL && canary_ != NULL) {
    delete canary_;
  }
  canary_ = NULL;
  if (GetArenaNoVirtual() == NULL && load_balancing_weight_ != NULL) {
    delete load_balancing_weight_;
  }
  load_balancing_weight_ = NULL;
  health_status_ = 0;
}

bool LbEndpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LbEndpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Endpoint endpoint = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_endpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.HealthStatus health_status = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_health_status(static_cast< ::envoy::api::v2::HealthStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue canary = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_canary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value load_balancing_weight = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_load_balancing_weight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LbEndpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LbEndpoint)
  return false;
#undef DO_
}

void LbEndpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LbEndpoint)
  // .envoy.api.v2.Endpoint endpoint = 1;
  if (this->has_endpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->endpoint_, output);
  }

  // .envoy.api.v2.HealthStatus health_status = 2;
  if (this->health_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->health_status(), output);
  }

  // .google.protobuf.BoolValue canary = 3;
  if (this->has_canary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->canary_, output);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 4;
  if (this->has_load_balancing_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->load_balancing_weight_, output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LbEndpoint)
}

::google::protobuf::uint8* LbEndpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LbEndpoint)
  // .envoy.api.v2.Endpoint endpoint = 1;
  if (this->has_endpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->endpoint_, false, target);
  }

  // .envoy.api.v2.HealthStatus health_status = 2;
  if (this->health_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->health_status(), target);
  }

  // .google.protobuf.BoolValue canary = 3;
  if (this->has_canary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->canary_, false, target);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 4;
  if (this->has_load_balancing_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->load_balancing_weight_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LbEndpoint)
  return target;
}

size_t LbEndpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LbEndpoint)
  size_t total_size = 0;

  // .envoy.api.v2.Endpoint endpoint = 1;
  if (this->has_endpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->endpoint_);
  }

  // .google.protobuf.BoolValue canary = 3;
  if (this->has_canary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->canary_);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 4;
  if (this->has_load_balancing_weight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->load_balancing_weight_);
  }

  // .envoy.api.v2.HealthStatus health_status = 2;
  if (this->health_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->health_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbEndpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LbEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const LbEndpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbEndpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LbEndpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LbEndpoint)
    MergeFrom(*source);
  }
}

void LbEndpoint::MergeFrom(const LbEndpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LbEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_endpoint()) {
    mutable_endpoint()->::envoy::api::v2::Endpoint::MergeFrom(from.endpoint());
  }
  if (from.has_canary()) {
    mutable_canary()->::google::protobuf::BoolValue::MergeFrom(from.canary());
  }
  if (from.has_load_balancing_weight()) {
    mutable_load_balancing_weight()->::google::protobuf::UInt32Value::MergeFrom(from.load_balancing_weight());
  }
  if (from.health_status() != 0) {
    set_health_status(from.health_status());
  }
}

void LbEndpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LbEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbEndpoint::CopyFrom(const LbEndpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LbEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbEndpoint::IsInitialized() const {
  return true;
}

void LbEndpoint::Swap(LbEndpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbEndpoint::InternalSwap(LbEndpoint* other) {
  std::swap(endpoint_, other->endpoint_);
  std::swap(canary_, other->canary_);
  std::swap(load_balancing_weight_, other->load_balancing_weight_);
  std::swap(health_status_, other->health_status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbEndpoint::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbEndpoint

// .envoy.api.v2.Endpoint endpoint = 1;
bool LbEndpoint::has_endpoint() const {
  return this != internal_default_instance() && endpoint_ != NULL;
}
void LbEndpoint::clear_endpoint() {
  if (GetArenaNoVirtual() == NULL && endpoint_ != NULL) delete endpoint_;
  endpoint_ = NULL;
}
const ::envoy::api::v2::Endpoint& LbEndpoint::endpoint() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LbEndpoint.endpoint)
  return endpoint_ != NULL ? *endpoint_
                         : *::envoy::api::v2::Endpoint::internal_default_instance();
}
::envoy::api::v2::Endpoint* LbEndpoint::mutable_endpoint() {
  
  if (endpoint_ == NULL) {
    endpoint_ = new ::envoy::api::v2::Endpoint;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LbEndpoint.endpoint)
  return endpoint_;
}
::envoy::api::v2::Endpoint* LbEndpoint::release_endpoint() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LbEndpoint.endpoint)
  
  ::envoy::api::v2::Endpoint* temp = endpoint_;
  endpoint_ = NULL;
  return temp;
}
void LbEndpoint::set_allocated_endpoint(::envoy::api::v2::Endpoint* endpoint) {
  delete endpoint_;
  endpoint_ = endpoint;
  if (endpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LbEndpoint.endpoint)
}

// .envoy.api.v2.HealthStatus health_status = 2;
void LbEndpoint::clear_health_status() {
  health_status_ = 0;
}
::envoy::api::v2::HealthStatus LbEndpoint::health_status() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LbEndpoint.health_status)
  return static_cast< ::envoy::api::v2::HealthStatus >(health_status_);
}
void LbEndpoint::set_health_status(::envoy::api::v2::HealthStatus value) {
  
  health_status_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.LbEndpoint.health_status)
}

// .google.protobuf.BoolValue canary = 3;
bool LbEndpoint::has_canary() const {
  return this != internal_default_instance() && canary_ != NULL;
}
void LbEndpoint::clear_canary() {
  if (GetArenaNoVirtual() == NULL && canary_ != NULL) delete canary_;
  canary_ = NULL;
}
const ::google::protobuf::BoolValue& LbEndpoint::canary() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LbEndpoint.canary)
  return canary_ != NULL ? *canary_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
::google::protobuf::BoolValue* LbEndpoint::mutable_canary() {
  
  if (canary_ == NULL) {
    canary_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LbEndpoint.canary)
  return canary_;
}
::google::protobuf::BoolValue* LbEndpoint::release_canary() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LbEndpoint.canary)
  
  ::google::protobuf::BoolValue* temp = canary_;
  canary_ = NULL;
  return temp;
}
void LbEndpoint::set_allocated_canary(::google::protobuf::BoolValue* canary) {
  delete canary_;
  if (canary != NULL && canary->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_canary = new ::google::protobuf::BoolValue;
    new_canary->CopyFrom(*canary);
    canary = new_canary;
  }
  canary_ = canary;
  if (canary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LbEndpoint.canary)
}

// .google.protobuf.UInt32Value load_balancing_weight = 4;
bool LbEndpoint::has_load_balancing_weight() const {
  return this != internal_default_instance() && load_balancing_weight_ != NULL;
}
void LbEndpoint::clear_load_balancing_weight() {
  if (GetArenaNoVirtual() == NULL && load_balancing_weight_ != NULL) delete load_balancing_weight_;
  load_balancing_weight_ = NULL;
}
const ::google::protobuf::UInt32Value& LbEndpoint::load_balancing_weight() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LbEndpoint.load_balancing_weight)
  return load_balancing_weight_ != NULL ? *load_balancing_weight_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
::google::protobuf::UInt32Value* LbEndpoint::mutable_load_balancing_weight() {
  
  if (load_balancing_weight_ == NULL) {
    load_balancing_weight_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LbEndpoint.load_balancing_weight)
  return load_balancing_weight_;
}
::google::protobuf::UInt32Value* LbEndpoint::release_load_balancing_weight() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LbEndpoint.load_balancing_weight)
  
  ::google::protobuf::UInt32Value* temp = load_balancing_weight_;
  load_balancing_weight_ = NULL;
  return temp;
}
void LbEndpoint::set_allocated_load_balancing_weight(::google::protobuf::UInt32Value* load_balancing_weight) {
  delete load_balancing_weight_;
  if (load_balancing_weight != NULL && load_balancing_weight->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_load_balancing_weight = new ::google::protobuf::UInt32Value;
    new_load_balancing_weight->CopyFrom(*load_balancing_weight);
    load_balancing_weight = new_load_balancing_weight;
  }
  load_balancing_weight_ = load_balancing_weight;
  if (load_balancing_weight) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LbEndpoint.load_balancing_weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalityLbEndpoints::kLocalityFieldNumber;
const int LocalityLbEndpoints::kLbEndpointsFieldNumber;
const int LocalityLbEndpoints::kLoadBalancingWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalityLbEndpoints::LocalityLbEndpoints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LocalityLbEndpoints)
}
LocalityLbEndpoints::LocalityLbEndpoints(const LocalityLbEndpoints& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lb_endpoints_(from.lb_endpoints_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_locality()) {
    locality_ = new ::envoy::api::v2::Locality(*from.locality_);
  } else {
    locality_ = NULL;
  }
  if (from.has_load_balancing_weight()) {
    load_balancing_weight_ = new ::google::protobuf::UInt32Value(*from.load_balancing_weight_);
  } else {
    load_balancing_weight_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LocalityLbEndpoints)
}

void LocalityLbEndpoints::SharedCtor() {
  ::memset(&locality_, 0, reinterpret_cast<char*>(&load_balancing_weight_) -
    reinterpret_cast<char*>(&locality_) + sizeof(load_balancing_weight_));
  _cached_size_ = 0;
}

LocalityLbEndpoints::~LocalityLbEndpoints() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LocalityLbEndpoints)
  SharedDtor();
}

void LocalityLbEndpoints::SharedDtor() {
  if (this != internal_default_instance()) {
    delete locality_;
  }
  if (this != internal_default_instance()) {
    delete load_balancing_weight_;
  }
}

void LocalityLbEndpoints::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalityLbEndpoints::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[1].descriptor;
}

const LocalityLbEndpoints& LocalityLbEndpoints::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

LocalityLbEndpoints* LocalityLbEndpoints::New(::google::protobuf::Arena* arena) const {
  LocalityLbEndpoints* n = new LocalityLbEndpoints;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalityLbEndpoints::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LocalityLbEndpoints)
  lb_endpoints_.Clear();
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) {
    delete locality_;
  }
  locality_ = NULL;
  if (GetArenaNoVirtual() == NULL && load_balancing_weight_ != NULL) {
    delete load_balancing_weight_;
  }
  load_balancing_weight_ = NULL;
}

bool LocalityLbEndpoints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LocalityLbEndpoints)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .envoy.api.v2.Locality locality = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lb_endpoints()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .google.protobuf.UInt32Value load_balancing_weight = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_load_balancing_weight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LocalityLbEndpoints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LocalityLbEndpoints)
  return false;
#undef DO_
}

void LocalityLbEndpoints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LocalityLbEndpoints)
  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->locality_, output);
  }

  // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
  for (unsigned int i = 0, n = this->lb_endpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lb_endpoints(i), output);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 3;
  if (this->has_load_balancing_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->load_balancing_weight_, output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LocalityLbEndpoints)
}

::google::protobuf::uint8* LocalityLbEndpoints::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LocalityLbEndpoints)
  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->locality_, false, target);
  }

  // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
  for (unsigned int i = 0, n = this->lb_endpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->lb_endpoints(i), false, target);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 3;
  if (this->has_load_balancing_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->load_balancing_weight_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LocalityLbEndpoints)
  return target;
}

size_t LocalityLbEndpoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LocalityLbEndpoints)
  size_t total_size = 0;

  // repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
  {
    unsigned int count = this->lb_endpoints_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lb_endpoints(i));
    }
  }

  // .envoy.api.v2.Locality locality = 1;
  if (this->has_locality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locality_);
  }

  // .google.protobuf.UInt32Value load_balancing_weight = 3;
  if (this->has_load_balancing_weight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->load_balancing_weight_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalityLbEndpoints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LocalityLbEndpoints)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalityLbEndpoints* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalityLbEndpoints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LocalityLbEndpoints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LocalityLbEndpoints)
    MergeFrom(*source);
  }
}

void LocalityLbEndpoints::MergeFrom(const LocalityLbEndpoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LocalityLbEndpoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lb_endpoints_.MergeFrom(from.lb_endpoints_);
  if (from.has_locality()) {
    mutable_locality()->::envoy::api::v2::Locality::MergeFrom(from.locality());
  }
  if (from.has_load_balancing_weight()) {
    mutable_load_balancing_weight()->::google::protobuf::UInt32Value::MergeFrom(from.load_balancing_weight());
  }
}

void LocalityLbEndpoints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LocalityLbEndpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalityLbEndpoints::CopyFrom(const LocalityLbEndpoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LocalityLbEndpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalityLbEndpoints::IsInitialized() const {
  return true;
}

void LocalityLbEndpoints::Swap(LocalityLbEndpoints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalityLbEndpoints::InternalSwap(LocalityLbEndpoints* other) {
  lb_endpoints_.UnsafeArenaSwap(&other->lb_endpoints_);
  std::swap(locality_, other->locality_);
  std::swap(load_balancing_weight_, other->load_balancing_weight_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalityLbEndpoints::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocalityLbEndpoints

// .envoy.api.v2.Locality locality = 1;
bool LocalityLbEndpoints::has_locality() const {
  return this != internal_default_instance() && locality_ != NULL;
}
void LocalityLbEndpoints::clear_locality() {
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) delete locality_;
  locality_ = NULL;
}
const ::envoy::api::v2::Locality& LocalityLbEndpoints::locality() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LocalityLbEndpoints.locality)
  return locality_ != NULL ? *locality_
                         : *::envoy::api::v2::Locality::internal_default_instance();
}
::envoy::api::v2::Locality* LocalityLbEndpoints::mutable_locality() {
  
  if (locality_ == NULL) {
    locality_ = new ::envoy::api::v2::Locality;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LocalityLbEndpoints.locality)
  return locality_;
}
::envoy::api::v2::Locality* LocalityLbEndpoints::release_locality() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LocalityLbEndpoints.locality)
  
  ::envoy::api::v2::Locality* temp = locality_;
  locality_ = NULL;
  return temp;
}
void LocalityLbEndpoints::set_allocated_locality(::envoy::api::v2::Locality* locality) {
  delete locality_;
  locality_ = locality;
  if (locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LocalityLbEndpoints.locality)
}

// repeated .envoy.api.v2.LbEndpoint lb_endpoints = 2;
int LocalityLbEndpoints::lb_endpoints_size() const {
  return lb_endpoints_.size();
}
void LocalityLbEndpoints::clear_lb_endpoints() {
  lb_endpoints_.Clear();
}
const ::envoy::api::v2::LbEndpoint& LocalityLbEndpoints::lb_endpoints(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return lb_endpoints_.Get(index);
}
::envoy::api::v2::LbEndpoint* LocalityLbEndpoints::mutable_lb_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return lb_endpoints_.Mutable(index);
}
::envoy::api::v2::LbEndpoint* LocalityLbEndpoints::add_lb_endpoints() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return lb_endpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LbEndpoint >*
LocalityLbEndpoints::mutable_lb_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return &lb_endpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LbEndpoint >&
LocalityLbEndpoints::lb_endpoints() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.LocalityLbEndpoints.lb_endpoints)
  return lb_endpoints_;
}

// .google.protobuf.UInt32Value load_balancing_weight = 3;
bool LocalityLbEndpoints::has_load_balancing_weight() const {
  return this != internal_default_instance() && load_balancing_weight_ != NULL;
}
void LocalityLbEndpoints::clear_load_balancing_weight() {
  if (GetArenaNoVirtual() == NULL && load_balancing_weight_ != NULL) delete load_balancing_weight_;
  load_balancing_weight_ = NULL;
}
const ::google::protobuf::UInt32Value& LocalityLbEndpoints::load_balancing_weight() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LocalityLbEndpoints.load_balancing_weight)
  return load_balancing_weight_ != NULL ? *load_balancing_weight_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
::google::protobuf::UInt32Value* LocalityLbEndpoints::mutable_load_balancing_weight() {
  
  if (load_balancing_weight_ == NULL) {
    load_balancing_weight_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LocalityLbEndpoints.load_balancing_weight)
  return load_balancing_weight_;
}
::google::protobuf::UInt32Value* LocalityLbEndpoints::release_load_balancing_weight() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LocalityLbEndpoints.load_balancing_weight)
  
  ::google::protobuf::UInt32Value* temp = load_balancing_weight_;
  load_balancing_weight_ = NULL;
  return temp;
}
void LocalityLbEndpoints::set_allocated_load_balancing_weight(::google::protobuf::UInt32Value* load_balancing_weight) {
  delete load_balancing_weight_;
  if (load_balancing_weight != NULL && load_balancing_weight->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_load_balancing_weight = new ::google::protobuf::UInt32Value;
    new_load_balancing_weight->CopyFrom(*load_balancing_weight);
    load_balancing_weight = new_load_balancing_weight;
  }
  load_balancing_weight_ = load_balancing_weight;
  if (load_balancing_weight) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LocalityLbEndpoints.load_balancing_weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndpointLoadMetricStats::kMetricNameFieldNumber;
const int EndpointLoadMetricStats::kNumRequestsFinishedWithMetricFieldNumber;
const int EndpointLoadMetricStats::kTotalMetricValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndpointLoadMetricStats::EndpointLoadMetricStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.EndpointLoadMetricStats)
}
EndpointLoadMetricStats::EndpointLoadMetricStats(const EndpointLoadMetricStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metric_name().size() > 0) {
    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
  ::memcpy(&num_requests_finished_with_metric_, &from.num_requests_finished_with_metric_,
    reinterpret_cast<char*>(&total_metric_value_) -
    reinterpret_cast<char*>(&num_requests_finished_with_metric_) + sizeof(total_metric_value_));
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.EndpointLoadMetricStats)
}

void EndpointLoadMetricStats::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_requests_finished_with_metric_, 0, reinterpret_cast<char*>(&total_metric_value_) -
    reinterpret_cast<char*>(&num_requests_finished_with_metric_) + sizeof(total_metric_value_));
  _cached_size_ = 0;
}

EndpointLoadMetricStats::~EndpointLoadMetricStats() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.EndpointLoadMetricStats)
  SharedDtor();
}

void EndpointLoadMetricStats::SharedDtor() {
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EndpointLoadMetricStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndpointLoadMetricStats::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[2].descriptor;
}

const EndpointLoadMetricStats& EndpointLoadMetricStats::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

EndpointLoadMetricStats* EndpointLoadMetricStats::New(::google::protobuf::Arena* arena) const {
  EndpointLoadMetricStats* n = new EndpointLoadMetricStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndpointLoadMetricStats::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.EndpointLoadMetricStats)
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_requests_finished_with_metric_, 0, reinterpret_cast<char*>(&total_metric_value_) -
    reinterpret_cast<char*>(&num_requests_finished_with_metric_) + sizeof(total_metric_value_));
}

bool EndpointLoadMetricStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.EndpointLoadMetricStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string metric_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), this->metric_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.EndpointLoadMetricStats.metric_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_requests_finished_with_metric = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_requests_finished_with_metric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double total_metric_value = 3;
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_metric_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.EndpointLoadMetricStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.EndpointLoadMetricStats)
  return false;
#undef DO_
}

void EndpointLoadMetricStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.EndpointLoadMetricStats)
  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EndpointLoadMetricStats.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  // uint64 num_requests_finished_with_metric = 2;
  if (this->num_requests_finished_with_metric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num_requests_finished_with_metric(), output);
  }

  // double total_metric_value = 3;
  if (this->total_metric_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->total_metric_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.EndpointLoadMetricStats)
}

::google::protobuf::uint8* EndpointLoadMetricStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.EndpointLoadMetricStats)
  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.EndpointLoadMetricStats.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  // uint64 num_requests_finished_with_metric = 2;
  if (this->num_requests_finished_with_metric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num_requests_finished_with_metric(), target);
  }

  // double total_metric_value = 3;
  if (this->total_metric_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->total_metric_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.EndpointLoadMetricStats)
  return target;
}

size_t EndpointLoadMetricStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.EndpointLoadMetricStats)
  size_t total_size = 0;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  // uint64 num_requests_finished_with_metric = 2;
  if (this->num_requests_finished_with_metric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_requests_finished_with_metric());
  }

  // double total_metric_value = 3;
  if (this->total_metric_value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndpointLoadMetricStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.EndpointLoadMetricStats)
  GOOGLE_DCHECK_NE(&from, this);
  const EndpointLoadMetricStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndpointLoadMetricStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.EndpointLoadMetricStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.EndpointLoadMetricStats)
    MergeFrom(*source);
  }
}

void EndpointLoadMetricStats::MergeFrom(const EndpointLoadMetricStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.EndpointLoadMetricStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.metric_name().size() > 0) {

    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
  if (from.num_requests_finished_with_metric() != 0) {
    set_num_requests_finished_with_metric(from.num_requests_finished_with_metric());
  }
  if (from.total_metric_value() != 0) {
    set_total_metric_value(from.total_metric_value());
  }
}

void EndpointLoadMetricStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.EndpointLoadMetricStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndpointLoadMetricStats::CopyFrom(const EndpointLoadMetricStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.EndpointLoadMetricStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndpointLoadMetricStats::IsInitialized() const {
  return true;
}

void EndpointLoadMetricStats::Swap(EndpointLoadMetricStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndpointLoadMetricStats::InternalSwap(EndpointLoadMetricStats* other) {
  metric_name_.Swap(&other->metric_name_);
  std::swap(num_requests_finished_with_metric_, other->num_requests_finished_with_metric_);
  std::swap(total_metric_value_, other->total_metric_value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndpointLoadMetricStats::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndpointLoadMetricStats

// string metric_name = 1;
void EndpointLoadMetricStats::clear_metric_name() {
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EndpointLoadMetricStats::metric_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointLoadMetricStats.metric_name)
  return metric_name_.GetNoArena();
}
void EndpointLoadMetricStats::set_metric_name(const ::std::string& value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}
#if LANG_CXX11
void EndpointLoadMetricStats::set_metric_name(::std::string&& value) {
  
  metric_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}
#endif
void EndpointLoadMetricStats::set_metric_name(const char* value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}
void EndpointLoadMetricStats::set_metric_name(const char* value, size_t size) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}
::std::string* EndpointLoadMetricStats::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EndpointLoadMetricStats.metric_name)
  return metric_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EndpointLoadMetricStats::release_metric_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EndpointLoadMetricStats.metric_name)
  
  return metric_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EndpointLoadMetricStats::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EndpointLoadMetricStats.metric_name)
}

// uint64 num_requests_finished_with_metric = 2;
void EndpointLoadMetricStats::clear_num_requests_finished_with_metric() {
  num_requests_finished_with_metric_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EndpointLoadMetricStats::num_requests_finished_with_metric() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointLoadMetricStats.num_requests_finished_with_metric)
  return num_requests_finished_with_metric_;
}
void EndpointLoadMetricStats::set_num_requests_finished_with_metric(::google::protobuf::uint64 value) {
  
  num_requests_finished_with_metric_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EndpointLoadMetricStats.num_requests_finished_with_metric)
}

// double total_metric_value = 3;
void EndpointLoadMetricStats::clear_total_metric_value() {
  total_metric_value_ = 0;
}
double EndpointLoadMetricStats::total_metric_value() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointLoadMetricStats.total_metric_value)
  return total_metric_value_;
}
void EndpointLoadMetricStats::set_total_metric_value(double value) {
  
  total_metric_value_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EndpointLoadMetricStats.total_metric_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpstreamLocalityStats::kLocalityFieldNumber;
const int UpstreamLocalityStats::kTotalRequestsFieldNumber;
const int UpstreamLocalityStats::kTotalRequestsInProgressFieldNumber;
const int UpstreamLocalityStats::kTcpErrorsFieldNumber;
const int UpstreamLocalityStats::kHttpErrorsFieldNumber;
const int UpstreamLocalityStats::kGrpcErrorsFieldNumber;
const int UpstreamLocalityStats::kDroppedRequestsFieldNumber;
const int UpstreamLocalityStats::kLoadMetricStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpstreamLocalityStats::UpstreamLocalityStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.UpstreamLocalityStats)
}
UpstreamLocalityStats::UpstreamLocalityStats(const UpstreamLocalityStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      load_metric_stats_(from.load_metric_stats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& UpstreamLocalityStats_TcpErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[3].descriptor;
  const ::google::protobuf::Descriptor*& UpstreamLocalityStats_HttpErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[4].descriptor;
  const ::google::protobuf::Descriptor*& UpstreamLocalityStats_GrpcErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[5].descriptor;
  tcp_errors_.SetAssignDescriptorCallback(
      protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce);
  tcp_errors_.SetEntryDescriptor(
      &UpstreamLocalityStats_TcpErrorsEntry_descriptor);
  tcp_errors_.MergeFrom(from.tcp_errors_);
  http_errors_.SetAssignDescriptorCallback(
      protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce);
  http_errors_.SetEntryDescriptor(
      &UpstreamLocalityStats_HttpErrorsEntry_descriptor);
  http_errors_.MergeFrom(from.http_errors_);
  grpc_errors_.SetAssignDescriptorCallback(
      protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce);
  grpc_errors_.SetEntryDescriptor(
      &UpstreamLocalityStats_GrpcErrorsEntry_descriptor);
  grpc_errors_.MergeFrom(from.grpc_errors_);
  locality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locality().size() > 0) {
    locality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locality_);
  }
  ::memcpy(&total_requests_, &from.total_requests_,
    reinterpret_cast<char*>(&dropped_requests_) -
    reinterpret_cast<char*>(&total_requests_) + sizeof(dropped_requests_));
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.UpstreamLocalityStats)
}

void UpstreamLocalityStats::SharedCtor() {
  const ::google::protobuf::Descriptor*& UpstreamLocalityStats_TcpErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[3].descriptor;
  const ::google::protobuf::Descriptor*& UpstreamLocalityStats_HttpErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[4].descriptor;
  const ::google::protobuf::Descriptor*& UpstreamLocalityStats_GrpcErrorsEntry_descriptor = protobuf_api_2feds_2eproto::file_level_metadata[5].descriptor;
  tcp_errors_.SetAssignDescriptorCallback(
      protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce);
  tcp_errors_.SetEntryDescriptor(
      &UpstreamLocalityStats_TcpErrorsEntry_descriptor);
  http_errors_.SetAssignDescriptorCallback(
      protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce);
  http_errors_.SetEntryDescriptor(
      &UpstreamLocalityStats_HttpErrorsEntry_descriptor);
  grpc_errors_.SetAssignDescriptorCallback(
      protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce);
  grpc_errors_.SetEntryDescriptor(
      &UpstreamLocalityStats_GrpcErrorsEntry_descriptor);
  locality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_requests_, 0, reinterpret_cast<char*>(&dropped_requests_) -
    reinterpret_cast<char*>(&total_requests_) + sizeof(dropped_requests_));
  _cached_size_ = 0;
}

UpstreamLocalityStats::~UpstreamLocalityStats() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.UpstreamLocalityStats)
  SharedDtor();
}

void UpstreamLocalityStats::SharedDtor() {
  locality_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpstreamLocalityStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpstreamLocalityStats::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[6].descriptor;
}

const UpstreamLocalityStats& UpstreamLocalityStats::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpstreamLocalityStats* UpstreamLocalityStats::New(::google::protobuf::Arena* arena) const {
  UpstreamLocalityStats* n = new UpstreamLocalityStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpstreamLocalityStats::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.UpstreamLocalityStats)
  tcp_errors_.Clear();
  http_errors_.Clear();
  grpc_errors_.Clear();
  load_metric_stats_.Clear();
  locality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_requests_, 0, reinterpret_cast<char*>(&dropped_requests_) -
    reinterpret_cast<char*>(&total_requests_) + sizeof(dropped_requests_));
}

bool UpstreamLocalityStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.UpstreamLocalityStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Locality = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locality()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locality().data(), this->locality().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.UpstreamLocalityStats.Locality"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_requests = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_requests_in_progress = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_requests_in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint64> tcp_errors = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          UpstreamLocalityStats_TcpErrorsEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::uint32, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 > > parser(&tcp_errors_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<uint32, uint64> http_errors = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          UpstreamLocalityStats_HttpErrorsEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::uint32, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 > > parser(&http_errors_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<uint32, uint64> grpc_errors = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          UpstreamLocalityStats_GrpcErrorsEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::uint32, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 > > parser(&grpc_errors_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // uint64 dropped_requests = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dropped_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 8;
      case 8: {
        if (tag == 66u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_load_metric_stats()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.UpstreamLocalityStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.UpstreamLocalityStats)
  return false;
#undef DO_
}

void UpstreamLocalityStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.UpstreamLocalityStats)
  // string Locality = 1;
  if (this->locality().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locality().data(), this->locality().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.UpstreamLocalityStats.Locality");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->locality(), output);
  }

  // uint64 total_requests = 2;
  if (this->total_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->total_requests(), output);
  }

  // uint64 total_requests_in_progress = 3;
  if (this->total_requests_in_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->total_requests_in_progress(), output);
  }

  // map<uint32, uint64> tcp_errors = 4;
  if (!this->tcp_errors().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->tcp_errors().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->tcp_errors().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->tcp_errors().begin();
          it != this->tcp_errors().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_TcpErrorsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tcp_errors_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_TcpErrorsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->tcp_errors().begin();
          it != this->tcp_errors().end(); ++it) {
        entry.reset(tcp_errors_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // map<uint32, uint64> http_errors = 5;
  if (!this->http_errors().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->http_errors().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->http_errors().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->http_errors().begin();
          it != this->http_errors().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_HttpErrorsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(http_errors_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_HttpErrorsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->http_errors().begin();
          it != this->http_errors().end(); ++it) {
        entry.reset(http_errors_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  // map<uint32, uint64> grpc_errors = 6;
  if (!this->grpc_errors().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->grpc_errors().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->grpc_errors().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->grpc_errors().begin();
          it != this->grpc_errors().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_GrpcErrorsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(grpc_errors_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_GrpcErrorsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->grpc_errors().begin();
          it != this->grpc_errors().end(); ++it) {
        entry.reset(grpc_errors_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    }
  }

  // uint64 dropped_requests = 7;
  if (this->dropped_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->dropped_requests(), output);
  }

  // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 8;
  for (unsigned int i = 0, n = this->load_metric_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->load_metric_stats(i), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.UpstreamLocalityStats)
}

::google::protobuf::uint8* UpstreamLocalityStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.UpstreamLocalityStats)
  // string Locality = 1;
  if (this->locality().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locality().data(), this->locality().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.UpstreamLocalityStats.Locality");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->locality(), target);
  }

  // uint64 total_requests = 2;
  if (this->total_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->total_requests(), target);
  }

  // uint64 total_requests_in_progress = 3;
  if (this->total_requests_in_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->total_requests_in_progress(), target);
  }

  // map<uint32, uint64> tcp_errors = 4;
  if (!this->tcp_errors().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->tcp_errors().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->tcp_errors().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->tcp_errors().begin();
          it != this->tcp_errors().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_TcpErrorsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tcp_errors_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_TcpErrorsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->tcp_errors().begin();
          it != this->tcp_errors().end(); ++it) {
        entry.reset(tcp_errors_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint64> http_errors = 5;
  if (!this->http_errors().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->http_errors().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->http_errors().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->http_errors().begin();
          it != this->http_errors().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_HttpErrorsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(http_errors_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_HttpErrorsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->http_errors().begin();
          it != this->http_errors().end(); ++it) {
        entry.reset(http_errors_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint64> grpc_errors = 6;
  if (!this->grpc_errors().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->grpc_errors().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->grpc_errors().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->grpc_errors().begin();
          it != this->grpc_errors().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_GrpcErrorsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(grpc_errors_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<UpstreamLocalityStats_GrpcErrorsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->grpc_errors().begin();
          it != this->grpc_errors().end(); ++it) {
        entry.reset(grpc_errors_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    }
  }

  // uint64 dropped_requests = 7;
  if (this->dropped_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->dropped_requests(), target);
  }

  // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 8;
  for (unsigned int i = 0, n = this->load_metric_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->load_metric_stats(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.UpstreamLocalityStats)
  return target;
}

size_t UpstreamLocalityStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.UpstreamLocalityStats)
  size_t total_size = 0;

  // map<uint32, uint64> tcp_errors = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tcp_errors_size());
  {
    ::google::protobuf::scoped_ptr<UpstreamLocalityStats_TcpErrorsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
        it = this->tcp_errors().begin();
        it != this->tcp_errors().end(); ++it) {
      entry.reset(tcp_errors_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint64> http_errors = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->http_errors_size());
  {
    ::google::protobuf::scoped_ptr<UpstreamLocalityStats_HttpErrorsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
        it = this->http_errors().begin();
        it != this->http_errors().end(); ++it) {
      entry.reset(http_errors_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint64> grpc_errors = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->grpc_errors_size());
  {
    ::google::protobuf::scoped_ptr<UpstreamLocalityStats_GrpcErrorsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
        it = this->grpc_errors().begin();
        it != this->grpc_errors().end(); ++it) {
      entry.reset(grpc_errors_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 8;
  {
    unsigned int count = this->load_metric_stats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->load_metric_stats(i));
    }
  }

  // string Locality = 1;
  if (this->locality().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locality());
  }

  // uint64 total_requests = 2;
  if (this->total_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_requests());
  }

  // uint64 total_requests_in_progress = 3;
  if (this->total_requests_in_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_requests_in_progress());
  }

  // uint64 dropped_requests = 7;
  if (this->dropped_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dropped_requests());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpstreamLocalityStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.UpstreamLocalityStats)
  GOOGLE_DCHECK_NE(&from, this);
  const UpstreamLocalityStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpstreamLocalityStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.UpstreamLocalityStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.UpstreamLocalityStats)
    MergeFrom(*source);
  }
}

void UpstreamLocalityStats::MergeFrom(const UpstreamLocalityStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.UpstreamLocalityStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tcp_errors_.MergeFrom(from.tcp_errors_);
  http_errors_.MergeFrom(from.http_errors_);
  grpc_errors_.MergeFrom(from.grpc_errors_);
  load_metric_stats_.MergeFrom(from.load_metric_stats_);
  if (from.locality().size() > 0) {

    locality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locality_);
  }
  if (from.total_requests() != 0) {
    set_total_requests(from.total_requests());
  }
  if (from.total_requests_in_progress() != 0) {
    set_total_requests_in_progress(from.total_requests_in_progress());
  }
  if (from.dropped_requests() != 0) {
    set_dropped_requests(from.dropped_requests());
  }
}

void UpstreamLocalityStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.UpstreamLocalityStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpstreamLocalityStats::CopyFrom(const UpstreamLocalityStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.UpstreamLocalityStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpstreamLocalityStats::IsInitialized() const {
  return true;
}

void UpstreamLocalityStats::Swap(UpstreamLocalityStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpstreamLocalityStats::InternalSwap(UpstreamLocalityStats* other) {
  tcp_errors_.Swap(&other->tcp_errors_);
  http_errors_.Swap(&other->http_errors_);
  grpc_errors_.Swap(&other->grpc_errors_);
  load_metric_stats_.UnsafeArenaSwap(&other->load_metric_stats_);
  locality_.Swap(&other->locality_);
  std::swap(total_requests_, other->total_requests_);
  std::swap(total_requests_in_progress_, other->total_requests_in_progress_);
  std::swap(dropped_requests_, other->dropped_requests_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpstreamLocalityStats::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpstreamLocalityStats

// string Locality = 1;
void UpstreamLocalityStats::clear_locality() {
  locality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpstreamLocalityStats::locality() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.Locality)
  return locality_.GetNoArena();
}
void UpstreamLocalityStats::set_locality(const ::std::string& value) {
  
  locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.UpstreamLocalityStats.Locality)
}
#if LANG_CXX11
void UpstreamLocalityStats::set_locality(::std::string&& value) {
  
  locality_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.UpstreamLocalityStats.Locality)
}
#endif
void UpstreamLocalityStats::set_locality(const char* value) {
  
  locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.UpstreamLocalityStats.Locality)
}
void UpstreamLocalityStats::set_locality(const char* value, size_t size) {
  
  locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.UpstreamLocalityStats.Locality)
}
::std::string* UpstreamLocalityStats::mutable_locality() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.UpstreamLocalityStats.Locality)
  return locality_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpstreamLocalityStats::release_locality() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.UpstreamLocalityStats.Locality)
  
  return locality_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpstreamLocalityStats::set_allocated_locality(::std::string* locality) {
  if (locality != NULL) {
    
  } else {
    
  }
  locality_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locality);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.UpstreamLocalityStats.Locality)
}

// uint64 total_requests = 2;
void UpstreamLocalityStats::clear_total_requests() {
  total_requests_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UpstreamLocalityStats::total_requests() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.total_requests)
  return total_requests_;
}
void UpstreamLocalityStats::set_total_requests(::google::protobuf::uint64 value) {
  
  total_requests_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.UpstreamLocalityStats.total_requests)
}

// uint64 total_requests_in_progress = 3;
void UpstreamLocalityStats::clear_total_requests_in_progress() {
  total_requests_in_progress_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UpstreamLocalityStats::total_requests_in_progress() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.total_requests_in_progress)
  return total_requests_in_progress_;
}
void UpstreamLocalityStats::set_total_requests_in_progress(::google::protobuf::uint64 value) {
  
  total_requests_in_progress_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.UpstreamLocalityStats.total_requests_in_progress)
}

// map<uint32, uint64> tcp_errors = 4;
int UpstreamLocalityStats::tcp_errors_size() const {
  return tcp_errors_.size();
}
void UpstreamLocalityStats::clear_tcp_errors() {
  tcp_errors_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >&
UpstreamLocalityStats::tcp_errors() const {
  // @@protoc_insertion_point(field_map:envoy.api.v2.UpstreamLocalityStats.tcp_errors)
  return tcp_errors_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >*
UpstreamLocalityStats::mutable_tcp_errors() {
  // @@protoc_insertion_point(field_mutable_map:envoy.api.v2.UpstreamLocalityStats.tcp_errors)
  return tcp_errors_.MutableMap();
}

// map<uint32, uint64> http_errors = 5;
int UpstreamLocalityStats::http_errors_size() const {
  return http_errors_.size();
}
void UpstreamLocalityStats::clear_http_errors() {
  http_errors_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >&
UpstreamLocalityStats::http_errors() const {
  // @@protoc_insertion_point(field_map:envoy.api.v2.UpstreamLocalityStats.http_errors)
  return http_errors_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >*
UpstreamLocalityStats::mutable_http_errors() {
  // @@protoc_insertion_point(field_mutable_map:envoy.api.v2.UpstreamLocalityStats.http_errors)
  return http_errors_.MutableMap();
}

// map<uint32, uint64> grpc_errors = 6;
int UpstreamLocalityStats::grpc_errors_size() const {
  return grpc_errors_.size();
}
void UpstreamLocalityStats::clear_grpc_errors() {
  grpc_errors_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >&
UpstreamLocalityStats::grpc_errors() const {
  // @@protoc_insertion_point(field_map:envoy.api.v2.UpstreamLocalityStats.grpc_errors)
  return grpc_errors_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >*
UpstreamLocalityStats::mutable_grpc_errors() {
  // @@protoc_insertion_point(field_mutable_map:envoy.api.v2.UpstreamLocalityStats.grpc_errors)
  return grpc_errors_.MutableMap();
}

// uint64 dropped_requests = 7;
void UpstreamLocalityStats::clear_dropped_requests() {
  dropped_requests_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UpstreamLocalityStats::dropped_requests() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.dropped_requests)
  return dropped_requests_;
}
void UpstreamLocalityStats::set_dropped_requests(::google::protobuf::uint64 value) {
  
  dropped_requests_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.UpstreamLocalityStats.dropped_requests)
}

// repeated .envoy.api.v2.EndpointLoadMetricStats load_metric_stats = 8;
int UpstreamLocalityStats::load_metric_stats_size() const {
  return load_metric_stats_.size();
}
void UpstreamLocalityStats::clear_load_metric_stats() {
  load_metric_stats_.Clear();
}
const ::envoy::api::v2::EndpointLoadMetricStats& UpstreamLocalityStats::load_metric_stats(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return load_metric_stats_.Get(index);
}
::envoy::api::v2::EndpointLoadMetricStats* UpstreamLocalityStats::mutable_load_metric_stats(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return load_metric_stats_.Mutable(index);
}
::envoy::api::v2::EndpointLoadMetricStats* UpstreamLocalityStats::add_load_metric_stats() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return load_metric_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointLoadMetricStats >*
UpstreamLocalityStats::mutable_load_metric_stats() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return &load_metric_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointLoadMetricStats >&
UpstreamLocalityStats::load_metric_stats() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.UpstreamLocalityStats.load_metric_stats)
  return load_metric_stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterStats::kClusterNameFieldNumber;
const int ClusterStats::kUpstreamLocalityStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterStats::ClusterStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterStats)
}
ClusterStats::ClusterStats(const ClusterStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      upstream_locality_stats_(from.upstream_locality_stats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterStats)
}

void ClusterStats::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClusterStats::~ClusterStats() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterStats)
  SharedDtor();
}

void ClusterStats::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClusterStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterStats::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[7].descriptor;
}

const ClusterStats& ClusterStats::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClusterStats* ClusterStats::New(::google::protobuf::Arena* arena) const {
  ClusterStats* n = new ClusterStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterStats::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterStats)
  upstream_locality_stats_.Clear();
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ClusterStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), this->cluster_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ClusterStats.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_upstream_locality_stats()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterStats)
  return false;
#undef DO_
}

void ClusterStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterStats)
  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), this->cluster_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterStats.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
  for (unsigned int i = 0, n = this->upstream_locality_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->upstream_locality_stats(i), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterStats)
}

::google::protobuf::uint8* ClusterStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterStats)
  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), this->cluster_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterStats.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_name(), target);
  }

  // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
  for (unsigned int i = 0, n = this->upstream_locality_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->upstream_locality_stats(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterStats)
  return target;
}

size_t ClusterStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterStats)
  size_t total_size = 0;

  // repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
  {
    unsigned int count = this->upstream_locality_stats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->upstream_locality_stats(i));
    }
  }

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterStats)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterStats)
    MergeFrom(*source);
  }
}

void ClusterStats::MergeFrom(const ClusterStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  upstream_locality_stats_.MergeFrom(from.upstream_locality_stats_);
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
}

void ClusterStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterStats::CopyFrom(const ClusterStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterStats::IsInitialized() const {
  return true;
}

void ClusterStats::Swap(ClusterStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterStats::InternalSwap(ClusterStats* other) {
  upstream_locality_stats_.UnsafeArenaSwap(&other->upstream_locality_stats_);
  cluster_name_.Swap(&other->cluster_name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterStats::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterStats

// string cluster_name = 1;
void ClusterStats::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterStats::cluster_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterStats.cluster_name)
  return cluster_name_.GetNoArena();
}
void ClusterStats::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterStats.cluster_name)
}
#if LANG_CXX11
void ClusterStats::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ClusterStats.cluster_name)
}
#endif
void ClusterStats::set_cluster_name(const char* value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ClusterStats.cluster_name)
}
void ClusterStats::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ClusterStats.cluster_name)
}
::std::string* ClusterStats::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterStats.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterStats::release_cluster_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterStats.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterStats::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterStats.cluster_name)
}

// repeated .envoy.api.v2.UpstreamLocalityStats upstream_locality_stats = 2;
int ClusterStats::upstream_locality_stats_size() const {
  return upstream_locality_stats_.size();
}
void ClusterStats::clear_upstream_locality_stats() {
  upstream_locality_stats_.Clear();
}
const ::envoy::api::v2::UpstreamLocalityStats& ClusterStats::upstream_locality_stats(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return upstream_locality_stats_.Get(index);
}
::envoy::api::v2::UpstreamLocalityStats* ClusterStats::mutable_upstream_locality_stats(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return upstream_locality_stats_.Mutable(index);
}
::envoy::api::v2::UpstreamLocalityStats* ClusterStats::add_upstream_locality_stats() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return upstream_locality_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::UpstreamLocalityStats >*
ClusterStats::mutable_upstream_locality_stats() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return &upstream_locality_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::UpstreamLocalityStats >&
ClusterStats::upstream_locality_stats() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ClusterStats.upstream_locality_stats)
  return upstream_locality_stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadAssignmentRequest::kVersionInfoFieldNumber;
const int LoadAssignmentRequest::kNodeFieldNumber;
const int LoadAssignmentRequest::kClusterStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadAssignmentRequest::LoadAssignmentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LoadAssignmentRequest)
}
LoadAssignmentRequest::LoadAssignmentRequest(const LoadAssignmentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cluster_stats_(from.cluster_stats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_info().size() > 0) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.has_node()) {
    node_ = new ::envoy::api::v2::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LoadAssignmentRequest)
}

void LoadAssignmentRequest::SharedCtor() {
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ = NULL;
  _cached_size_ = 0;
}

LoadAssignmentRequest::~LoadAssignmentRequest() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LoadAssignmentRequest)
  SharedDtor();
}

void LoadAssignmentRequest::SharedDtor() {
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete node_;
  }
}

void LoadAssignmentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadAssignmentRequest::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[8].descriptor;
}

const LoadAssignmentRequest& LoadAssignmentRequest::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoadAssignmentRequest* LoadAssignmentRequest::New(::google::protobuf::Arena* arena) const {
  LoadAssignmentRequest* n = new LoadAssignmentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadAssignmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LoadAssignmentRequest)
  cluster_stats_.Clear();
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
}

bool LoadAssignmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LoadAssignmentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes version_info = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Node node = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.ClusterStats cluster_stats = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cluster_stats()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LoadAssignmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LoadAssignmentRequest)
  return false;
#undef DO_
}

void LoadAssignmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LoadAssignmentRequest)
  // bytes version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->version_info(), output);
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->node_, output);
  }

  // repeated .envoy.api.v2.ClusterStats cluster_stats = 3;
  for (unsigned int i = 0, n = this->cluster_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cluster_stats(i), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LoadAssignmentRequest)
}

::google::protobuf::uint8* LoadAssignmentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LoadAssignmentRequest)
  // bytes version_info = 1;
  if (this->version_info().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->version_info(), target);
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->node_, false, target);
  }

  // repeated .envoy.api.v2.ClusterStats cluster_stats = 3;
  for (unsigned int i = 0, n = this->cluster_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->cluster_stats(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LoadAssignmentRequest)
  return target;
}

size_t LoadAssignmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LoadAssignmentRequest)
  size_t total_size = 0;

  // repeated .envoy.api.v2.ClusterStats cluster_stats = 3;
  {
    unsigned int count = this->cluster_stats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cluster_stats(i));
    }
  }

  // bytes version_info = 1;
  if (this->version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version_info());
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadAssignmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LoadAssignmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadAssignmentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadAssignmentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LoadAssignmentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LoadAssignmentRequest)
    MergeFrom(*source);
  }
}

void LoadAssignmentRequest::MergeFrom(const LoadAssignmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LoadAssignmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_stats_.MergeFrom(from.cluster_stats_);
  if (from.version_info().size() > 0) {

    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.has_node()) {
    mutable_node()->::envoy::api::v2::Node::MergeFrom(from.node());
  }
}

void LoadAssignmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LoadAssignmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadAssignmentRequest::CopyFrom(const LoadAssignmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LoadAssignmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadAssignmentRequest::IsInitialized() const {
  return true;
}

void LoadAssignmentRequest::Swap(LoadAssignmentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadAssignmentRequest::InternalSwap(LoadAssignmentRequest* other) {
  cluster_stats_.UnsafeArenaSwap(&other->cluster_stats_);
  version_info_.Swap(&other->version_info_);
  std::swap(node_, other->node_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadAssignmentRequest::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadAssignmentRequest

// bytes version_info = 1;
void LoadAssignmentRequest::clear_version_info() {
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoadAssignmentRequest::version_info() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadAssignmentRequest.version_info)
  return version_info_.GetNoArena();
}
void LoadAssignmentRequest::set_version_info(const ::std::string& value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.LoadAssignmentRequest.version_info)
}
#if LANG_CXX11
void LoadAssignmentRequest::set_version_info(::std::string&& value) {
  
  version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.LoadAssignmentRequest.version_info)
}
#endif
void LoadAssignmentRequest::set_version_info(const char* value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.LoadAssignmentRequest.version_info)
}
void LoadAssignmentRequest::set_version_info(const void* value, size_t size) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.LoadAssignmentRequest.version_info)
}
::std::string* LoadAssignmentRequest::mutable_version_info() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadAssignmentRequest.version_info)
  return version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoadAssignmentRequest::release_version_info() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LoadAssignmentRequest.version_info)
  
  return version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoadAssignmentRequest::set_allocated_version_info(::std::string* version_info) {
  if (version_info != NULL) {
    
  } else {
    
  }
  version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_info);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LoadAssignmentRequest.version_info)
}

// .envoy.api.v2.Node node = 2;
bool LoadAssignmentRequest::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
void LoadAssignmentRequest::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
const ::envoy::api::v2::Node& LoadAssignmentRequest::node() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadAssignmentRequest.node)
  return node_ != NULL ? *node_
                         : *::envoy::api::v2::Node::internal_default_instance();
}
::envoy::api::v2::Node* LoadAssignmentRequest::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::envoy::api::v2::Node;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadAssignmentRequest.node)
  return node_;
}
::envoy::api::v2::Node* LoadAssignmentRequest::release_node() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LoadAssignmentRequest.node)
  
  ::envoy::api::v2::Node* temp = node_;
  node_ = NULL;
  return temp;
}
void LoadAssignmentRequest::set_allocated_node(::envoy::api::v2::Node* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LoadAssignmentRequest.node)
}

// repeated .envoy.api.v2.ClusterStats cluster_stats = 3;
int LoadAssignmentRequest::cluster_stats_size() const {
  return cluster_stats_.size();
}
void LoadAssignmentRequest::clear_cluster_stats() {
  cluster_stats_.Clear();
}
const ::envoy::api::v2::ClusterStats& LoadAssignmentRequest::cluster_stats(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadAssignmentRequest.cluster_stats)
  return cluster_stats_.Get(index);
}
::envoy::api::v2::ClusterStats* LoadAssignmentRequest::mutable_cluster_stats(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadAssignmentRequest.cluster_stats)
  return cluster_stats_.Mutable(index);
}
::envoy::api::v2::ClusterStats* LoadAssignmentRequest::add_cluster_stats() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.LoadAssignmentRequest.cluster_stats)
  return cluster_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterStats >*
LoadAssignmentRequest::mutable_cluster_stats() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.LoadAssignmentRequest.cluster_stats)
  return &cluster_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterStats >&
LoadAssignmentRequest::cluster_stats() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.LoadAssignmentRequest.cluster_stats)
  return cluster_stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterLoadAssignment_Policy::kDropOverloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterLoadAssignment_Policy::ClusterLoadAssignment_Policy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterLoadAssignment.Policy)
}
ClusterLoadAssignment_Policy::ClusterLoadAssignment_Policy(const ClusterLoadAssignment_Policy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drop_overload_ = from.drop_overload_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterLoadAssignment.Policy)
}

void ClusterLoadAssignment_Policy::SharedCtor() {
  drop_overload_ = 0;
  _cached_size_ = 0;
}

ClusterLoadAssignment_Policy::~ClusterLoadAssignment_Policy() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterLoadAssignment.Policy)
  SharedDtor();
}

void ClusterLoadAssignment_Policy::SharedDtor() {
}

void ClusterLoadAssignment_Policy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterLoadAssignment_Policy::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[9].descriptor;
}

const ClusterLoadAssignment_Policy& ClusterLoadAssignment_Policy::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClusterLoadAssignment_Policy* ClusterLoadAssignment_Policy::New(::google::protobuf::Arena* arena) const {
  ClusterLoadAssignment_Policy* n = new ClusterLoadAssignment_Policy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterLoadAssignment_Policy::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  drop_overload_ = 0;
}

bool ClusterLoadAssignment_Policy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double drop_overload = 1;
      case 1: {
        if (tag == 9u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &drop_overload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterLoadAssignment.Policy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterLoadAssignment.Policy)
  return false;
#undef DO_
}

void ClusterLoadAssignment_Policy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  // double drop_overload = 1;
  if (this->drop_overload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->drop_overload(), output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterLoadAssignment.Policy)
}

::google::protobuf::uint8* ClusterLoadAssignment_Policy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  // double drop_overload = 1;
  if (this->drop_overload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->drop_overload(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterLoadAssignment.Policy)
  return target;
}

size_t ClusterLoadAssignment_Policy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  size_t total_size = 0;

  // double drop_overload = 1;
  if (this->drop_overload() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterLoadAssignment_Policy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterLoadAssignment_Policy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterLoadAssignment_Policy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterLoadAssignment.Policy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterLoadAssignment.Policy)
    MergeFrom(*source);
  }
}

void ClusterLoadAssignment_Policy::MergeFrom(const ClusterLoadAssignment_Policy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.drop_overload() != 0) {
    set_drop_overload(from.drop_overload());
  }
}

void ClusterLoadAssignment_Policy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterLoadAssignment_Policy::CopyFrom(const ClusterLoadAssignment_Policy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterLoadAssignment.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterLoadAssignment_Policy::IsInitialized() const {
  return true;
}

void ClusterLoadAssignment_Policy::Swap(ClusterLoadAssignment_Policy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterLoadAssignment_Policy::InternalSwap(ClusterLoadAssignment_Policy* other) {
  std::swap(drop_overload_, other->drop_overload_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterLoadAssignment_Policy::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterLoadAssignment_Policy

// double drop_overload = 1;
void ClusterLoadAssignment_Policy::clear_drop_overload() {
  drop_overload_ = 0;
}
double ClusterLoadAssignment_Policy::drop_overload() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.Policy.drop_overload)
  return drop_overload_;
}
void ClusterLoadAssignment_Policy::set_drop_overload(double value) {
  
  drop_overload_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterLoadAssignment.Policy.drop_overload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterLoadAssignment::kClusterNameFieldNumber;
const int ClusterLoadAssignment::kEndpointsFieldNumber;
const int ClusterLoadAssignment::kFailoverEndpointsFieldNumber;
const int ClusterLoadAssignment::kPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterLoadAssignment::ClusterLoadAssignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.ClusterLoadAssignment)
}
ClusterLoadAssignment::ClusterLoadAssignment(const ClusterLoadAssignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      endpoints_(from.endpoints_),
      failover_endpoints_(from.failover_endpoints_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.has_policy()) {
    policy_ = new ::envoy::api::v2::ClusterLoadAssignment_Policy(*from.policy_);
  } else {
    policy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.ClusterLoadAssignment)
}

void ClusterLoadAssignment::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  policy_ = NULL;
  _cached_size_ = 0;
}

ClusterLoadAssignment::~ClusterLoadAssignment() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.ClusterLoadAssignment)
  SharedDtor();
}

void ClusterLoadAssignment::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete policy_;
  }
}

void ClusterLoadAssignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterLoadAssignment::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[10].descriptor;
}

const ClusterLoadAssignment& ClusterLoadAssignment::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClusterLoadAssignment* ClusterLoadAssignment::New(::google::protobuf::Arena* arena) const {
  ClusterLoadAssignment* n = new ClusterLoadAssignment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterLoadAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.ClusterLoadAssignment)
  endpoints_.Clear();
  failover_endpoints_.Clear();
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && policy_ != NULL) {
    delete policy_;
  }
  policy_ = NULL;
}

bool ClusterLoadAssignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.ClusterLoadAssignment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), this->cluster_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.ClusterLoadAssignment.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_endpoints()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_failover_endpoints()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.ClusterLoadAssignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.ClusterLoadAssignment)
  return false;
#undef DO_
}

void ClusterLoadAssignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.ClusterLoadAssignment)
  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), this->cluster_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterLoadAssignment.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
  for (unsigned int i = 0, n = this->endpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->endpoints(i), output);
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
  for (unsigned int i = 0, n = this->failover_endpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->failover_endpoints(i), output);
  }

  // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
  if (this->has_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->policy_, output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.ClusterLoadAssignment)
}

::google::protobuf::uint8* ClusterLoadAssignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.ClusterLoadAssignment)
  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), this->cluster_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.ClusterLoadAssignment.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cluster_name(), target);
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
  for (unsigned int i = 0, n = this->endpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->endpoints(i), false, target);
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
  for (unsigned int i = 0, n = this->failover_endpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->failover_endpoints(i), false, target);
  }

  // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
  if (this->has_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->policy_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.ClusterLoadAssignment)
  return target;
}

size_t ClusterLoadAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.ClusterLoadAssignment)
  size_t total_size = 0;

  // repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
  {
    unsigned int count = this->endpoints_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->endpoints(i));
    }
  }

  // repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
  {
    unsigned int count = this->failover_endpoints_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->failover_endpoints(i));
    }
  }

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
  if (this->has_policy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->policy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterLoadAssignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.ClusterLoadAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterLoadAssignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterLoadAssignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.ClusterLoadAssignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.ClusterLoadAssignment)
    MergeFrom(*source);
  }
}

void ClusterLoadAssignment::MergeFrom(const ClusterLoadAssignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.ClusterLoadAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  endpoints_.MergeFrom(from.endpoints_);
  failover_endpoints_.MergeFrom(from.failover_endpoints_);
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.has_policy()) {
    mutable_policy()->::envoy::api::v2::ClusterLoadAssignment_Policy::MergeFrom(from.policy());
  }
}

void ClusterLoadAssignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.ClusterLoadAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterLoadAssignment::CopyFrom(const ClusterLoadAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.ClusterLoadAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterLoadAssignment::IsInitialized() const {
  return true;
}

void ClusterLoadAssignment::Swap(ClusterLoadAssignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterLoadAssignment::InternalSwap(ClusterLoadAssignment* other) {
  endpoints_.UnsafeArenaSwap(&other->endpoints_);
  failover_endpoints_.UnsafeArenaSwap(&other->failover_endpoints_);
  cluster_name_.Swap(&other->cluster_name_);
  std::swap(policy_, other->policy_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterLoadAssignment::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterLoadAssignment

// string cluster_name = 1;
void ClusterLoadAssignment::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterLoadAssignment::cluster_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.cluster_name)
  return cluster_name_.GetNoArena();
}
void ClusterLoadAssignment::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}
#if LANG_CXX11
void ClusterLoadAssignment::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}
#endif
void ClusterLoadAssignment::set_cluster_name(const char* value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}
void ClusterLoadAssignment::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}
::std::string* ClusterLoadAssignment::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterLoadAssignment.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterLoadAssignment::release_cluster_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterLoadAssignment.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterLoadAssignment::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterLoadAssignment.cluster_name)
}

// repeated .envoy.api.v2.LocalityLbEndpoints endpoints = 2;
int ClusterLoadAssignment::endpoints_size() const {
  return endpoints_.size();
}
void ClusterLoadAssignment::clear_endpoints() {
  endpoints_.Clear();
}
const ::envoy::api::v2::LocalityLbEndpoints& ClusterLoadAssignment::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return endpoints_.Get(index);
}
::envoy::api::v2::LocalityLbEndpoints* ClusterLoadAssignment::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return endpoints_.Mutable(index);
}
::envoy::api::v2::LocalityLbEndpoints* ClusterLoadAssignment::add_endpoints() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return endpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >*
ClusterLoadAssignment::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return &endpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >&
ClusterLoadAssignment::endpoints() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ClusterLoadAssignment.endpoints)
  return endpoints_;
}

// repeated .envoy.api.v2.LocalityLbEndpoints failover_endpoints = 3;
int ClusterLoadAssignment::failover_endpoints_size() const {
  return failover_endpoints_.size();
}
void ClusterLoadAssignment::clear_failover_endpoints() {
  failover_endpoints_.Clear();
}
const ::envoy::api::v2::LocalityLbEndpoints& ClusterLoadAssignment::failover_endpoints(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return failover_endpoints_.Get(index);
}
::envoy::api::v2::LocalityLbEndpoints* ClusterLoadAssignment::mutable_failover_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return failover_endpoints_.Mutable(index);
}
::envoy::api::v2::LocalityLbEndpoints* ClusterLoadAssignment::add_failover_endpoints() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return failover_endpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >*
ClusterLoadAssignment::mutable_failover_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return &failover_endpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityLbEndpoints >&
ClusterLoadAssignment::failover_endpoints() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ClusterLoadAssignment.failover_endpoints)
  return failover_endpoints_;
}

// .envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;
bool ClusterLoadAssignment::has_policy() const {
  return this != internal_default_instance() && policy_ != NULL;
}
void ClusterLoadAssignment::clear_policy() {
  if (GetArenaNoVirtual() == NULL && policy_ != NULL) delete policy_;
  policy_ = NULL;
}
const ::envoy::api::v2::ClusterLoadAssignment_Policy& ClusterLoadAssignment::policy() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterLoadAssignment.policy)
  return policy_ != NULL ? *policy_
                         : *::envoy::api::v2::ClusterLoadAssignment_Policy::internal_default_instance();
}
::envoy::api::v2::ClusterLoadAssignment_Policy* ClusterLoadAssignment::mutable_policy() {
  
  if (policy_ == NULL) {
    policy_ = new ::envoy::api::v2::ClusterLoadAssignment_Policy;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterLoadAssignment.policy)
  return policy_;
}
::envoy::api::v2::ClusterLoadAssignment_Policy* ClusterLoadAssignment::release_policy() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterLoadAssignment.policy)
  
  ::envoy::api::v2::ClusterLoadAssignment_Policy* temp = policy_;
  policy_ = NULL;
  return temp;
}
void ClusterLoadAssignment::set_allocated_policy(::envoy::api::v2::ClusterLoadAssignment_Policy* policy) {
  delete policy_;
  policy_ = policy;
  if (policy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterLoadAssignment.policy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadAssignmentResponse::kVersionInfoFieldNumber;
const int LoadAssignmentResponse::kClustersFieldNumber;
const int LoadAssignmentResponse::kLoadReportingIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadAssignmentResponse::LoadAssignmentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2feds_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.LoadAssignmentResponse)
}
LoadAssignmentResponse::LoadAssignmentResponse(const LoadAssignmentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_info().size() > 0) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.has_load_reporting_interval()) {
    load_reporting_interval_ = new ::google::protobuf::Duration(*from.load_reporting_interval_);
  } else {
    load_reporting_interval_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.LoadAssignmentResponse)
}

void LoadAssignmentResponse::SharedCtor() {
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_reporting_interval_ = NULL;
  _cached_size_ = 0;
}

LoadAssignmentResponse::~LoadAssignmentResponse() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.LoadAssignmentResponse)
  SharedDtor();
}

void LoadAssignmentResponse::SharedDtor() {
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete load_reporting_interval_;
  }
}

void LoadAssignmentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadAssignmentResponse::descriptor() {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[11].descriptor;
}

const LoadAssignmentResponse& LoadAssignmentResponse::default_instance() {
  protobuf_api_2feds_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoadAssignmentResponse* LoadAssignmentResponse::New(::google::protobuf::Arena* arena) const {
  LoadAssignmentResponse* n = new LoadAssignmentResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadAssignmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.LoadAssignmentResponse)
  clusters_.Clear();
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && load_reporting_interval_ != NULL) {
    delete load_reporting_interval_;
  }
  load_reporting_interval_ = NULL;
}

bool LoadAssignmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.LoadAssignmentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes version_info = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .envoy.api.v2.ClusterLoadAssignment clusters = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .google.protobuf.Duration load_reporting_interval = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_load_reporting_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.LoadAssignmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.LoadAssignmentResponse)
  return false;
#undef DO_
}

void LoadAssignmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.LoadAssignmentResponse)
  // bytes version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->version_info(), output);
  }

  // repeated .envoy.api.v2.ClusterLoadAssignment clusters = 2;
  for (unsigned int i = 0, n = this->clusters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->clusters(i), output);
  }

  // .google.protobuf.Duration load_reporting_interval = 3;
  if (this->has_load_reporting_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->load_reporting_interval_, output);
  }

  // @@protoc_insertion_point(serialize_end:envoy.api.v2.LoadAssignmentResponse)
}

::google::protobuf::uint8* LoadAssignmentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.LoadAssignmentResponse)
  // bytes version_info = 1;
  if (this->version_info().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->version_info(), target);
  }

  // repeated .envoy.api.v2.ClusterLoadAssignment clusters = 2;
  for (unsigned int i = 0, n = this->clusters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->clusters(i), false, target);
  }

  // .google.protobuf.Duration load_reporting_interval = 3;
  if (this->has_load_reporting_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->load_reporting_interval_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.LoadAssignmentResponse)
  return target;
}

size_t LoadAssignmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.LoadAssignmentResponse)
  size_t total_size = 0;

  // repeated .envoy.api.v2.ClusterLoadAssignment clusters = 2;
  {
    unsigned int count = this->clusters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clusters(i));
    }
  }

  // bytes version_info = 1;
  if (this->version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version_info());
  }

  // .google.protobuf.Duration load_reporting_interval = 3;
  if (this->has_load_reporting_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->load_reporting_interval_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadAssignmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.LoadAssignmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadAssignmentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadAssignmentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.LoadAssignmentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.LoadAssignmentResponse)
    MergeFrom(*source);
  }
}

void LoadAssignmentResponse::MergeFrom(const LoadAssignmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.LoadAssignmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clusters_.MergeFrom(from.clusters_);
  if (from.version_info().size() > 0) {

    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.has_load_reporting_interval()) {
    mutable_load_reporting_interval()->::google::protobuf::Duration::MergeFrom(from.load_reporting_interval());
  }
}

void LoadAssignmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.LoadAssignmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadAssignmentResponse::CopyFrom(const LoadAssignmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.LoadAssignmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadAssignmentResponse::IsInitialized() const {
  return true;
}

void LoadAssignmentResponse::Swap(LoadAssignmentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadAssignmentResponse::InternalSwap(LoadAssignmentResponse* other) {
  clusters_.UnsafeArenaSwap(&other->clusters_);
  version_info_.Swap(&other->version_info_);
  std::swap(load_reporting_interval_, other->load_reporting_interval_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadAssignmentResponse::GetMetadata() const {
  protobuf_api_2feds_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2feds_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadAssignmentResponse

// bytes version_info = 1;
void LoadAssignmentResponse::clear_version_info() {
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoadAssignmentResponse::version_info() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadAssignmentResponse.version_info)
  return version_info_.GetNoArena();
}
void LoadAssignmentResponse::set_version_info(const ::std::string& value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.LoadAssignmentResponse.version_info)
}
#if LANG_CXX11
void LoadAssignmentResponse::set_version_info(::std::string&& value) {
  
  version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.LoadAssignmentResponse.version_info)
}
#endif
void LoadAssignmentResponse::set_version_info(const char* value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.LoadAssignmentResponse.version_info)
}
void LoadAssignmentResponse::set_version_info(const void* value, size_t size) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.LoadAssignmentResponse.version_info)
}
::std::string* LoadAssignmentResponse::mutable_version_info() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadAssignmentResponse.version_info)
  return version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoadAssignmentResponse::release_version_info() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LoadAssignmentResponse.version_info)
  
  return version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoadAssignmentResponse::set_allocated_version_info(::std::string* version_info) {
  if (version_info != NULL) {
    
  } else {
    
  }
  version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_info);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LoadAssignmentResponse.version_info)
}

// repeated .envoy.api.v2.ClusterLoadAssignment clusters = 2;
int LoadAssignmentResponse::clusters_size() const {
  return clusters_.size();
}
void LoadAssignmentResponse::clear_clusters() {
  clusters_.Clear();
}
const ::envoy::api::v2::ClusterLoadAssignment& LoadAssignmentResponse::clusters(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadAssignmentResponse.clusters)
  return clusters_.Get(index);
}
::envoy::api::v2::ClusterLoadAssignment* LoadAssignmentResponse::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadAssignmentResponse.clusters)
  return clusters_.Mutable(index);
}
::envoy::api::v2::ClusterLoadAssignment* LoadAssignmentResponse::add_clusters() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.LoadAssignmentResponse.clusters)
  return clusters_.Add();
}
::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterLoadAssignment >*
LoadAssignmentResponse::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.LoadAssignmentResponse.clusters)
  return &clusters_;
}
const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterLoadAssignment >&
LoadAssignmentResponse::clusters() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.LoadAssignmentResponse.clusters)
  return clusters_;
}

// .google.protobuf.Duration load_reporting_interval = 3;
bool LoadAssignmentResponse::has_load_reporting_interval() const {
  return this != internal_default_instance() && load_reporting_interval_ != NULL;
}
void LoadAssignmentResponse::clear_load_reporting_interval() {
  if (GetArenaNoVirtual() == NULL && load_reporting_interval_ != NULL) delete load_reporting_interval_;
  load_reporting_interval_ = NULL;
}
const ::google::protobuf::Duration& LoadAssignmentResponse::load_reporting_interval() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LoadAssignmentResponse.load_reporting_interval)
  return load_reporting_interval_ != NULL ? *load_reporting_interval_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* LoadAssignmentResponse::mutable_load_reporting_interval() {
  
  if (load_reporting_interval_ == NULL) {
    load_reporting_interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LoadAssignmentResponse.load_reporting_interval)
  return load_reporting_interval_;
}
::google::protobuf::Duration* LoadAssignmentResponse::release_load_reporting_interval() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LoadAssignmentResponse.load_reporting_interval)
  
  ::google::protobuf::Duration* temp = load_reporting_interval_;
  load_reporting_interval_ = NULL;
  return temp;
}
void LoadAssignmentResponse::set_allocated_load_reporting_interval(::google::protobuf::Duration* load_reporting_interval) {
  delete load_reporting_interval_;
  if (load_reporting_interval != NULL && load_reporting_interval->GetArena() != NULL) {
    ::google::protobuf::Duration* new_load_reporting_interval = new ::google::protobuf::Duration;
    new_load_reporting_interval->CopyFrom(*load_reporting_interval);
    load_reporting_interval = new_load_reporting_interval;
  }
  load_reporting_interval_ = load_reporting_interval;
  if (load_reporting_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LoadAssignmentResponse.load_reporting_interval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
