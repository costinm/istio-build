// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/discovery.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api/discovery.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace envoy {
namespace api {
namespace v2 {
class DiscoveryRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DiscoveryRequest>
     _instance;
} _DiscoveryRequest_default_instance_;
class DiscoveryResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DiscoveryResponse>
     _instance;
} _DiscoveryResponse_default_instance_;

namespace protobuf_api_2fdiscovery_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, resource_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, type_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryRequest, response_nonce_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, canary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, type_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscoveryResponse, nonce_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(DiscoveryRequest)},
  { 10, -1, sizeof(DiscoveryResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DiscoveryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DiscoveryResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api/discovery.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  _DiscoveryRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DiscoveryRequest_default_instance_);_DiscoveryResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DiscoveryResponse_default_instance_);_DiscoveryRequest_default_instance_._instance.get_mutable()->node_ = const_cast< ::envoy::api::v2::Node*>(
      ::envoy::api::v2::Node::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023api/discovery.proto\022\014envoy.api.v2\032\016api"
      "/base.proto\032\031google/protobuf/any.proto\"\214"
      "\001\n\020DiscoveryRequest\022\024\n\014version_info\030\001 \001("
      "\t\022 \n\004node\030\002 \001(\0132\022.envoy.api.v2.Node\022\026\n\016r"
      "esource_names\030\003 \003(\t\022\020\n\010type_url\030\004 \001(\t\022\026\n"
      "\016response_nonce\030\005 \001(\t\"\203\001\n\021DiscoveryRespo"
      "nse\022\024\n\014version_info\030\001 \001(\t\022\'\n\tresources\030\002"
      " \003(\0132\024.google.protobuf.Any\022\016\n\006canary\030\003 \001"
      "(\010\022\020\n\010type_url\030\004 \001(\t\022\r\n\005nonce\030\005 \001(\t2\200\001\n\032"
      "AggregatedDiscoveryService\022b\n\031StreamAggr"
      "egatedResources\022\036.envoy.api.v2.Discovery"
      "Request\032\037.envoy.api.v2.DiscoveryResponse"
      "\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 494);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/discovery.proto", &protobuf_RegisterTypes);
  ::envoy::api::v2::protobuf_api_2fbase_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2fdiscovery_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoveryRequest::kVersionInfoFieldNumber;
const int DiscoveryRequest::kNodeFieldNumber;
const int DiscoveryRequest::kResourceNamesFieldNumber;
const int DiscoveryRequest::kTypeUrlFieldNumber;
const int DiscoveryRequest::kResponseNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoveryRequest::DiscoveryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fdiscovery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.DiscoveryRequest)
}
DiscoveryRequest::DiscoveryRequest(const DiscoveryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resource_names_(from.resource_names_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_info().size() > 0) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_url().size() > 0) {
    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  response_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_nonce().size() > 0) {
    response_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_nonce_);
  }
  if (from.has_node()) {
    node_ = new ::envoy::api::v2::Node(*from.node_);
  } else {
    node_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.DiscoveryRequest)
}

void DiscoveryRequest::SharedCtor() {
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_ = NULL;
  _cached_size_ = 0;
}

DiscoveryRequest::~DiscoveryRequest() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.DiscoveryRequest)
  SharedDtor();
}

void DiscoveryRequest::SharedDtor() {
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete node_;
}

void DiscoveryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DiscoveryRequest::descriptor() {
  protobuf_api_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscoveryRequest& DiscoveryRequest::default_instance() {
  protobuf_api_2fdiscovery_2eproto::InitDefaults();
  return *internal_default_instance();
}

DiscoveryRequest* DiscoveryRequest::New(::google::protobuf::Arena* arena) const {
  DiscoveryRequest* n = new DiscoveryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DiscoveryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.DiscoveryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_names_.Clear();
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  _internal_metadata_.Clear();
}

bool DiscoveryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.DiscoveryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_info().data(), static_cast<int>(this->version_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryRequest.version_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .envoy.api.v2.Node node = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string resource_names = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resource_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_names(this->resource_names_size() - 1).data(),
            static_cast<int>(this->resource_names(this->resource_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryRequest.resource_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_url().data(), static_cast<int>(this->type_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryRequest.type_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_nonce = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryRequest.response_nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.DiscoveryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.DiscoveryRequest)
  return false;
#undef DO_
}

void DiscoveryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.DiscoveryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), static_cast<int>(this->version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.version_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version_info(), output);
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->node_, output);
  }

  // repeated string resource_names = 3;
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), static_cast<int>(this->resource_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.resource_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->resource_names(i), output);
  }

  // string type_url = 4;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.type_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type_url(), output);
  }

  // string response_nonce = 5;
  if (this->response_nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.response_nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->response_nonce(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.DiscoveryRequest)
}

::google::protobuf::uint8* DiscoveryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.DiscoveryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), static_cast<int>(this->version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.version_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version_info(), target);
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->node_, deterministic, target);
  }

  // repeated string resource_names = 3;
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), static_cast<int>(this->resource_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.resource_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->resource_names(i), target);
  }

  // string type_url = 4;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.type_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type_url(), target);
  }

  // string response_nonce = 5;
  if (this->response_nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryRequest.response_nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->response_nonce(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.DiscoveryRequest)
  return target;
}

size_t DiscoveryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.DiscoveryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string resource_names = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_names_size());
  for (int i = 0, n = this->resource_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resource_names(i));
  }

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_info());
  }

  // string type_url = 4;
  if (this->type_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_url());
  }

  // string response_nonce = 5;
  if (this->response_nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_nonce());
  }

  // .envoy.api.v2.Node node = 2;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DiscoveryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.DiscoveryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoveryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoveryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.DiscoveryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.DiscoveryRequest)
    MergeFrom(*source);
  }
}

void DiscoveryRequest::MergeFrom(const DiscoveryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.DiscoveryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_names_.MergeFrom(from.resource_names_);
  if (from.version_info().size() > 0) {

    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.type_url().size() > 0) {

    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  if (from.response_nonce().size() > 0) {

    response_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_nonce_);
  }
  if (from.has_node()) {
    mutable_node()->::envoy::api::v2::Node::MergeFrom(from.node());
  }
}

void DiscoveryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.DiscoveryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoveryRequest::CopyFrom(const DiscoveryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.DiscoveryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveryRequest::IsInitialized() const {
  return true;
}

void DiscoveryRequest::Swap(DiscoveryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoveryRequest::InternalSwap(DiscoveryRequest* other) {
  using std::swap;
  resource_names_.InternalSwap(&other->resource_names_);
  version_info_.Swap(&other->version_info_);
  type_url_.Swap(&other->type_url_);
  response_nonce_.Swap(&other->response_nonce_);
  swap(node_, other->node_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DiscoveryRequest::GetMetadata() const {
  protobuf_api_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DiscoveryRequest

// string version_info = 1;
void DiscoveryRequest::clear_version_info() {
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DiscoveryRequest::version_info() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryRequest.version_info)
  return version_info_.GetNoArena();
}
void DiscoveryRequest::set_version_info(const ::std::string& value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryRequest.version_info)
}
#if LANG_CXX11
void DiscoveryRequest::set_version_info(::std::string&& value) {
  
  version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.DiscoveryRequest.version_info)
}
#endif
void DiscoveryRequest::set_version_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryRequest.version_info)
}
void DiscoveryRequest::set_version_info(const char* value, size_t size) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryRequest.version_info)
}
::std::string* DiscoveryRequest::mutable_version_info() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryRequest.version_info)
  return version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DiscoveryRequest::release_version_info() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryRequest.version_info)
  
  return version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DiscoveryRequest::set_allocated_version_info(::std::string* version_info) {
  if (version_info != NULL) {
    
  } else {
    
  }
  version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_info);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryRequest.version_info)
}

// .envoy.api.v2.Node node = 2;
bool DiscoveryRequest::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
void DiscoveryRequest::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
const ::envoy::api::v2::Node& DiscoveryRequest::node() const {
  const ::envoy::api::v2::Node* p = node_;
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryRequest.node)
  return p != NULL ? *p : *reinterpret_cast<const ::envoy::api::v2::Node*>(
      &::envoy::api::v2::_Node_default_instance_);
}
::envoy::api::v2::Node* DiscoveryRequest::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::envoy::api::v2::Node;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryRequest.node)
  return node_;
}
::envoy::api::v2::Node* DiscoveryRequest::release_node() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryRequest.node)
  
  ::envoy::api::v2::Node* temp = node_;
  node_ = NULL;
  return temp;
}
void DiscoveryRequest::set_allocated_node(::envoy::api::v2::Node* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryRequest.node)
}

// repeated string resource_names = 3;
int DiscoveryRequest::resource_names_size() const {
  return resource_names_.size();
}
void DiscoveryRequest::clear_resource_names() {
  resource_names_.Clear();
}
const ::std::string& DiscoveryRequest::resource_names(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryRequest.resource_names)
  return resource_names_.Get(index);
}
::std::string* DiscoveryRequest::mutable_resource_names(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryRequest.resource_names)
  return resource_names_.Mutable(index);
}
void DiscoveryRequest::set_resource_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryRequest.resource_names)
  resource_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void DiscoveryRequest::set_resource_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryRequest.resource_names)
  resource_names_.Mutable(index)->assign(std::move(value));
}
#endif
void DiscoveryRequest::set_resource_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryRequest.resource_names)
}
void DiscoveryRequest::set_resource_names(int index, const char* value, size_t size) {
  resource_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryRequest.resource_names)
}
::std::string* DiscoveryRequest::add_resource_names() {
  // @@protoc_insertion_point(field_add_mutable:envoy.api.v2.DiscoveryRequest.resource_names)
  return resource_names_.Add();
}
void DiscoveryRequest::add_resource_names(const ::std::string& value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:envoy.api.v2.DiscoveryRequest.resource_names)
}
#if LANG_CXX11
void DiscoveryRequest::add_resource_names(::std::string&& value) {
  resource_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:envoy.api.v2.DiscoveryRequest.resource_names)
}
#endif
void DiscoveryRequest::add_resource_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:envoy.api.v2.DiscoveryRequest.resource_names)
}
void DiscoveryRequest::add_resource_names(const char* value, size_t size) {
  resource_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:envoy.api.v2.DiscoveryRequest.resource_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DiscoveryRequest::resource_names() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.DiscoveryRequest.resource_names)
  return resource_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DiscoveryRequest::mutable_resource_names() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.DiscoveryRequest.resource_names)
  return &resource_names_;
}

// string type_url = 4;
void DiscoveryRequest::clear_type_url() {
  type_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DiscoveryRequest::type_url() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryRequest.type_url)
  return type_url_.GetNoArena();
}
void DiscoveryRequest::set_type_url(const ::std::string& value) {
  
  type_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryRequest.type_url)
}
#if LANG_CXX11
void DiscoveryRequest::set_type_url(::std::string&& value) {
  
  type_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.DiscoveryRequest.type_url)
}
#endif
void DiscoveryRequest::set_type_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryRequest.type_url)
}
void DiscoveryRequest::set_type_url(const char* value, size_t size) {
  
  type_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryRequest.type_url)
}
::std::string* DiscoveryRequest::mutable_type_url() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryRequest.type_url)
  return type_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DiscoveryRequest::release_type_url() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryRequest.type_url)
  
  return type_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DiscoveryRequest::set_allocated_type_url(::std::string* type_url) {
  if (type_url != NULL) {
    
  } else {
    
  }
  type_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_url);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryRequest.type_url)
}

// string response_nonce = 5;
void DiscoveryRequest::clear_response_nonce() {
  response_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DiscoveryRequest::response_nonce() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryRequest.response_nonce)
  return response_nonce_.GetNoArena();
}
void DiscoveryRequest::set_response_nonce(const ::std::string& value) {
  
  response_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryRequest.response_nonce)
}
#if LANG_CXX11
void DiscoveryRequest::set_response_nonce(::std::string&& value) {
  
  response_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.DiscoveryRequest.response_nonce)
}
#endif
void DiscoveryRequest::set_response_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryRequest.response_nonce)
}
void DiscoveryRequest::set_response_nonce(const char* value, size_t size) {
  
  response_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryRequest.response_nonce)
}
::std::string* DiscoveryRequest::mutable_response_nonce() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryRequest.response_nonce)
  return response_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DiscoveryRequest::release_response_nonce() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryRequest.response_nonce)
  
  return response_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DiscoveryRequest::set_allocated_response_nonce(::std::string* response_nonce) {
  if (response_nonce != NULL) {
    
  } else {
    
  }
  response_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_nonce);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryRequest.response_nonce)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoveryResponse::kVersionInfoFieldNumber;
const int DiscoveryResponse::kResourcesFieldNumber;
const int DiscoveryResponse::kCanaryFieldNumber;
const int DiscoveryResponse::kTypeUrlFieldNumber;
const int DiscoveryResponse::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoveryResponse::DiscoveryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2fdiscovery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:envoy.api.v2.DiscoveryResponse)
}
DiscoveryResponse::DiscoveryResponse(const DiscoveryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resources_(from.resources_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_info().size() > 0) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_url().size() > 0) {
    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  canary_ = from.canary_;
  // @@protoc_insertion_point(copy_constructor:envoy.api.v2.DiscoveryResponse)
}

void DiscoveryResponse::SharedCtor() {
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  canary_ = false;
  _cached_size_ = 0;
}

DiscoveryResponse::~DiscoveryResponse() {
  // @@protoc_insertion_point(destructor:envoy.api.v2.DiscoveryResponse)
  SharedDtor();
}

void DiscoveryResponse::SharedDtor() {
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DiscoveryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DiscoveryResponse::descriptor() {
  protobuf_api_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscoveryResponse& DiscoveryResponse::default_instance() {
  protobuf_api_2fdiscovery_2eproto::InitDefaults();
  return *internal_default_instance();
}

DiscoveryResponse* DiscoveryResponse::New(::google::protobuf::Arena* arena) const {
  DiscoveryResponse* n = new DiscoveryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DiscoveryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:envoy.api.v2.DiscoveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  canary_ = false;
  _internal_metadata_.Clear();
}

bool DiscoveryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:envoy.api.v2.DiscoveryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_info().data(), static_cast<int>(this->version_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryResponse.version_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any resources = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool canary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_url().data(), static_cast<int>(this->type_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryResponse.type_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nonce = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonce().data(), static_cast<int>(this->nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "envoy.api.v2.DiscoveryResponse.nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:envoy.api.v2.DiscoveryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:envoy.api.v2.DiscoveryResponse)
  return false;
#undef DO_
}

void DiscoveryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:envoy.api.v2.DiscoveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), static_cast<int>(this->version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryResponse.version_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version_info(), output);
  }

  // repeated .google.protobuf.Any resources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resources(static_cast<int>(i)), output);
  }

  // bool canary = 3;
  if (this->canary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->canary(), output);
  }

  // string type_url = 4;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryResponse.type_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type_url(), output);
  }

  // string nonce = 5;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryResponse.nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nonce(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:envoy.api.v2.DiscoveryResponse)
}

::google::protobuf::uint8* DiscoveryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:envoy.api.v2.DiscoveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), static_cast<int>(this->version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryResponse.version_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version_info(), target);
  }

  // repeated .google.protobuf.Any resources = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->resources(static_cast<int>(i)), deterministic, target);
  }

  // bool canary = 3;
  if (this->canary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->canary(), target);
  }

  // string type_url = 4;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryResponse.type_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type_url(), target);
  }

  // string nonce = 5;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "envoy.api.v2.DiscoveryResponse.nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nonce(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:envoy.api.v2.DiscoveryResponse)
  return target;
}

size_t DiscoveryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:envoy.api.v2.DiscoveryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any resources = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->resources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resources(static_cast<int>(i)));
    }
  }

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_info());
  }

  // string type_url = 4;
  if (this->type_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_url());
  }

  // string nonce = 5;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonce());
  }

  // bool canary = 3;
  if (this->canary() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DiscoveryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:envoy.api.v2.DiscoveryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoveryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoveryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:envoy.api.v2.DiscoveryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:envoy.api.v2.DiscoveryResponse)
    MergeFrom(*source);
  }
}

void DiscoveryResponse::MergeFrom(const DiscoveryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:envoy.api.v2.DiscoveryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  if (from.version_info().size() > 0) {

    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.type_url().size() > 0) {

    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  if (from.canary() != 0) {
    set_canary(from.canary());
  }
}

void DiscoveryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:envoy.api.v2.DiscoveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoveryResponse::CopyFrom(const DiscoveryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:envoy.api.v2.DiscoveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveryResponse::IsInitialized() const {
  return true;
}

void DiscoveryResponse::Swap(DiscoveryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoveryResponse::InternalSwap(DiscoveryResponse* other) {
  using std::swap;
  resources_.InternalSwap(&other->resources_);
  version_info_.Swap(&other->version_info_);
  type_url_.Swap(&other->type_url_);
  nonce_.Swap(&other->nonce_);
  swap(canary_, other->canary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DiscoveryResponse::GetMetadata() const {
  protobuf_api_2fdiscovery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2fdiscovery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DiscoveryResponse

// string version_info = 1;
void DiscoveryResponse::clear_version_info() {
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DiscoveryResponse::version_info() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryResponse.version_info)
  return version_info_.GetNoArena();
}
void DiscoveryResponse::set_version_info(const ::std::string& value) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryResponse.version_info)
}
#if LANG_CXX11
void DiscoveryResponse::set_version_info(::std::string&& value) {
  
  version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.DiscoveryResponse.version_info)
}
#endif
void DiscoveryResponse::set_version_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryResponse.version_info)
}
void DiscoveryResponse::set_version_info(const char* value, size_t size) {
  
  version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryResponse.version_info)
}
::std::string* DiscoveryResponse::mutable_version_info() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryResponse.version_info)
  return version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DiscoveryResponse::release_version_info() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryResponse.version_info)
  
  return version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DiscoveryResponse::set_allocated_version_info(::std::string* version_info) {
  if (version_info != NULL) {
    
  } else {
    
  }
  version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_info);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryResponse.version_info)
}

// repeated .google.protobuf.Any resources = 2;
int DiscoveryResponse::resources_size() const {
  return resources_.size();
}
void DiscoveryResponse::clear_resources() {
  resources_.Clear();
}
const ::google::protobuf::Any& DiscoveryResponse::resources(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryResponse.resources)
  return resources_.Get(index);
}
::google::protobuf::Any* DiscoveryResponse::mutable_resources(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryResponse.resources)
  return resources_.Mutable(index);
}
::google::protobuf::Any* DiscoveryResponse::add_resources() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.DiscoveryResponse.resources)
  return resources_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
DiscoveryResponse::mutable_resources() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.DiscoveryResponse.resources)
  return &resources_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
DiscoveryResponse::resources() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.DiscoveryResponse.resources)
  return resources_;
}

// bool canary = 3;
void DiscoveryResponse::clear_canary() {
  canary_ = false;
}
bool DiscoveryResponse::canary() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryResponse.canary)
  return canary_;
}
void DiscoveryResponse::set_canary(bool value) {
  
  canary_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryResponse.canary)
}

// string type_url = 4;
void DiscoveryResponse::clear_type_url() {
  type_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DiscoveryResponse::type_url() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryResponse.type_url)
  return type_url_.GetNoArena();
}
void DiscoveryResponse::set_type_url(const ::std::string& value) {
  
  type_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryResponse.type_url)
}
#if LANG_CXX11
void DiscoveryResponse::set_type_url(::std::string&& value) {
  
  type_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.DiscoveryResponse.type_url)
}
#endif
void DiscoveryResponse::set_type_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryResponse.type_url)
}
void DiscoveryResponse::set_type_url(const char* value, size_t size) {
  
  type_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryResponse.type_url)
}
::std::string* DiscoveryResponse::mutable_type_url() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryResponse.type_url)
  return type_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DiscoveryResponse::release_type_url() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryResponse.type_url)
  
  return type_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DiscoveryResponse::set_allocated_type_url(::std::string* type_url) {
  if (type_url != NULL) {
    
  } else {
    
  }
  type_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_url);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryResponse.type_url)
}

// string nonce = 5;
void DiscoveryResponse::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DiscoveryResponse::nonce() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.DiscoveryResponse.nonce)
  return nonce_.GetNoArena();
}
void DiscoveryResponse::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.DiscoveryResponse.nonce)
}
#if LANG_CXX11
void DiscoveryResponse::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.DiscoveryResponse.nonce)
}
#endif
void DiscoveryResponse::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.DiscoveryResponse.nonce)
}
void DiscoveryResponse::set_nonce(const char* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.DiscoveryResponse.nonce)
}
::std::string* DiscoveryResponse::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.DiscoveryResponse.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DiscoveryResponse::release_nonce() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.DiscoveryResponse.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DiscoveryResponse::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.DiscoveryResponse.nonce)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)
