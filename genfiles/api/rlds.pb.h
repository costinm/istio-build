// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/rlds.proto

#ifndef PROTOBUF_api_2frlds_2eproto__INCLUDED
#define PROTOBUF_api_2frlds_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class RateLimitDescriptor;
class RateLimitDescriptorDefaultTypeInternal;
extern RateLimitDescriptorDefaultTypeInternal _RateLimitDescriptor_default_instance_;
class RateLimitDescriptor_Entry;
class RateLimitDescriptor_EntryDefaultTypeInternal;
extern RateLimitDescriptor_EntryDefaultTypeInternal _RateLimitDescriptor_Entry_default_instance_;
class RateLimitRequest;
class RateLimitRequestDefaultTypeInternal;
extern RateLimitRequestDefaultTypeInternal _RateLimitRequest_default_instance_;
class RateLimitResponse;
class RateLimitResponseDefaultTypeInternal;
extern RateLimitResponseDefaultTypeInternal _RateLimitResponse_default_instance_;
class RateLimitResponse_DescriptorStatus;
class RateLimitResponse_DescriptorStatusDefaultTypeInternal;
extern RateLimitResponse_DescriptorStatusDefaultTypeInternal _RateLimitResponse_DescriptorStatus_default_instance_;
class RateLimitResponse_RateLimit;
class RateLimitResponse_RateLimitDefaultTypeInternal;
extern RateLimitResponse_RateLimitDefaultTypeInternal _RateLimitResponse_RateLimit_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy

namespace envoy {
namespace api {
namespace v2 {

namespace protobuf_api_2frlds_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_api_2frlds_2eproto

enum RateLimitResponse_RateLimit_Unit {
  RateLimitResponse_RateLimit_Unit_UNKNOWN = 0,
  RateLimitResponse_RateLimit_Unit_SECOND = 1,
  RateLimitResponse_RateLimit_Unit_MINUTE = 2,
  RateLimitResponse_RateLimit_Unit_HOUR = 3,
  RateLimitResponse_RateLimit_Unit_DAY = 4,
  RateLimitResponse_RateLimit_Unit_RateLimitResponse_RateLimit_Unit_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RateLimitResponse_RateLimit_Unit_RateLimitResponse_RateLimit_Unit_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RateLimitResponse_RateLimit_Unit_IsValid(int value);
const RateLimitResponse_RateLimit_Unit RateLimitResponse_RateLimit_Unit_Unit_MIN = RateLimitResponse_RateLimit_Unit_UNKNOWN;
const RateLimitResponse_RateLimit_Unit RateLimitResponse_RateLimit_Unit_Unit_MAX = RateLimitResponse_RateLimit_Unit_DAY;
const int RateLimitResponse_RateLimit_Unit_Unit_ARRAYSIZE = RateLimitResponse_RateLimit_Unit_Unit_MAX + 1;

const ::google::protobuf::EnumDescriptor* RateLimitResponse_RateLimit_Unit_descriptor();
inline const ::std::string& RateLimitResponse_RateLimit_Unit_Name(RateLimitResponse_RateLimit_Unit value) {
  return ::google::protobuf::internal::NameOfEnum(
    RateLimitResponse_RateLimit_Unit_descriptor(), value);
}
inline bool RateLimitResponse_RateLimit_Unit_Parse(
    const ::std::string& name, RateLimitResponse_RateLimit_Unit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RateLimitResponse_RateLimit_Unit>(
    RateLimitResponse_RateLimit_Unit_descriptor(), name, value);
}
enum RateLimitResponse_Code {
  RateLimitResponse_Code_UNKNOWN = 0,
  RateLimitResponse_Code_OK = 1,
  RateLimitResponse_Code_OVER_LIMIT = 2,
  RateLimitResponse_Code_RateLimitResponse_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RateLimitResponse_Code_RateLimitResponse_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RateLimitResponse_Code_IsValid(int value);
const RateLimitResponse_Code RateLimitResponse_Code_Code_MIN = RateLimitResponse_Code_UNKNOWN;
const RateLimitResponse_Code RateLimitResponse_Code_Code_MAX = RateLimitResponse_Code_OVER_LIMIT;
const int RateLimitResponse_Code_Code_ARRAYSIZE = RateLimitResponse_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* RateLimitResponse_Code_descriptor();
inline const ::std::string& RateLimitResponse_Code_Name(RateLimitResponse_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    RateLimitResponse_Code_descriptor(), value);
}
inline bool RateLimitResponse_Code_Parse(
    const ::std::string& name, RateLimitResponse_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RateLimitResponse_Code>(
    RateLimitResponse_Code_descriptor(), name, value);
}
// ===================================================================

class RateLimitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.RateLimitRequest) */ {
 public:
  RateLimitRequest();
  virtual ~RateLimitRequest();

  RateLimitRequest(const RateLimitRequest& from);

  inline RateLimitRequest& operator=(const RateLimitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RateLimitRequest& default_instance();

  static inline const RateLimitRequest* internal_default_instance() {
    return reinterpret_cast<const RateLimitRequest*>(
               &_RateLimitRequest_default_instance_);
  }

  void Swap(RateLimitRequest* other);

  // implements Message ----------------------------------------------

  inline RateLimitRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RateLimitRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RateLimitRequest& from);
  void MergeFrom(const RateLimitRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RateLimitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.RateLimitDescriptor descriptors = 2;
  int descriptors_size() const;
  void clear_descriptors();
  static const int kDescriptorsFieldNumber = 2;
  const ::envoy::api::v2::RateLimitDescriptor& descriptors(int index) const;
  ::envoy::api::v2::RateLimitDescriptor* mutable_descriptors(int index);
  ::envoy::api::v2::RateLimitDescriptor* add_descriptors();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor >*
      mutable_descriptors();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor >&
      descriptors() const;

  // string domain = 1;
  void clear_domain();
  static const int kDomainFieldNumber = 1;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // uint32 hits_addend = 3;
  void clear_hits_addend();
  static const int kHitsAddendFieldNumber = 3;
  ::google::protobuf::uint32 hits_addend() const;
  void set_hits_addend(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.RateLimitRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor > descriptors_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::uint32 hits_addend_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2frlds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RateLimitDescriptor_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.RateLimitDescriptor.Entry) */ {
 public:
  RateLimitDescriptor_Entry();
  virtual ~RateLimitDescriptor_Entry();

  RateLimitDescriptor_Entry(const RateLimitDescriptor_Entry& from);

  inline RateLimitDescriptor_Entry& operator=(const RateLimitDescriptor_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RateLimitDescriptor_Entry& default_instance();

  static inline const RateLimitDescriptor_Entry* internal_default_instance() {
    return reinterpret_cast<const RateLimitDescriptor_Entry*>(
               &_RateLimitDescriptor_Entry_default_instance_);
  }

  void Swap(RateLimitDescriptor_Entry* other);

  // implements Message ----------------------------------------------

  inline RateLimitDescriptor_Entry* New() const PROTOBUF_FINAL { return New(NULL); }

  RateLimitDescriptor_Entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RateLimitDescriptor_Entry& from);
  void MergeFrom(const RateLimitDescriptor_Entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RateLimitDescriptor_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.RateLimitDescriptor.Entry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2frlds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RateLimitDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.RateLimitDescriptor) */ {
 public:
  RateLimitDescriptor();
  virtual ~RateLimitDescriptor();

  RateLimitDescriptor(const RateLimitDescriptor& from);

  inline RateLimitDescriptor& operator=(const RateLimitDescriptor& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RateLimitDescriptor& default_instance();

  static inline const RateLimitDescriptor* internal_default_instance() {
    return reinterpret_cast<const RateLimitDescriptor*>(
               &_RateLimitDescriptor_default_instance_);
  }

  void Swap(RateLimitDescriptor* other);

  // implements Message ----------------------------------------------

  inline RateLimitDescriptor* New() const PROTOBUF_FINAL { return New(NULL); }

  RateLimitDescriptor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RateLimitDescriptor& from);
  void MergeFrom(const RateLimitDescriptor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RateLimitDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RateLimitDescriptor_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.RateLimitDescriptor.Entry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::envoy::api::v2::RateLimitDescriptor_Entry& entries(int index) const;
  ::envoy::api::v2::RateLimitDescriptor_Entry* mutable_entries(int index);
  ::envoy::api::v2::RateLimitDescriptor_Entry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor_Entry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor_Entry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:envoy.api.v2.RateLimitDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor_Entry > entries_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2frlds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RateLimitResponse_RateLimit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.RateLimitResponse.RateLimit) */ {
 public:
  RateLimitResponse_RateLimit();
  virtual ~RateLimitResponse_RateLimit();

  RateLimitResponse_RateLimit(const RateLimitResponse_RateLimit& from);

  inline RateLimitResponse_RateLimit& operator=(const RateLimitResponse_RateLimit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RateLimitResponse_RateLimit& default_instance();

  static inline const RateLimitResponse_RateLimit* internal_default_instance() {
    return reinterpret_cast<const RateLimitResponse_RateLimit*>(
               &_RateLimitResponse_RateLimit_default_instance_);
  }

  void Swap(RateLimitResponse_RateLimit* other);

  // implements Message ----------------------------------------------

  inline RateLimitResponse_RateLimit* New() const PROTOBUF_FINAL { return New(NULL); }

  RateLimitResponse_RateLimit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RateLimitResponse_RateLimit& from);
  void MergeFrom(const RateLimitResponse_RateLimit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RateLimitResponse_RateLimit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RateLimitResponse_RateLimit_Unit Unit;
  static const Unit UNKNOWN =
    RateLimitResponse_RateLimit_Unit_UNKNOWN;
  static const Unit SECOND =
    RateLimitResponse_RateLimit_Unit_SECOND;
  static const Unit MINUTE =
    RateLimitResponse_RateLimit_Unit_MINUTE;
  static const Unit HOUR =
    RateLimitResponse_RateLimit_Unit_HOUR;
  static const Unit DAY =
    RateLimitResponse_RateLimit_Unit_DAY;
  static inline bool Unit_IsValid(int value) {
    return RateLimitResponse_RateLimit_Unit_IsValid(value);
  }
  static const Unit Unit_MIN =
    RateLimitResponse_RateLimit_Unit_Unit_MIN;
  static const Unit Unit_MAX =
    RateLimitResponse_RateLimit_Unit_Unit_MAX;
  static const int Unit_ARRAYSIZE =
    RateLimitResponse_RateLimit_Unit_Unit_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Unit_descriptor() {
    return RateLimitResponse_RateLimit_Unit_descriptor();
  }
  static inline const ::std::string& Unit_Name(Unit value) {
    return RateLimitResponse_RateLimit_Unit_Name(value);
  }
  static inline bool Unit_Parse(const ::std::string& name,
      Unit* value) {
    return RateLimitResponse_RateLimit_Unit_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 requests_per_unit = 1;
  void clear_requests_per_unit();
  static const int kRequestsPerUnitFieldNumber = 1;
  ::google::protobuf::uint32 requests_per_unit() const;
  void set_requests_per_unit(::google::protobuf::uint32 value);

  // .envoy.api.v2.RateLimitResponse.RateLimit.Unit unit = 2;
  void clear_unit();
  static const int kUnitFieldNumber = 2;
  ::envoy::api::v2::RateLimitResponse_RateLimit_Unit unit() const;
  void set_unit(::envoy::api::v2::RateLimitResponse_RateLimit_Unit value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.RateLimitResponse.RateLimit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 requests_per_unit_;
  int unit_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2frlds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RateLimitResponse_DescriptorStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.RateLimitResponse.DescriptorStatus) */ {
 public:
  RateLimitResponse_DescriptorStatus();
  virtual ~RateLimitResponse_DescriptorStatus();

  RateLimitResponse_DescriptorStatus(const RateLimitResponse_DescriptorStatus& from);

  inline RateLimitResponse_DescriptorStatus& operator=(const RateLimitResponse_DescriptorStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RateLimitResponse_DescriptorStatus& default_instance();

  static inline const RateLimitResponse_DescriptorStatus* internal_default_instance() {
    return reinterpret_cast<const RateLimitResponse_DescriptorStatus*>(
               &_RateLimitResponse_DescriptorStatus_default_instance_);
  }

  void Swap(RateLimitResponse_DescriptorStatus* other);

  // implements Message ----------------------------------------------

  inline RateLimitResponse_DescriptorStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  RateLimitResponse_DescriptorStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RateLimitResponse_DescriptorStatus& from);
  void MergeFrom(const RateLimitResponse_DescriptorStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RateLimitResponse_DescriptorStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .envoy.api.v2.RateLimitResponse.RateLimit current_limit = 2;
  bool has_current_limit() const;
  void clear_current_limit();
  static const int kCurrentLimitFieldNumber = 2;
  const ::envoy::api::v2::RateLimitResponse_RateLimit& current_limit() const;
  ::envoy::api::v2::RateLimitResponse_RateLimit* mutable_current_limit();
  ::envoy::api::v2::RateLimitResponse_RateLimit* release_current_limit();
  void set_allocated_current_limit(::envoy::api::v2::RateLimitResponse_RateLimit* current_limit);

  // .envoy.api.v2.RateLimitResponse.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::envoy::api::v2::RateLimitResponse_Code code() const;
  void set_code(::envoy::api::v2::RateLimitResponse_Code value);

  // uint32 limit_remaining = 3;
  void clear_limit_remaining();
  static const int kLimitRemainingFieldNumber = 3;
  ::google::protobuf::uint32 limit_remaining() const;
  void set_limit_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.RateLimitResponse.DescriptorStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::envoy::api::v2::RateLimitResponse_RateLimit* current_limit_;
  int code_;
  ::google::protobuf::uint32 limit_remaining_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2frlds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RateLimitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.RateLimitResponse) */ {
 public:
  RateLimitResponse();
  virtual ~RateLimitResponse();

  RateLimitResponse(const RateLimitResponse& from);

  inline RateLimitResponse& operator=(const RateLimitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RateLimitResponse& default_instance();

  static inline const RateLimitResponse* internal_default_instance() {
    return reinterpret_cast<const RateLimitResponse*>(
               &_RateLimitResponse_default_instance_);
  }

  void Swap(RateLimitResponse* other);

  // implements Message ----------------------------------------------

  inline RateLimitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RateLimitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RateLimitResponse& from);
  void MergeFrom(const RateLimitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RateLimitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RateLimitResponse_RateLimit RateLimit;
  typedef RateLimitResponse_DescriptorStatus DescriptorStatus;

  typedef RateLimitResponse_Code Code;
  static const Code UNKNOWN =
    RateLimitResponse_Code_UNKNOWN;
  static const Code OK =
    RateLimitResponse_Code_OK;
  static const Code OVER_LIMIT =
    RateLimitResponse_Code_OVER_LIMIT;
  static inline bool Code_IsValid(int value) {
    return RateLimitResponse_Code_IsValid(value);
  }
  static const Code Code_MIN =
    RateLimitResponse_Code_Code_MIN;
  static const Code Code_MAX =
    RateLimitResponse_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    RateLimitResponse_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return RateLimitResponse_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return RateLimitResponse_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return RateLimitResponse_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.RateLimitResponse.DescriptorStatus statuses = 2;
  int statuses_size() const;
  void clear_statuses();
  static const int kStatusesFieldNumber = 2;
  const ::envoy::api::v2::RateLimitResponse_DescriptorStatus& statuses(int index) const;
  ::envoy::api::v2::RateLimitResponse_DescriptorStatus* mutable_statuses(int index);
  ::envoy::api::v2::RateLimitResponse_DescriptorStatus* add_statuses();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitResponse_DescriptorStatus >*
      mutable_statuses();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitResponse_DescriptorStatus >&
      statuses() const;

  // .envoy.api.v2.RateLimitResponse.Code overall_code = 1;
  void clear_overall_code();
  static const int kOverallCodeFieldNumber = 1;
  ::envoy::api::v2::RateLimitResponse_Code overall_code() const;
  void set_overall_code(::envoy::api::v2::RateLimitResponse_Code value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.RateLimitResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitResponse_DescriptorStatus > statuses_;
  int overall_code_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2frlds_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RateLimitRequest

// string domain = 1;
inline void RateLimitRequest::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RateLimitRequest::domain() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitRequest.domain)
  return domain_.GetNoArena();
}
inline void RateLimitRequest::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitRequest.domain)
}
#if LANG_CXX11
inline void RateLimitRequest::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.RateLimitRequest.domain)
}
#endif
inline void RateLimitRequest::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.RateLimitRequest.domain)
}
inline void RateLimitRequest::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.RateLimitRequest.domain)
}
inline ::std::string* RateLimitRequest::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RateLimitRequest.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RateLimitRequest::release_domain() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.RateLimitRequest.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RateLimitRequest::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.RateLimitRequest.domain)
}

// repeated .envoy.api.v2.RateLimitDescriptor descriptors = 2;
inline int RateLimitRequest::descriptors_size() const {
  return descriptors_.size();
}
inline void RateLimitRequest::clear_descriptors() {
  descriptors_.Clear();
}
inline const ::envoy::api::v2::RateLimitDescriptor& RateLimitRequest::descriptors(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitRequest.descriptors)
  return descriptors_.Get(index);
}
inline ::envoy::api::v2::RateLimitDescriptor* RateLimitRequest::mutable_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RateLimitRequest.descriptors)
  return descriptors_.Mutable(index);
}
inline ::envoy::api::v2::RateLimitDescriptor* RateLimitRequest::add_descriptors() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.RateLimitRequest.descriptors)
  return descriptors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor >*
RateLimitRequest::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.RateLimitRequest.descriptors)
  return &descriptors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor >&
RateLimitRequest::descriptors() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.RateLimitRequest.descriptors)
  return descriptors_;
}

// uint32 hits_addend = 3;
inline void RateLimitRequest::clear_hits_addend() {
  hits_addend_ = 0u;
}
inline ::google::protobuf::uint32 RateLimitRequest::hits_addend() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitRequest.hits_addend)
  return hits_addend_;
}
inline void RateLimitRequest::set_hits_addend(::google::protobuf::uint32 value) {
  
  hits_addend_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitRequest.hits_addend)
}

// -------------------------------------------------------------------

// RateLimitDescriptor_Entry

// string key = 1;
inline void RateLimitDescriptor_Entry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RateLimitDescriptor_Entry::key() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitDescriptor.Entry.key)
  return key_.GetNoArena();
}
inline void RateLimitDescriptor_Entry::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitDescriptor.Entry.key)
}
#if LANG_CXX11
inline void RateLimitDescriptor_Entry::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.RateLimitDescriptor.Entry.key)
}
#endif
inline void RateLimitDescriptor_Entry::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.RateLimitDescriptor.Entry.key)
}
inline void RateLimitDescriptor_Entry::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.RateLimitDescriptor.Entry.key)
}
inline ::std::string* RateLimitDescriptor_Entry::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RateLimitDescriptor.Entry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RateLimitDescriptor_Entry::release_key() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.RateLimitDescriptor.Entry.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RateLimitDescriptor_Entry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.RateLimitDescriptor.Entry.key)
}

// string value = 2;
inline void RateLimitDescriptor_Entry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RateLimitDescriptor_Entry::value() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitDescriptor.Entry.value)
  return value_.GetNoArena();
}
inline void RateLimitDescriptor_Entry::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitDescriptor.Entry.value)
}
#if LANG_CXX11
inline void RateLimitDescriptor_Entry::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.RateLimitDescriptor.Entry.value)
}
#endif
inline void RateLimitDescriptor_Entry::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.RateLimitDescriptor.Entry.value)
}
inline void RateLimitDescriptor_Entry::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.RateLimitDescriptor.Entry.value)
}
inline ::std::string* RateLimitDescriptor_Entry::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RateLimitDescriptor.Entry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RateLimitDescriptor_Entry::release_value() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.RateLimitDescriptor.Entry.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RateLimitDescriptor_Entry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.RateLimitDescriptor.Entry.value)
}

// -------------------------------------------------------------------

// RateLimitDescriptor

// repeated .envoy.api.v2.RateLimitDescriptor.Entry entries = 1;
inline int RateLimitDescriptor::entries_size() const {
  return entries_.size();
}
inline void RateLimitDescriptor::clear_entries() {
  entries_.Clear();
}
inline const ::envoy::api::v2::RateLimitDescriptor_Entry& RateLimitDescriptor::entries(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitDescriptor.entries)
  return entries_.Get(index);
}
inline ::envoy::api::v2::RateLimitDescriptor_Entry* RateLimitDescriptor::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RateLimitDescriptor.entries)
  return entries_.Mutable(index);
}
inline ::envoy::api::v2::RateLimitDescriptor_Entry* RateLimitDescriptor::add_entries() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.RateLimitDescriptor.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor_Entry >*
RateLimitDescriptor::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.RateLimitDescriptor.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitDescriptor_Entry >&
RateLimitDescriptor::entries() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.RateLimitDescriptor.entries)
  return entries_;
}

// -------------------------------------------------------------------

// RateLimitResponse_RateLimit

// uint32 requests_per_unit = 1;
inline void RateLimitResponse_RateLimit::clear_requests_per_unit() {
  requests_per_unit_ = 0u;
}
inline ::google::protobuf::uint32 RateLimitResponse_RateLimit::requests_per_unit() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitResponse.RateLimit.requests_per_unit)
  return requests_per_unit_;
}
inline void RateLimitResponse_RateLimit::set_requests_per_unit(::google::protobuf::uint32 value) {
  
  requests_per_unit_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitResponse.RateLimit.requests_per_unit)
}

// .envoy.api.v2.RateLimitResponse.RateLimit.Unit unit = 2;
inline void RateLimitResponse_RateLimit::clear_unit() {
  unit_ = 0;
}
inline ::envoy::api::v2::RateLimitResponse_RateLimit_Unit RateLimitResponse_RateLimit::unit() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitResponse.RateLimit.unit)
  return static_cast< ::envoy::api::v2::RateLimitResponse_RateLimit_Unit >(unit_);
}
inline void RateLimitResponse_RateLimit::set_unit(::envoy::api::v2::RateLimitResponse_RateLimit_Unit value) {
  
  unit_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitResponse.RateLimit.unit)
}

// -------------------------------------------------------------------

// RateLimitResponse_DescriptorStatus

// .envoy.api.v2.RateLimitResponse.Code code = 1;
inline void RateLimitResponse_DescriptorStatus::clear_code() {
  code_ = 0;
}
inline ::envoy::api::v2::RateLimitResponse_Code RateLimitResponse_DescriptorStatus::code() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitResponse.DescriptorStatus.code)
  return static_cast< ::envoy::api::v2::RateLimitResponse_Code >(code_);
}
inline void RateLimitResponse_DescriptorStatus::set_code(::envoy::api::v2::RateLimitResponse_Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitResponse.DescriptorStatus.code)
}

// .envoy.api.v2.RateLimitResponse.RateLimit current_limit = 2;
inline bool RateLimitResponse_DescriptorStatus::has_current_limit() const {
  return this != internal_default_instance() && current_limit_ != NULL;
}
inline void RateLimitResponse_DescriptorStatus::clear_current_limit() {
  if (GetArenaNoVirtual() == NULL && current_limit_ != NULL) delete current_limit_;
  current_limit_ = NULL;
}
inline const ::envoy::api::v2::RateLimitResponse_RateLimit& RateLimitResponse_DescriptorStatus::current_limit() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitResponse.DescriptorStatus.current_limit)
  return current_limit_ != NULL ? *current_limit_
                         : *::envoy::api::v2::RateLimitResponse_RateLimit::internal_default_instance();
}
inline ::envoy::api::v2::RateLimitResponse_RateLimit* RateLimitResponse_DescriptorStatus::mutable_current_limit() {
  
  if (current_limit_ == NULL) {
    current_limit_ = new ::envoy::api::v2::RateLimitResponse_RateLimit;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RateLimitResponse.DescriptorStatus.current_limit)
  return current_limit_;
}
inline ::envoy::api::v2::RateLimitResponse_RateLimit* RateLimitResponse_DescriptorStatus::release_current_limit() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.RateLimitResponse.DescriptorStatus.current_limit)
  
  ::envoy::api::v2::RateLimitResponse_RateLimit* temp = current_limit_;
  current_limit_ = NULL;
  return temp;
}
inline void RateLimitResponse_DescriptorStatus::set_allocated_current_limit(::envoy::api::v2::RateLimitResponse_RateLimit* current_limit) {
  delete current_limit_;
  current_limit_ = current_limit;
  if (current_limit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.RateLimitResponse.DescriptorStatus.current_limit)
}

// uint32 limit_remaining = 3;
inline void RateLimitResponse_DescriptorStatus::clear_limit_remaining() {
  limit_remaining_ = 0u;
}
inline ::google::protobuf::uint32 RateLimitResponse_DescriptorStatus::limit_remaining() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitResponse.DescriptorStatus.limit_remaining)
  return limit_remaining_;
}
inline void RateLimitResponse_DescriptorStatus::set_limit_remaining(::google::protobuf::uint32 value) {
  
  limit_remaining_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitResponse.DescriptorStatus.limit_remaining)
}

// -------------------------------------------------------------------

// RateLimitResponse

// .envoy.api.v2.RateLimitResponse.Code overall_code = 1;
inline void RateLimitResponse::clear_overall_code() {
  overall_code_ = 0;
}
inline ::envoy::api::v2::RateLimitResponse_Code RateLimitResponse::overall_code() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitResponse.overall_code)
  return static_cast< ::envoy::api::v2::RateLimitResponse_Code >(overall_code_);
}
inline void RateLimitResponse::set_overall_code(::envoy::api::v2::RateLimitResponse_Code value) {
  
  overall_code_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.RateLimitResponse.overall_code)
}

// repeated .envoy.api.v2.RateLimitResponse.DescriptorStatus statuses = 2;
inline int RateLimitResponse::statuses_size() const {
  return statuses_.size();
}
inline void RateLimitResponse::clear_statuses() {
  statuses_.Clear();
}
inline const ::envoy::api::v2::RateLimitResponse_DescriptorStatus& RateLimitResponse::statuses(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.RateLimitResponse.statuses)
  return statuses_.Get(index);
}
inline ::envoy::api::v2::RateLimitResponse_DescriptorStatus* RateLimitResponse::mutable_statuses(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.RateLimitResponse.statuses)
  return statuses_.Mutable(index);
}
inline ::envoy::api::v2::RateLimitResponse_DescriptorStatus* RateLimitResponse::add_statuses() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.RateLimitResponse.statuses)
  return statuses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitResponse_DescriptorStatus >*
RateLimitResponse::mutable_statuses() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.RateLimitResponse.statuses)
  return &statuses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::RateLimitResponse_DescriptorStatus >&
RateLimitResponse::statuses() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.RateLimitResponse.statuses)
  return statuses_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v2
}  // namespace api
}  // namespace envoy

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::envoy::api::v2::RateLimitResponse_RateLimit_Unit> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::api::v2::RateLimitResponse_RateLimit_Unit>() {
  return ::envoy::api::v2::RateLimitResponse_RateLimit_Unit_descriptor();
}
template <> struct is_proto_enum< ::envoy::api::v2::RateLimitResponse_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::api::v2::RateLimitResponse_Code>() {
  return ::envoy::api::v2::RateLimitResponse_Code_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2frlds_2eproto__INCLUDED
