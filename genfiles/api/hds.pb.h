// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/hds.proto

#ifndef PROTOBUF_api_2fhds_2eproto__INCLUDED
#define PROTOBUF_api_2fhds_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "api/base.pb.h"
#include "api/health_check.pb.h"
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class Capability;
class CapabilityDefaultTypeInternal;
extern CapabilityDefaultTypeInternal _Capability_default_instance_;
class ClusterHealthCheck;
class ClusterHealthCheckDefaultTypeInternal;
extern ClusterHealthCheckDefaultTypeInternal _ClusterHealthCheck_default_instance_;
class DiscoveryRequest;
class DiscoveryRequestDefaultTypeInternal;
extern DiscoveryRequestDefaultTypeInternal _DiscoveryRequest_default_instance_;
class DiscoveryResponse;
class DiscoveryResponseDefaultTypeInternal;
extern DiscoveryResponseDefaultTypeInternal _DiscoveryResponse_default_instance_;
class Endpoint;
class EndpointDefaultTypeInternal;
extern EndpointDefaultTypeInternal _Endpoint_default_instance_;
class EndpointHealth;
class EndpointHealthDefaultTypeInternal;
extern EndpointHealthDefaultTypeInternal _EndpointHealth_default_instance_;
class EndpointHealthResponse;
class EndpointHealthResponseDefaultTypeInternal;
extern EndpointHealthResponseDefaultTypeInternal _EndpointHealthResponse_default_instance_;
class HeaderValue;
class HeaderValueDefaultTypeInternal;
extern HeaderValueDefaultTypeInternal _HeaderValue_default_instance_;
class HeaderValueOption;
class HeaderValueOptionDefaultTypeInternal;
extern HeaderValueOptionDefaultTypeInternal _HeaderValueOption_default_instance_;
class HealthCheck;
class HealthCheckDefaultTypeInternal;
extern HealthCheckDefaultTypeInternal _HealthCheck_default_instance_;
class HealthCheckRequest;
class HealthCheckRequestDefaultTypeInternal;
extern HealthCheckRequestDefaultTypeInternal _HealthCheckRequest_default_instance_;
class HealthCheckRequestOrEndpointHealthResponse;
class HealthCheckRequestOrEndpointHealthResponseDefaultTypeInternal;
extern HealthCheckRequestOrEndpointHealthResponseDefaultTypeInternal _HealthCheckRequestOrEndpointHealthResponse_default_instance_;
class HealthCheckSpecifier;
class HealthCheckSpecifierDefaultTypeInternal;
extern HealthCheckSpecifierDefaultTypeInternal _HealthCheckSpecifier_default_instance_;
class HealthCheck_HttpHealthCheck;
class HealthCheck_HttpHealthCheckDefaultTypeInternal;
extern HealthCheck_HttpHealthCheckDefaultTypeInternal _HealthCheck_HttpHealthCheck_default_instance_;
class HealthCheck_Payload;
class HealthCheck_PayloadDefaultTypeInternal;
extern HealthCheck_PayloadDefaultTypeInternal _HealthCheck_Payload_default_instance_;
class HealthCheck_TcpHealthCheck;
class HealthCheck_TcpHealthCheckDefaultTypeInternal;
extern HealthCheck_TcpHealthCheckDefaultTypeInternal _HealthCheck_TcpHealthCheck_default_instance_;
class Locality;
class LocalityDefaultTypeInternal;
extern LocalityDefaultTypeInternal _Locality_default_instance_;
class LocalityEndpoints;
class LocalityEndpointsDefaultTypeInternal;
extern LocalityEndpointsDefaultTypeInternal _LocalityEndpoints_default_instance_;
class Metadata;
class MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class RuntimeUInt32;
class RuntimeUInt32DefaultTypeInternal;
extern RuntimeUInt32DefaultTypeInternal _RuntimeUInt32_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace google {
namespace api {
}  // namespace api
namespace protobuf {
class Duration;
class DurationDefaultTypeInternal;
extern DurationDefaultTypeInternal _Duration_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace envoy {
namespace api {
namespace v2 {

namespace protobuf_api_2fhds_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_api_2fhds_2eproto

enum Capability_Protocol {
  Capability_Protocol_HTTP = 0,
  Capability_Protocol_TCP = 1,
  Capability_Protocol_REDIS = 2,
  Capability_Protocol_Capability_Protocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Capability_Protocol_Capability_Protocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Capability_Protocol_IsValid(int value);
const Capability_Protocol Capability_Protocol_Protocol_MIN = Capability_Protocol_HTTP;
const Capability_Protocol Capability_Protocol_Protocol_MAX = Capability_Protocol_REDIS;
const int Capability_Protocol_Protocol_ARRAYSIZE = Capability_Protocol_Protocol_MAX + 1;

const ::google::protobuf::EnumDescriptor* Capability_Protocol_descriptor();
inline const ::std::string& Capability_Protocol_Name(Capability_Protocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    Capability_Protocol_descriptor(), value);
}
inline bool Capability_Protocol_Parse(
    const ::std::string& name, Capability_Protocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Capability_Protocol>(
    Capability_Protocol_descriptor(), name, value);
}
// ===================================================================

class Capability : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.Capability) */ {
 public:
  Capability();
  virtual ~Capability();

  Capability(const Capability& from);

  inline Capability& operator=(const Capability& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Capability& default_instance();

  static inline const Capability* internal_default_instance() {
    return reinterpret_cast<const Capability*>(
               &_Capability_default_instance_);
  }

  void Swap(Capability* other);

  // implements Message ----------------------------------------------

  inline Capability* New() const PROTOBUF_FINAL { return New(NULL); }

  Capability* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Capability& from);
  void MergeFrom(const Capability& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Capability* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Capability_Protocol Protocol;
  static const Protocol HTTP =
    Capability_Protocol_HTTP;
  static const Protocol TCP =
    Capability_Protocol_TCP;
  static const Protocol REDIS =
    Capability_Protocol_REDIS;
  static inline bool Protocol_IsValid(int value) {
    return Capability_Protocol_IsValid(value);
  }
  static const Protocol Protocol_MIN =
    Capability_Protocol_Protocol_MIN;
  static const Protocol Protocol_MAX =
    Capability_Protocol_Protocol_MAX;
  static const int Protocol_ARRAYSIZE =
    Capability_Protocol_Protocol_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Protocol_descriptor() {
    return Capability_Protocol_descriptor();
  }
  static inline const ::std::string& Protocol_Name(Protocol value) {
    return Capability_Protocol_Name(value);
  }
  static inline bool Protocol_Parse(const ::std::string& name,
      Protocol* value) {
    return Capability_Protocol_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.Capability.Protocol health_check_protocol = 1;
  int health_check_protocol_size() const;
  void clear_health_check_protocol();
  static const int kHealthCheckProtocolFieldNumber = 1;
  ::envoy::api::v2::Capability_Protocol health_check_protocol(int index) const;
  void set_health_check_protocol(int index, ::envoy::api::v2::Capability_Protocol value);
  void add_health_check_protocol(::envoy::api::v2::Capability_Protocol value);
  const ::google::protobuf::RepeatedField<int>& health_check_protocol() const;
  ::google::protobuf::RepeatedField<int>* mutable_health_check_protocol();

  // @@protoc_insertion_point(class_scope:envoy.api.v2.Capability)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> health_check_protocol_;
  mutable int _health_check_protocol_cached_byte_size_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2fhds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HealthCheckRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.HealthCheckRequest) */ {
 public:
  HealthCheckRequest();
  virtual ~HealthCheckRequest();

  HealthCheckRequest(const HealthCheckRequest& from);

  inline HealthCheckRequest& operator=(const HealthCheckRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HealthCheckRequest& default_instance();

  static inline const HealthCheckRequest* internal_default_instance() {
    return reinterpret_cast<const HealthCheckRequest*>(
               &_HealthCheckRequest_default_instance_);
  }

  void Swap(HealthCheckRequest* other);

  // implements Message ----------------------------------------------

  inline HealthCheckRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  HealthCheckRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HealthCheckRequest& from);
  void MergeFrom(const HealthCheckRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HealthCheckRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .envoy.api.v2.Node node = 1;
  bool has_node() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  const ::envoy::api::v2::Node& node() const;
  ::envoy::api::v2::Node* mutable_node();
  ::envoy::api::v2::Node* release_node();
  void set_allocated_node(::envoy::api::v2::Node* node);

  // .envoy.api.v2.Capability capability = 2;
  bool has_capability() const;
  void clear_capability();
  static const int kCapabilityFieldNumber = 2;
  const ::envoy::api::v2::Capability& capability() const;
  ::envoy::api::v2::Capability* mutable_capability();
  ::envoy::api::v2::Capability* release_capability();
  void set_allocated_capability(::envoy::api::v2::Capability* capability);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.HealthCheckRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::envoy::api::v2::Node* node_;
  ::envoy::api::v2::Capability* capability_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2fhds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndpointHealth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.EndpointHealth) */ {
 public:
  EndpointHealth();
  virtual ~EndpointHealth();

  EndpointHealth(const EndpointHealth& from);

  inline EndpointHealth& operator=(const EndpointHealth& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndpointHealth& default_instance();

  static inline const EndpointHealth* internal_default_instance() {
    return reinterpret_cast<const EndpointHealth*>(
               &_EndpointHealth_default_instance_);
  }

  void Swap(EndpointHealth* other);

  // implements Message ----------------------------------------------

  inline EndpointHealth* New() const PROTOBUF_FINAL { return New(NULL); }

  EndpointHealth* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndpointHealth& from);
  void MergeFrom(const EndpointHealth& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndpointHealth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .envoy.api.v2.Endpoint endpoint = 1;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 1;
  const ::envoy::api::v2::Endpoint& endpoint() const;
  ::envoy::api::v2::Endpoint* mutable_endpoint();
  ::envoy::api::v2::Endpoint* release_endpoint();
  void set_allocated_endpoint(::envoy::api::v2::Endpoint* endpoint);

  // .envoy.api.v2.HealthStatus health_status = 2;
  void clear_health_status();
  static const int kHealthStatusFieldNumber = 2;
  ::envoy::api::v2::HealthStatus health_status() const;
  void set_health_status(::envoy::api::v2::HealthStatus value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.EndpointHealth)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::envoy::api::v2::Endpoint* endpoint_;
  int health_status_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2fhds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndpointHealthResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.EndpointHealthResponse) */ {
 public:
  EndpointHealthResponse();
  virtual ~EndpointHealthResponse();

  EndpointHealthResponse(const EndpointHealthResponse& from);

  inline EndpointHealthResponse& operator=(const EndpointHealthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndpointHealthResponse& default_instance();

  static inline const EndpointHealthResponse* internal_default_instance() {
    return reinterpret_cast<const EndpointHealthResponse*>(
               &_EndpointHealthResponse_default_instance_);
  }

  void Swap(EndpointHealthResponse* other);

  // implements Message ----------------------------------------------

  inline EndpointHealthResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  EndpointHealthResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndpointHealthResponse& from);
  void MergeFrom(const EndpointHealthResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndpointHealthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.EndpointHealth endpoints_health = 1;
  int endpoints_health_size() const;
  void clear_endpoints_health();
  static const int kEndpointsHealthFieldNumber = 1;
  const ::envoy::api::v2::EndpointHealth& endpoints_health(int index) const;
  ::envoy::api::v2::EndpointHealth* mutable_endpoints_health(int index);
  ::envoy::api::v2::EndpointHealth* add_endpoints_health();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointHealth >*
      mutable_endpoints_health();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointHealth >&
      endpoints_health() const;

  // @@protoc_insertion_point(class_scope:envoy.api.v2.EndpointHealthResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointHealth > endpoints_health_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2fhds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HealthCheckRequestOrEndpointHealthResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse) */ {
 public:
  HealthCheckRequestOrEndpointHealthResponse();
  virtual ~HealthCheckRequestOrEndpointHealthResponse();

  HealthCheckRequestOrEndpointHealthResponse(const HealthCheckRequestOrEndpointHealthResponse& from);

  inline HealthCheckRequestOrEndpointHealthResponse& operator=(const HealthCheckRequestOrEndpointHealthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HealthCheckRequestOrEndpointHealthResponse& default_instance();

  enum RequestTypeCase {
    kHealthCheckRequest = 1,
    kEndpointHealthResponse = 2,
    REQUEST_TYPE_NOT_SET = 0,
  };

  static inline const HealthCheckRequestOrEndpointHealthResponse* internal_default_instance() {
    return reinterpret_cast<const HealthCheckRequestOrEndpointHealthResponse*>(
               &_HealthCheckRequestOrEndpointHealthResponse_default_instance_);
  }

  void Swap(HealthCheckRequestOrEndpointHealthResponse* other);

  // implements Message ----------------------------------------------

  inline HealthCheckRequestOrEndpointHealthResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  HealthCheckRequestOrEndpointHealthResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HealthCheckRequestOrEndpointHealthResponse& from);
  void MergeFrom(const HealthCheckRequestOrEndpointHealthResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HealthCheckRequestOrEndpointHealthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .envoy.api.v2.HealthCheckRequest health_check_request = 1;
  bool has_health_check_request() const;
  void clear_health_check_request();
  static const int kHealthCheckRequestFieldNumber = 1;
  const ::envoy::api::v2::HealthCheckRequest& health_check_request() const;
  ::envoy::api::v2::HealthCheckRequest* mutable_health_check_request();
  ::envoy::api::v2::HealthCheckRequest* release_health_check_request();
  void set_allocated_health_check_request(::envoy::api::v2::HealthCheckRequest* health_check_request);

  // .envoy.api.v2.EndpointHealthResponse endpoint_health_response = 2;
  bool has_endpoint_health_response() const;
  void clear_endpoint_health_response();
  static const int kEndpointHealthResponseFieldNumber = 2;
  const ::envoy::api::v2::EndpointHealthResponse& endpoint_health_response() const;
  ::envoy::api::v2::EndpointHealthResponse* mutable_endpoint_health_response();
  ::envoy::api::v2::EndpointHealthResponse* release_endpoint_health_response();
  void set_allocated_endpoint_health_response(::envoy::api::v2::EndpointHealthResponse* endpoint_health_response);

  RequestTypeCase request_type_case() const;
  // @@protoc_insertion_point(class_scope:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse)
 private:
  void set_has_health_check_request();
  void set_has_endpoint_health_response();

  inline bool has_request_type() const;
  void clear_request_type();
  inline void clear_has_request_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union RequestTypeUnion {
    RequestTypeUnion() {}
    ::envoy::api::v2::HealthCheckRequest* health_check_request_;
    ::envoy::api::v2::EndpointHealthResponse* endpoint_health_response_;
  } request_type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_api_2fhds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LocalityEndpoints : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.LocalityEndpoints) */ {
 public:
  LocalityEndpoints();
  virtual ~LocalityEndpoints();

  LocalityEndpoints(const LocalityEndpoints& from);

  inline LocalityEndpoints& operator=(const LocalityEndpoints& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalityEndpoints& default_instance();

  static inline const LocalityEndpoints* internal_default_instance() {
    return reinterpret_cast<const LocalityEndpoints*>(
               &_LocalityEndpoints_default_instance_);
  }

  void Swap(LocalityEndpoints* other);

  // implements Message ----------------------------------------------

  inline LocalityEndpoints* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalityEndpoints* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalityEndpoints& from);
  void MergeFrom(const LocalityEndpoints& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalityEndpoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.Endpoint endpoints = 2;
  int endpoints_size() const;
  void clear_endpoints();
  static const int kEndpointsFieldNumber = 2;
  const ::envoy::api::v2::Endpoint& endpoints(int index) const;
  ::envoy::api::v2::Endpoint* mutable_endpoints(int index);
  ::envoy::api::v2::Endpoint* add_endpoints();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Endpoint >*
      mutable_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Endpoint >&
      endpoints() const;

  // .envoy.api.v2.Locality locality = 1;
  bool has_locality() const;
  void clear_locality();
  static const int kLocalityFieldNumber = 1;
  const ::envoy::api::v2::Locality& locality() const;
  ::envoy::api::v2::Locality* mutable_locality();
  ::envoy::api::v2::Locality* release_locality();
  void set_allocated_locality(::envoy::api::v2::Locality* locality);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.LocalityEndpoints)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Endpoint > endpoints_;
  ::envoy::api::v2::Locality* locality_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2fhds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterHealthCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.ClusterHealthCheck) */ {
 public:
  ClusterHealthCheck();
  virtual ~ClusterHealthCheck();

  ClusterHealthCheck(const ClusterHealthCheck& from);

  inline ClusterHealthCheck& operator=(const ClusterHealthCheck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterHealthCheck& default_instance();

  static inline const ClusterHealthCheck* internal_default_instance() {
    return reinterpret_cast<const ClusterHealthCheck*>(
               &_ClusterHealthCheck_default_instance_);
  }

  void Swap(ClusterHealthCheck* other);

  // implements Message ----------------------------------------------

  inline ClusterHealthCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterHealthCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterHealthCheck& from);
  void MergeFrom(const ClusterHealthCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterHealthCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.HealthCheck health_checks = 2;
  int health_checks_size() const;
  void clear_health_checks();
  static const int kHealthChecksFieldNumber = 2;
  const ::envoy::api::v2::HealthCheck& health_checks(int index) const;
  ::envoy::api::v2::HealthCheck* mutable_health_checks(int index);
  ::envoy::api::v2::HealthCheck* add_health_checks();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HealthCheck >*
      mutable_health_checks();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HealthCheck >&
      health_checks() const;

  // repeated .envoy.api.v2.LocalityEndpoints endpoints = 3;
  int endpoints_size() const;
  void clear_endpoints();
  static const int kEndpointsFieldNumber = 3;
  const ::envoy::api::v2::LocalityEndpoints& endpoints(int index) const;
  ::envoy::api::v2::LocalityEndpoints* mutable_endpoints(int index);
  ::envoy::api::v2::LocalityEndpoints* add_endpoints();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityEndpoints >*
      mutable_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityEndpoints >&
      endpoints() const;

  // string cluster_name = 1;
  void clear_cluster_name();
  static const int kClusterNameFieldNumber = 1;
  const ::std::string& cluster_name() const;
  void set_cluster_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_name(::std::string&& value);
  #endif
  void set_cluster_name(const char* value);
  void set_cluster_name(const char* value, size_t size);
  ::std::string* mutable_cluster_name();
  ::std::string* release_cluster_name();
  void set_allocated_cluster_name(::std::string* cluster_name);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterHealthCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HealthCheck > health_checks_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityEndpoints > endpoints_;
  ::google::protobuf::internal::ArenaStringPtr cluster_name_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2fhds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HealthCheckSpecifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.HealthCheckSpecifier) */ {
 public:
  HealthCheckSpecifier();
  virtual ~HealthCheckSpecifier();

  HealthCheckSpecifier(const HealthCheckSpecifier& from);

  inline HealthCheckSpecifier& operator=(const HealthCheckSpecifier& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HealthCheckSpecifier& default_instance();

  static inline const HealthCheckSpecifier* internal_default_instance() {
    return reinterpret_cast<const HealthCheckSpecifier*>(
               &_HealthCheckSpecifier_default_instance_);
  }

  void Swap(HealthCheckSpecifier* other);

  // implements Message ----------------------------------------------

  inline HealthCheckSpecifier* New() const PROTOBUF_FINAL { return New(NULL); }

  HealthCheckSpecifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HealthCheckSpecifier& from);
  void MergeFrom(const HealthCheckSpecifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HealthCheckSpecifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.ClusterHealthCheck health_check = 1;
  int health_check_size() const;
  void clear_health_check();
  static const int kHealthCheckFieldNumber = 1;
  const ::envoy::api::v2::ClusterHealthCheck& health_check(int index) const;
  ::envoy::api::v2::ClusterHealthCheck* mutable_health_check(int index);
  ::envoy::api::v2::ClusterHealthCheck* add_health_check();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterHealthCheck >*
      mutable_health_check();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterHealthCheck >&
      health_check() const;

  // .google.protobuf.Duration interval = 2;
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 2;
  const ::google::protobuf::Duration& interval() const;
  ::google::protobuf::Duration* mutable_interval();
  ::google::protobuf::Duration* release_interval();
  void set_allocated_interval(::google::protobuf::Duration* interval);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.HealthCheckSpecifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterHealthCheck > health_check_;
  ::google::protobuf::Duration* interval_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2fhds_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Capability

// repeated .envoy.api.v2.Capability.Protocol health_check_protocol = 1;
inline int Capability::health_check_protocol_size() const {
  return health_check_protocol_.size();
}
inline void Capability::clear_health_check_protocol() {
  health_check_protocol_.Clear();
}
inline ::envoy::api::v2::Capability_Protocol Capability::health_check_protocol(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Capability.health_check_protocol)
  return static_cast< ::envoy::api::v2::Capability_Protocol >(health_check_protocol_.Get(index));
}
inline void Capability::set_health_check_protocol(int index, ::envoy::api::v2::Capability_Protocol value) {
  health_check_protocol_.Set(index, value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Capability.health_check_protocol)
}
inline void Capability::add_health_check_protocol(::envoy::api::v2::Capability_Protocol value) {
  health_check_protocol_.Add(value);
  // @@protoc_insertion_point(field_add:envoy.api.v2.Capability.health_check_protocol)
}
inline const ::google::protobuf::RepeatedField<int>&
Capability::health_check_protocol() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.Capability.health_check_protocol)
  return health_check_protocol_;
}
inline ::google::protobuf::RepeatedField<int>*
Capability::mutable_health_check_protocol() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.Capability.health_check_protocol)
  return &health_check_protocol_;
}

// -------------------------------------------------------------------

// HealthCheckRequest

// .envoy.api.v2.Node node = 1;
inline bool HealthCheckRequest::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
inline void HealthCheckRequest::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
inline const ::envoy::api::v2::Node& HealthCheckRequest::node() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HealthCheckRequest.node)
  return node_ != NULL ? *node_
                         : *::envoy::api::v2::Node::internal_default_instance();
}
inline ::envoy::api::v2::Node* HealthCheckRequest::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::envoy::api::v2::Node;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HealthCheckRequest.node)
  return node_;
}
inline ::envoy::api::v2::Node* HealthCheckRequest::release_node() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HealthCheckRequest.node)
  
  ::envoy::api::v2::Node* temp = node_;
  node_ = NULL;
  return temp;
}
inline void HealthCheckRequest::set_allocated_node(::envoy::api::v2::Node* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HealthCheckRequest.node)
}

// .envoy.api.v2.Capability capability = 2;
inline bool HealthCheckRequest::has_capability() const {
  return this != internal_default_instance() && capability_ != NULL;
}
inline void HealthCheckRequest::clear_capability() {
  if (GetArenaNoVirtual() == NULL && capability_ != NULL) delete capability_;
  capability_ = NULL;
}
inline const ::envoy::api::v2::Capability& HealthCheckRequest::capability() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HealthCheckRequest.capability)
  return capability_ != NULL ? *capability_
                         : *::envoy::api::v2::Capability::internal_default_instance();
}
inline ::envoy::api::v2::Capability* HealthCheckRequest::mutable_capability() {
  
  if (capability_ == NULL) {
    capability_ = new ::envoy::api::v2::Capability;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HealthCheckRequest.capability)
  return capability_;
}
inline ::envoy::api::v2::Capability* HealthCheckRequest::release_capability() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HealthCheckRequest.capability)
  
  ::envoy::api::v2::Capability* temp = capability_;
  capability_ = NULL;
  return temp;
}
inline void HealthCheckRequest::set_allocated_capability(::envoy::api::v2::Capability* capability) {
  delete capability_;
  capability_ = capability;
  if (capability) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HealthCheckRequest.capability)
}

// -------------------------------------------------------------------

// EndpointHealth

// .envoy.api.v2.Endpoint endpoint = 1;
inline bool EndpointHealth::has_endpoint() const {
  return this != internal_default_instance() && endpoint_ != NULL;
}
inline void EndpointHealth::clear_endpoint() {
  if (GetArenaNoVirtual() == NULL && endpoint_ != NULL) delete endpoint_;
  endpoint_ = NULL;
}
inline const ::envoy::api::v2::Endpoint& EndpointHealth::endpoint() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointHealth.endpoint)
  return endpoint_ != NULL ? *endpoint_
                         : *::envoy::api::v2::Endpoint::internal_default_instance();
}
inline ::envoy::api::v2::Endpoint* EndpointHealth::mutable_endpoint() {
  
  if (endpoint_ == NULL) {
    endpoint_ = new ::envoy::api::v2::Endpoint;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EndpointHealth.endpoint)
  return endpoint_;
}
inline ::envoy::api::v2::Endpoint* EndpointHealth::release_endpoint() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.EndpointHealth.endpoint)
  
  ::envoy::api::v2::Endpoint* temp = endpoint_;
  endpoint_ = NULL;
  return temp;
}
inline void EndpointHealth::set_allocated_endpoint(::envoy::api::v2::Endpoint* endpoint) {
  delete endpoint_;
  endpoint_ = endpoint;
  if (endpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.EndpointHealth.endpoint)
}

// .envoy.api.v2.HealthStatus health_status = 2;
inline void EndpointHealth::clear_health_status() {
  health_status_ = 0;
}
inline ::envoy::api::v2::HealthStatus EndpointHealth::health_status() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointHealth.health_status)
  return static_cast< ::envoy::api::v2::HealthStatus >(health_status_);
}
inline void EndpointHealth::set_health_status(::envoy::api::v2::HealthStatus value) {
  
  health_status_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.EndpointHealth.health_status)
}

// -------------------------------------------------------------------

// EndpointHealthResponse

// repeated .envoy.api.v2.EndpointHealth endpoints_health = 1;
inline int EndpointHealthResponse::endpoints_health_size() const {
  return endpoints_health_.size();
}
inline void EndpointHealthResponse::clear_endpoints_health() {
  endpoints_health_.Clear();
}
inline const ::envoy::api::v2::EndpointHealth& EndpointHealthResponse::endpoints_health(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.EndpointHealthResponse.endpoints_health)
  return endpoints_health_.Get(index);
}
inline ::envoy::api::v2::EndpointHealth* EndpointHealthResponse::mutable_endpoints_health(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.EndpointHealthResponse.endpoints_health)
  return endpoints_health_.Mutable(index);
}
inline ::envoy::api::v2::EndpointHealth* EndpointHealthResponse::add_endpoints_health() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.EndpointHealthResponse.endpoints_health)
  return endpoints_health_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointHealth >*
EndpointHealthResponse::mutable_endpoints_health() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.EndpointHealthResponse.endpoints_health)
  return &endpoints_health_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::EndpointHealth >&
EndpointHealthResponse::endpoints_health() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.EndpointHealthResponse.endpoints_health)
  return endpoints_health_;
}

// -------------------------------------------------------------------

// HealthCheckRequestOrEndpointHealthResponse

// .envoy.api.v2.HealthCheckRequest health_check_request = 1;
inline bool HealthCheckRequestOrEndpointHealthResponse::has_health_check_request() const {
  return request_type_case() == kHealthCheckRequest;
}
inline void HealthCheckRequestOrEndpointHealthResponse::set_has_health_check_request() {
  _oneof_case_[0] = kHealthCheckRequest;
}
inline void HealthCheckRequestOrEndpointHealthResponse::clear_health_check_request() {
  if (has_health_check_request()) {
    delete request_type_.health_check_request_;
    clear_has_request_type();
  }
}
inline  const ::envoy::api::v2::HealthCheckRequest& HealthCheckRequestOrEndpointHealthResponse::health_check_request() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse.health_check_request)
  return has_health_check_request()
      ? *request_type_.health_check_request_
      : ::envoy::api::v2::HealthCheckRequest::default_instance();
}
inline ::envoy::api::v2::HealthCheckRequest* HealthCheckRequestOrEndpointHealthResponse::mutable_health_check_request() {
  if (!has_health_check_request()) {
    clear_request_type();
    set_has_health_check_request();
    request_type_.health_check_request_ = new ::envoy::api::v2::HealthCheckRequest;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse.health_check_request)
  return request_type_.health_check_request_;
}
inline ::envoy::api::v2::HealthCheckRequest* HealthCheckRequestOrEndpointHealthResponse::release_health_check_request() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse.health_check_request)
  if (has_health_check_request()) {
    clear_has_request_type();
    ::envoy::api::v2::HealthCheckRequest* temp = request_type_.health_check_request_;
    request_type_.health_check_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HealthCheckRequestOrEndpointHealthResponse::set_allocated_health_check_request(::envoy::api::v2::HealthCheckRequest* health_check_request) {
  clear_request_type();
  if (health_check_request) {
    set_has_health_check_request();
    request_type_.health_check_request_ = health_check_request;
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse.health_check_request)
}

// .envoy.api.v2.EndpointHealthResponse endpoint_health_response = 2;
inline bool HealthCheckRequestOrEndpointHealthResponse::has_endpoint_health_response() const {
  return request_type_case() == kEndpointHealthResponse;
}
inline void HealthCheckRequestOrEndpointHealthResponse::set_has_endpoint_health_response() {
  _oneof_case_[0] = kEndpointHealthResponse;
}
inline void HealthCheckRequestOrEndpointHealthResponse::clear_endpoint_health_response() {
  if (has_endpoint_health_response()) {
    delete request_type_.endpoint_health_response_;
    clear_has_request_type();
  }
}
inline  const ::envoy::api::v2::EndpointHealthResponse& HealthCheckRequestOrEndpointHealthResponse::endpoint_health_response() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse.endpoint_health_response)
  return has_endpoint_health_response()
      ? *request_type_.endpoint_health_response_
      : ::envoy::api::v2::EndpointHealthResponse::default_instance();
}
inline ::envoy::api::v2::EndpointHealthResponse* HealthCheckRequestOrEndpointHealthResponse::mutable_endpoint_health_response() {
  if (!has_endpoint_health_response()) {
    clear_request_type();
    set_has_endpoint_health_response();
    request_type_.endpoint_health_response_ = new ::envoy::api::v2::EndpointHealthResponse;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse.endpoint_health_response)
  return request_type_.endpoint_health_response_;
}
inline ::envoy::api::v2::EndpointHealthResponse* HealthCheckRequestOrEndpointHealthResponse::release_endpoint_health_response() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse.endpoint_health_response)
  if (has_endpoint_health_response()) {
    clear_has_request_type();
    ::envoy::api::v2::EndpointHealthResponse* temp = request_type_.endpoint_health_response_;
    request_type_.endpoint_health_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HealthCheckRequestOrEndpointHealthResponse::set_allocated_endpoint_health_response(::envoy::api::v2::EndpointHealthResponse* endpoint_health_response) {
  clear_request_type();
  if (endpoint_health_response) {
    set_has_endpoint_health_response();
    request_type_.endpoint_health_response_ = endpoint_health_response;
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HealthCheckRequestOrEndpointHealthResponse.endpoint_health_response)
}

inline bool HealthCheckRequestOrEndpointHealthResponse::has_request_type() const {
  return request_type_case() != REQUEST_TYPE_NOT_SET;
}
inline void HealthCheckRequestOrEndpointHealthResponse::clear_has_request_type() {
  _oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}
inline HealthCheckRequestOrEndpointHealthResponse::RequestTypeCase HealthCheckRequestOrEndpointHealthResponse::request_type_case() const {
  return HealthCheckRequestOrEndpointHealthResponse::RequestTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// LocalityEndpoints

// .envoy.api.v2.Locality locality = 1;
inline bool LocalityEndpoints::has_locality() const {
  return this != internal_default_instance() && locality_ != NULL;
}
inline void LocalityEndpoints::clear_locality() {
  if (GetArenaNoVirtual() == NULL && locality_ != NULL) delete locality_;
  locality_ = NULL;
}
inline const ::envoy::api::v2::Locality& LocalityEndpoints::locality() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LocalityEndpoints.locality)
  return locality_ != NULL ? *locality_
                         : *::envoy::api::v2::Locality::internal_default_instance();
}
inline ::envoy::api::v2::Locality* LocalityEndpoints::mutable_locality() {
  
  if (locality_ == NULL) {
    locality_ = new ::envoy::api::v2::Locality;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LocalityEndpoints.locality)
  return locality_;
}
inline ::envoy::api::v2::Locality* LocalityEndpoints::release_locality() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.LocalityEndpoints.locality)
  
  ::envoy::api::v2::Locality* temp = locality_;
  locality_ = NULL;
  return temp;
}
inline void LocalityEndpoints::set_allocated_locality(::envoy::api::v2::Locality* locality) {
  delete locality_;
  locality_ = locality;
  if (locality) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.LocalityEndpoints.locality)
}

// repeated .envoy.api.v2.Endpoint endpoints = 2;
inline int LocalityEndpoints::endpoints_size() const {
  return endpoints_.size();
}
inline void LocalityEndpoints::clear_endpoints() {
  endpoints_.Clear();
}
inline const ::envoy::api::v2::Endpoint& LocalityEndpoints::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.LocalityEndpoints.endpoints)
  return endpoints_.Get(index);
}
inline ::envoy::api::v2::Endpoint* LocalityEndpoints::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.LocalityEndpoints.endpoints)
  return endpoints_.Mutable(index);
}
inline ::envoy::api::v2::Endpoint* LocalityEndpoints::add_endpoints() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.LocalityEndpoints.endpoints)
  return endpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Endpoint >*
LocalityEndpoints::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.LocalityEndpoints.endpoints)
  return &endpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Endpoint >&
LocalityEndpoints::endpoints() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.LocalityEndpoints.endpoints)
  return endpoints_;
}

// -------------------------------------------------------------------

// ClusterHealthCheck

// string cluster_name = 1;
inline void ClusterHealthCheck::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterHealthCheck::cluster_name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterHealthCheck.cluster_name)
  return cluster_name_.GetNoArena();
}
inline void ClusterHealthCheck::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.ClusterHealthCheck.cluster_name)
}
#if LANG_CXX11
inline void ClusterHealthCheck::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.ClusterHealthCheck.cluster_name)
}
#endif
inline void ClusterHealthCheck::set_cluster_name(const char* value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.ClusterHealthCheck.cluster_name)
}
inline void ClusterHealthCheck::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.ClusterHealthCheck.cluster_name)
}
inline ::std::string* ClusterHealthCheck::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterHealthCheck.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterHealthCheck::release_cluster_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.ClusterHealthCheck.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterHealthCheck::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.ClusterHealthCheck.cluster_name)
}

// repeated .envoy.api.v2.HealthCheck health_checks = 2;
inline int ClusterHealthCheck::health_checks_size() const {
  return health_checks_.size();
}
inline void ClusterHealthCheck::clear_health_checks() {
  health_checks_.Clear();
}
inline const ::envoy::api::v2::HealthCheck& ClusterHealthCheck::health_checks(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterHealthCheck.health_checks)
  return health_checks_.Get(index);
}
inline ::envoy::api::v2::HealthCheck* ClusterHealthCheck::mutable_health_checks(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterHealthCheck.health_checks)
  return health_checks_.Mutable(index);
}
inline ::envoy::api::v2::HealthCheck* ClusterHealthCheck::add_health_checks() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.ClusterHealthCheck.health_checks)
  return health_checks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HealthCheck >*
ClusterHealthCheck::mutable_health_checks() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ClusterHealthCheck.health_checks)
  return &health_checks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::HealthCheck >&
ClusterHealthCheck::health_checks() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ClusterHealthCheck.health_checks)
  return health_checks_;
}

// repeated .envoy.api.v2.LocalityEndpoints endpoints = 3;
inline int ClusterHealthCheck::endpoints_size() const {
  return endpoints_.size();
}
inline void ClusterHealthCheck::clear_endpoints() {
  endpoints_.Clear();
}
inline const ::envoy::api::v2::LocalityEndpoints& ClusterHealthCheck::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.ClusterHealthCheck.endpoints)
  return endpoints_.Get(index);
}
inline ::envoy::api::v2::LocalityEndpoints* ClusterHealthCheck::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.ClusterHealthCheck.endpoints)
  return endpoints_.Mutable(index);
}
inline ::envoy::api::v2::LocalityEndpoints* ClusterHealthCheck::add_endpoints() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.ClusterHealthCheck.endpoints)
  return endpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityEndpoints >*
ClusterHealthCheck::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.ClusterHealthCheck.endpoints)
  return &endpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::LocalityEndpoints >&
ClusterHealthCheck::endpoints() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.ClusterHealthCheck.endpoints)
  return endpoints_;
}

// -------------------------------------------------------------------

// HealthCheckSpecifier

// repeated .envoy.api.v2.ClusterHealthCheck health_check = 1;
inline int HealthCheckSpecifier::health_check_size() const {
  return health_check_.size();
}
inline void HealthCheckSpecifier::clear_health_check() {
  health_check_.Clear();
}
inline const ::envoy::api::v2::ClusterHealthCheck& HealthCheckSpecifier::health_check(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HealthCheckSpecifier.health_check)
  return health_check_.Get(index);
}
inline ::envoy::api::v2::ClusterHealthCheck* HealthCheckSpecifier::mutable_health_check(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HealthCheckSpecifier.health_check)
  return health_check_.Mutable(index);
}
inline ::envoy::api::v2::ClusterHealthCheck* HealthCheckSpecifier::add_health_check() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.HealthCheckSpecifier.health_check)
  return health_check_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterHealthCheck >*
HealthCheckSpecifier::mutable_health_check() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.HealthCheckSpecifier.health_check)
  return &health_check_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::ClusterHealthCheck >&
HealthCheckSpecifier::health_check() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.HealthCheckSpecifier.health_check)
  return health_check_;
}

// .google.protobuf.Duration interval = 2;
inline bool HealthCheckSpecifier::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline void HealthCheckSpecifier::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}
inline const ::google::protobuf::Duration& HealthCheckSpecifier::interval() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.HealthCheckSpecifier.interval)
  return interval_ != NULL ? *interval_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* HealthCheckSpecifier::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.HealthCheckSpecifier.interval)
  return interval_;
}
inline ::google::protobuf::Duration* HealthCheckSpecifier::release_interval() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.HealthCheckSpecifier.interval)
  
  ::google::protobuf::Duration* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline void HealthCheckSpecifier::set_allocated_interval(::google::protobuf::Duration* interval) {
  delete interval_;
  if (interval != NULL && interval->GetArena() != NULL) {
    ::google::protobuf::Duration* new_interval = new ::google::protobuf::Duration;
    new_interval->CopyFrom(*interval);
    interval = new_interval;
  }
  interval_ = interval;
  if (interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.HealthCheckSpecifier.interval)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v2
}  // namespace api
}  // namespace envoy

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::envoy::api::v2::Capability_Protocol> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::api::v2::Capability_Protocol>() {
  return ::envoy::api::v2::Capability_Protocol_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2fhds_2eproto__INCLUDED
