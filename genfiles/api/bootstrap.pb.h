// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/bootstrap.proto

#ifndef PROTOBUF_api_2fbootstrap_2eproto__INCLUDED
#define PROTOBUF_api_2fbootstrap_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "api/base.pb.h"
#include "api/cds.pb.h"
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class ApiConfigSource;
class ApiConfigSourceDefaultTypeInternal;
extern ApiConfigSourceDefaultTypeInternal _ApiConfigSource_default_instance_;
class Bootstrap;
class BootstrapDefaultTypeInternal;
extern BootstrapDefaultTypeInternal _Bootstrap_default_instance_;
class CircuitBreakers;
class CircuitBreakersDefaultTypeInternal;
extern CircuitBreakersDefaultTypeInternal _CircuitBreakers_default_instance_;
class CircuitBreakers_Thresholds;
class CircuitBreakers_ThresholdsDefaultTypeInternal;
extern CircuitBreakers_ThresholdsDefaultTypeInternal _CircuitBreakers_Thresholds_default_instance_;
class Cluster;
class ClusterDefaultTypeInternal;
extern ClusterDefaultTypeInternal _Cluster_default_instance_;
class Cluster_OutlierDetection;
class Cluster_OutlierDetectionDefaultTypeInternal;
extern Cluster_OutlierDetectionDefaultTypeInternal _Cluster_OutlierDetection_default_instance_;
class ConfigSource;
class ConfigSourceDefaultTypeInternal;
extern ConfigSourceDefaultTypeInternal _ConfigSource_default_instance_;
class DiscoveryRequest;
class DiscoveryRequestDefaultTypeInternal;
extern DiscoveryRequestDefaultTypeInternal _DiscoveryRequest_default_instance_;
class DiscoveryResponse;
class DiscoveryResponseDefaultTypeInternal;
extern DiscoveryResponseDefaultTypeInternal _DiscoveryResponse_default_instance_;
class Endpoint;
class EndpointDefaultTypeInternal;
extern EndpointDefaultTypeInternal _Endpoint_default_instance_;
class GrpcProtocolOptions;
class GrpcProtocolOptionsDefaultTypeInternal;
extern GrpcProtocolOptionsDefaultTypeInternal _GrpcProtocolOptions_default_instance_;
class HeaderValue;
class HeaderValueDefaultTypeInternal;
extern HeaderValueDefaultTypeInternal _HeaderValue_default_instance_;
class HeaderValueOption;
class HeaderValueOptionDefaultTypeInternal;
extern HeaderValueOptionDefaultTypeInternal _HeaderValueOption_default_instance_;
class Http1ProtocolOptions;
class Http1ProtocolOptionsDefaultTypeInternal;
extern Http1ProtocolOptionsDefaultTypeInternal _Http1ProtocolOptions_default_instance_;
class Http2ProtocolOptions;
class Http2ProtocolOptionsDefaultTypeInternal;
extern Http2ProtocolOptionsDefaultTypeInternal _Http2ProtocolOptions_default_instance_;
class Locality;
class LocalityDefaultTypeInternal;
extern LocalityDefaultTypeInternal _Locality_default_instance_;
class Metadata;
class MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class RuntimeUInt32;
class RuntimeUInt32DefaultTypeInternal;
extern RuntimeUInt32DefaultTypeInternal _RuntimeUInt32_default_instance_;
class TcpProtocolOptions;
class TcpProtocolOptionsDefaultTypeInternal;
extern TcpProtocolOptionsDefaultTypeInternal _TcpProtocolOptions_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy

namespace envoy {
namespace api {
namespace v2 {

namespace protobuf_api_2fbootstrap_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_api_2fbootstrap_2eproto

// ===================================================================

class Bootstrap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.Bootstrap) */ {
 public:
  Bootstrap();
  virtual ~Bootstrap();

  Bootstrap(const Bootstrap& from);

  inline Bootstrap& operator=(const Bootstrap& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bootstrap& default_instance();

  static inline const Bootstrap* internal_default_instance() {
    return reinterpret_cast<const Bootstrap*>(
               &_Bootstrap_default_instance_);
  }

  void Swap(Bootstrap* other);

  // implements Message ----------------------------------------------

  inline Bootstrap* New() const PROTOBUF_FINAL { return New(NULL); }

  Bootstrap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Bootstrap& from);
  void MergeFrom(const Bootstrap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Bootstrap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.Cluster bootstrap_clusters = 4;
  int bootstrap_clusters_size() const;
  void clear_bootstrap_clusters();
  static const int kBootstrapClustersFieldNumber = 4;
  const ::envoy::api::v2::Cluster& bootstrap_clusters(int index) const;
  ::envoy::api::v2::Cluster* mutable_bootstrap_clusters(int index);
  ::envoy::api::v2::Cluster* add_bootstrap_clusters();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster >*
      mutable_bootstrap_clusters();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster >&
      bootstrap_clusters() const;

  // .envoy.api.v2.Node node = 1;
  bool has_node() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  const ::envoy::api::v2::Node& node() const;
  ::envoy::api::v2::Node* mutable_node();
  ::envoy::api::v2::Node* release_node();
  void set_allocated_node(::envoy::api::v2::Node* node);

  // .envoy.api.v2.ConfigSource lds_config = 2;
  bool has_lds_config() const;
  void clear_lds_config();
  static const int kLdsConfigFieldNumber = 2;
  const ::envoy::api::v2::ConfigSource& lds_config() const;
  ::envoy::api::v2::ConfigSource* mutable_lds_config();
  ::envoy::api::v2::ConfigSource* release_lds_config();
  void set_allocated_lds_config(::envoy::api::v2::ConfigSource* lds_config);

  // .envoy.api.v2.ConfigSource cds_config = 3;
  bool has_cds_config() const;
  void clear_cds_config();
  static const int kCdsConfigFieldNumber = 3;
  const ::envoy::api::v2::ConfigSource& cds_config() const;
  ::envoy::api::v2::ConfigSource* mutable_cds_config();
  ::envoy::api::v2::ConfigSource* release_cds_config();
  void set_allocated_cds_config(::envoy::api::v2::ConfigSource* cds_config);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.Bootstrap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster > bootstrap_clusters_;
  ::envoy::api::v2::Node* node_;
  ::envoy::api::v2::ConfigSource* lds_config_;
  ::envoy::api::v2::ConfigSource* cds_config_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2fbootstrap_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Bootstrap

// .envoy.api.v2.Node node = 1;
inline bool Bootstrap::has_node() const {
  return this != internal_default_instance() && node_ != NULL;
}
inline void Bootstrap::clear_node() {
  if (GetArenaNoVirtual() == NULL && node_ != NULL) delete node_;
  node_ = NULL;
}
inline const ::envoy::api::v2::Node& Bootstrap::node() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.node)
  return node_ != NULL ? *node_
                         : *::envoy::api::v2::Node::internal_default_instance();
}
inline ::envoy::api::v2::Node* Bootstrap::mutable_node() {
  
  if (node_ == NULL) {
    node_ = new ::envoy::api::v2::Node;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.node)
  return node_;
}
inline ::envoy::api::v2::Node* Bootstrap::release_node() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.node)
  
  ::envoy::api::v2::Node* temp = node_;
  node_ = NULL;
  return temp;
}
inline void Bootstrap::set_allocated_node(::envoy::api::v2::Node* node) {
  delete node_;
  node_ = node;
  if (node) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.node)
}

// .envoy.api.v2.ConfigSource lds_config = 2;
inline bool Bootstrap::has_lds_config() const {
  return this != internal_default_instance() && lds_config_ != NULL;
}
inline void Bootstrap::clear_lds_config() {
  if (GetArenaNoVirtual() == NULL && lds_config_ != NULL) delete lds_config_;
  lds_config_ = NULL;
}
inline const ::envoy::api::v2::ConfigSource& Bootstrap::lds_config() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.lds_config)
  return lds_config_ != NULL ? *lds_config_
                         : *::envoy::api::v2::ConfigSource::internal_default_instance();
}
inline ::envoy::api::v2::ConfigSource* Bootstrap::mutable_lds_config() {
  
  if (lds_config_ == NULL) {
    lds_config_ = new ::envoy::api::v2::ConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.lds_config)
  return lds_config_;
}
inline ::envoy::api::v2::ConfigSource* Bootstrap::release_lds_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.lds_config)
  
  ::envoy::api::v2::ConfigSource* temp = lds_config_;
  lds_config_ = NULL;
  return temp;
}
inline void Bootstrap::set_allocated_lds_config(::envoy::api::v2::ConfigSource* lds_config) {
  delete lds_config_;
  lds_config_ = lds_config;
  if (lds_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.lds_config)
}

// .envoy.api.v2.ConfigSource cds_config = 3;
inline bool Bootstrap::has_cds_config() const {
  return this != internal_default_instance() && cds_config_ != NULL;
}
inline void Bootstrap::clear_cds_config() {
  if (GetArenaNoVirtual() == NULL && cds_config_ != NULL) delete cds_config_;
  cds_config_ = NULL;
}
inline const ::envoy::api::v2::ConfigSource& Bootstrap::cds_config() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.cds_config)
  return cds_config_ != NULL ? *cds_config_
                         : *::envoy::api::v2::ConfigSource::internal_default_instance();
}
inline ::envoy::api::v2::ConfigSource* Bootstrap::mutable_cds_config() {
  
  if (cds_config_ == NULL) {
    cds_config_ = new ::envoy::api::v2::ConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.cds_config)
  return cds_config_;
}
inline ::envoy::api::v2::ConfigSource* Bootstrap::release_cds_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Bootstrap.cds_config)
  
  ::envoy::api::v2::ConfigSource* temp = cds_config_;
  cds_config_ = NULL;
  return temp;
}
inline void Bootstrap::set_allocated_cds_config(::envoy::api::v2::ConfigSource* cds_config) {
  delete cds_config_;
  cds_config_ = cds_config;
  if (cds_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Bootstrap.cds_config)
}

// repeated .envoy.api.v2.Cluster bootstrap_clusters = 4;
inline int Bootstrap::bootstrap_clusters_size() const {
  return bootstrap_clusters_.size();
}
inline void Bootstrap::clear_bootstrap_clusters() {
  bootstrap_clusters_.Clear();
}
inline const ::envoy::api::v2::Cluster& Bootstrap::bootstrap_clusters(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return bootstrap_clusters_.Get(index);
}
inline ::envoy::api::v2::Cluster* Bootstrap::mutable_bootstrap_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return bootstrap_clusters_.Mutable(index);
}
inline ::envoy::api::v2::Cluster* Bootstrap::add_bootstrap_clusters() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return bootstrap_clusters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster >*
Bootstrap::mutable_bootstrap_clusters() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return &bootstrap_clusters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Cluster >&
Bootstrap::bootstrap_clusters() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.Bootstrap.bootstrap_clusters)
  return bootstrap_clusters_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace v2
}  // namespace api
}  // namespace envoy

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2fbootstrap_2eproto__INCLUDED
