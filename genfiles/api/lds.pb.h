// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/lds.proto

#ifndef PROTOBUF_api_2flds_2eproto__INCLUDED
#define PROTOBUF_api_2flds_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "api/address.pb.h"
#include "api/base.pb.h"
#include "api/tls_context.pb.h"
#include "google/api/annotations.pb.h"
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
namespace envoy {
namespace api {
namespace v2 {
class CertificateValidationContext;
class CertificateValidationContextDefaultTypeInternal;
extern CertificateValidationContextDefaultTypeInternal _CertificateValidationContext_default_instance_;
class DataSource;
class DataSourceDefaultTypeInternal;
extern DataSourceDefaultTypeInternal _DataSource_default_instance_;
class DiscoveryRequest;
class DiscoveryRequestDefaultTypeInternal;
extern DiscoveryRequestDefaultTypeInternal _DiscoveryRequest_default_instance_;
class DiscoveryResponse;
class DiscoveryResponseDefaultTypeInternal;
extern DiscoveryResponseDefaultTypeInternal _DiscoveryResponse_default_instance_;
class DownstreamTlsContext;
class DownstreamTlsContextDefaultTypeInternal;
extern DownstreamTlsContextDefaultTypeInternal _DownstreamTlsContext_default_instance_;
class Endpoint;
class EndpointDefaultTypeInternal;
extern EndpointDefaultTypeInternal _Endpoint_default_instance_;
class Filter;
class FilterDefaultTypeInternal;
extern FilterDefaultTypeInternal _Filter_default_instance_;
class FilterChain;
class FilterChainDefaultTypeInternal;
extern FilterChainDefaultTypeInternal _FilterChain_default_instance_;
class FilterChainMatch;
class FilterChainMatchDefaultTypeInternal;
extern FilterChainMatchDefaultTypeInternal _FilterChainMatch_default_instance_;
class FilterChainMatch_CidrRange;
class FilterChainMatch_CidrRangeDefaultTypeInternal;
extern FilterChainMatch_CidrRangeDefaultTypeInternal _FilterChainMatch_CidrRange_default_instance_;
class HeaderValue;
class HeaderValueDefaultTypeInternal;
extern HeaderValueDefaultTypeInternal _HeaderValue_default_instance_;
class HeaderValueOption;
class HeaderValueOptionDefaultTypeInternal;
extern HeaderValueOptionDefaultTypeInternal _HeaderValueOption_default_instance_;
class Listener;
class ListenerDefaultTypeInternal;
extern ListenerDefaultTypeInternal _Listener_default_instance_;
class Locality;
class LocalityDefaultTypeInternal;
extern LocalityDefaultTypeInternal _Locality_default_instance_;
class Metadata;
class MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class Pipe;
class PipeDefaultTypeInternal;
extern PipeDefaultTypeInternal _Pipe_default_instance_;
class ResolvedAddress;
class ResolvedAddressDefaultTypeInternal;
extern ResolvedAddressDefaultTypeInternal _ResolvedAddress_default_instance_;
class ResolvedAddress_SocketAddress;
class ResolvedAddress_SocketAddressDefaultTypeInternal;
extern ResolvedAddress_SocketAddressDefaultTypeInternal _ResolvedAddress_SocketAddress_default_instance_;
class ResolvedAddresses;
class ResolvedAddressesDefaultTypeInternal;
extern ResolvedAddressesDefaultTypeInternal _ResolvedAddresses_default_instance_;
class RuntimeUInt32;
class RuntimeUInt32DefaultTypeInternal;
extern RuntimeUInt32DefaultTypeInternal _RuntimeUInt32_default_instance_;
class TlsCertificate;
class TlsCertificateDefaultTypeInternal;
extern TlsCertificateDefaultTypeInternal _TlsCertificate_default_instance_;
class TlsParameters;
class TlsParametersDefaultTypeInternal;
extern TlsParametersDefaultTypeInternal _TlsParameters_default_instance_;
class UnresolvedAddress;
class UnresolvedAddressDefaultTypeInternal;
extern UnresolvedAddressDefaultTypeInternal _UnresolvedAddress_default_instance_;
class UnresolvedAddress_NamedAddress;
class UnresolvedAddress_NamedAddressDefaultTypeInternal;
extern UnresolvedAddress_NamedAddressDefaultTypeInternal _UnresolvedAddress_NamedAddress_default_instance_;
class UnresolvedAddress_Resolver;
class UnresolvedAddress_ResolverDefaultTypeInternal;
extern UnresolvedAddress_ResolverDefaultTypeInternal _UnresolvedAddress_Resolver_default_instance_;
class UnresolvedAddresses;
class UnresolvedAddressesDefaultTypeInternal;
extern UnresolvedAddressesDefaultTypeInternal _UnresolvedAddresses_default_instance_;
class UpstreamTlsContext;
class UpstreamTlsContextDefaultTypeInternal;
extern UpstreamTlsContextDefaultTypeInternal _UpstreamTlsContext_default_instance_;
}  // namespace v2
}  // namespace api
}  // namespace envoy
namespace google {
namespace api {
}  // namespace api
namespace protobuf {
class BoolValue;
class BoolValueDefaultTypeInternal;
extern BoolValueDefaultTypeInternal _BoolValue_default_instance_;
class BytesValue;
class BytesValueDefaultTypeInternal;
extern BytesValueDefaultTypeInternal _BytesValue_default_instance_;
class DoubleValue;
class DoubleValueDefaultTypeInternal;
extern DoubleValueDefaultTypeInternal _DoubleValue_default_instance_;
class FloatValue;
class FloatValueDefaultTypeInternal;
extern FloatValueDefaultTypeInternal _FloatValue_default_instance_;
class Int32Value;
class Int32ValueDefaultTypeInternal;
extern Int32ValueDefaultTypeInternal _Int32Value_default_instance_;
class Int64Value;
class Int64ValueDefaultTypeInternal;
extern Int64ValueDefaultTypeInternal _Int64Value_default_instance_;
class ListValue;
class ListValueDefaultTypeInternal;
extern ListValueDefaultTypeInternal _ListValue_default_instance_;
class StringValue;
class StringValueDefaultTypeInternal;
extern StringValueDefaultTypeInternal _StringValue_default_instance_;
class Struct;
class StructDefaultTypeInternal;
extern StructDefaultTypeInternal _Struct_default_instance_;
class UInt32Value;
class UInt32ValueDefaultTypeInternal;
extern UInt32ValueDefaultTypeInternal _UInt32Value_default_instance_;
class UInt64Value;
class UInt64ValueDefaultTypeInternal;
extern UInt64ValueDefaultTypeInternal _UInt64Value_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace envoy {
namespace api {
namespace v2 {

namespace protobuf_api_2flds_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_api_2flds_2eproto

enum Filter_Type {
  Filter_Type_BOTH = 0,
  Filter_Type_READ = 1,
  Filter_Type_WRITE = 2,
  Filter_Type_Filter_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Filter_Type_Filter_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Filter_Type_IsValid(int value);
const Filter_Type Filter_Type_Type_MIN = Filter_Type_BOTH;
const Filter_Type Filter_Type_Type_MAX = Filter_Type_WRITE;
const int Filter_Type_Type_ARRAYSIZE = Filter_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Filter_Type_descriptor();
inline const ::std::string& Filter_Type_Name(Filter_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Filter_Type_descriptor(), value);
}
inline bool Filter_Type_Parse(
    const ::std::string& name, Filter_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Filter_Type>(
    Filter_Type_descriptor(), name, value);
}
// ===================================================================

class Filter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.Filter) */ {
 public:
  Filter();
  virtual ~Filter();

  Filter(const Filter& from);

  inline Filter& operator=(const Filter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Filter& default_instance();

  static inline const Filter* internal_default_instance() {
    return reinterpret_cast<const Filter*>(
               &_Filter_default_instance_);
  }

  void Swap(Filter* other);

  // implements Message ----------------------------------------------

  inline Filter* New() const PROTOBUF_FINAL { return New(NULL); }

  Filter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Filter& from);
  void MergeFrom(const Filter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Filter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Filter_Type Type;
  static const Type BOTH =
    Filter_Type_BOTH;
  static const Type READ =
    Filter_Type_READ;
  static const Type WRITE =
    Filter_Type_WRITE;
  static inline bool Type_IsValid(int value) {
    return Filter_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Filter_Type_Type_MIN;
  static const Type Type_MAX =
    Filter_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Filter_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Filter_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Filter_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Filter_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.protobuf.Struct config = 3;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 3;
  const ::google::protobuf::Struct& config() const;
  ::google::protobuf::Struct* mutable_config();
  ::google::protobuf::Struct* release_config();
  void set_allocated_config(::google::protobuf::Struct* config);

  // .envoy.api.v2.Filter.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::envoy::api::v2::Filter_Type type() const;
  void set_type(::envoy::api::v2::Filter_Type value);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.Filter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::Struct* config_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2flds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilterChainMatch_CidrRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.FilterChainMatch.CidrRange) */ {
 public:
  FilterChainMatch_CidrRange();
  virtual ~FilterChainMatch_CidrRange();

  FilterChainMatch_CidrRange(const FilterChainMatch_CidrRange& from);

  inline FilterChainMatch_CidrRange& operator=(const FilterChainMatch_CidrRange& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilterChainMatch_CidrRange& default_instance();

  static inline const FilterChainMatch_CidrRange* internal_default_instance() {
    return reinterpret_cast<const FilterChainMatch_CidrRange*>(
               &_FilterChainMatch_CidrRange_default_instance_);
  }

  void Swap(FilterChainMatch_CidrRange* other);

  // implements Message ----------------------------------------------

  inline FilterChainMatch_CidrRange* New() const PROTOBUF_FINAL { return New(NULL); }

  FilterChainMatch_CidrRange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FilterChainMatch_CidrRange& from);
  void MergeFrom(const FilterChainMatch_CidrRange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FilterChainMatch_CidrRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address_prefix = 1;
  void clear_address_prefix();
  static const int kAddressPrefixFieldNumber = 1;
  const ::std::string& address_prefix() const;
  void set_address_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_address_prefix(::std::string&& value);
  #endif
  void set_address_prefix(const char* value);
  void set_address_prefix(const char* value, size_t size);
  ::std::string* mutable_address_prefix();
  ::std::string* release_address_prefix();
  void set_allocated_address_prefix(::std::string* address_prefix);

  // .google.protobuf.UInt32Value prefix_len = 2;
  bool has_prefix_len() const;
  void clear_prefix_len();
  static const int kPrefixLenFieldNumber = 2;
  const ::google::protobuf::UInt32Value& prefix_len() const;
  ::google::protobuf::UInt32Value* mutable_prefix_len();
  ::google::protobuf::UInt32Value* release_prefix_len();
  void set_allocated_prefix_len(::google::protobuf::UInt32Value* prefix_len);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.FilterChainMatch.CidrRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_prefix_;
  ::google::protobuf::UInt32Value* prefix_len_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2flds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilterChainMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.FilterChainMatch) */ {
 public:
  FilterChainMatch();
  virtual ~FilterChainMatch();

  FilterChainMatch(const FilterChainMatch& from);

  inline FilterChainMatch& operator=(const FilterChainMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilterChainMatch& default_instance();

  static inline const FilterChainMatch* internal_default_instance() {
    return reinterpret_cast<const FilterChainMatch*>(
               &_FilterChainMatch_default_instance_);
  }

  void Swap(FilterChainMatch* other);

  // implements Message ----------------------------------------------

  inline FilterChainMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  FilterChainMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FilterChainMatch& from);
  void MergeFrom(const FilterChainMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FilterChainMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FilterChainMatch_CidrRange CidrRange;

  // accessors -------------------------------------------------------

  // repeated string sni_domains = 1;
  int sni_domains_size() const;
  void clear_sni_domains();
  static const int kSniDomainsFieldNumber = 1;
  const ::std::string& sni_domains(int index) const;
  ::std::string* mutable_sni_domains(int index);
  void set_sni_domains(int index, const ::std::string& value);
  void set_sni_domains(int index, const char* value);
  void set_sni_domains(int index, const char* value, size_t size);
  ::std::string* add_sni_domains();
  void add_sni_domains(const ::std::string& value);
  void add_sni_domains(const char* value);
  void add_sni_domains(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& sni_domains() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sni_domains();

  // repeated .envoy.api.v2.FilterChainMatch.CidrRange prefix_ranges = 3;
  int prefix_ranges_size() const;
  void clear_prefix_ranges();
  static const int kPrefixRangesFieldNumber = 3;
  const ::envoy::api::v2::FilterChainMatch_CidrRange& prefix_ranges(int index) const;
  ::envoy::api::v2::FilterChainMatch_CidrRange* mutable_prefix_ranges(int index);
  ::envoy::api::v2::FilterChainMatch_CidrRange* add_prefix_ranges();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange >*
      mutable_prefix_ranges();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange >&
      prefix_ranges() const;

  // repeated .envoy.api.v2.FilterChainMatch.CidrRange source_prefix_ranges = 6;
  int source_prefix_ranges_size() const;
  void clear_source_prefix_ranges();
  static const int kSourcePrefixRangesFieldNumber = 6;
  const ::envoy::api::v2::FilterChainMatch_CidrRange& source_prefix_ranges(int index) const;
  ::envoy::api::v2::FilterChainMatch_CidrRange* mutable_source_prefix_ranges(int index);
  ::envoy::api::v2::FilterChainMatch_CidrRange* add_source_prefix_ranges();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange >*
      mutable_source_prefix_ranges();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange >&
      source_prefix_ranges() const;

  // repeated .google.protobuf.UInt32Value source_ports = 7;
  int source_ports_size() const;
  void clear_source_ports();
  static const int kSourcePortsFieldNumber = 7;
  const ::google::protobuf::UInt32Value& source_ports(int index) const;
  ::google::protobuf::UInt32Value* mutable_source_ports(int index);
  ::google::protobuf::UInt32Value* add_source_ports();
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::UInt32Value >*
      mutable_source_ports();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::UInt32Value >&
      source_ports() const;

  // string address_suffix = 4;
  void clear_address_suffix();
  static const int kAddressSuffixFieldNumber = 4;
  const ::std::string& address_suffix() const;
  void set_address_suffix(const ::std::string& value);
  #if LANG_CXX11
  void set_address_suffix(::std::string&& value);
  #endif
  void set_address_suffix(const char* value);
  void set_address_suffix(const char* value, size_t size);
  ::std::string* mutable_address_suffix();
  ::std::string* release_address_suffix();
  void set_allocated_address_suffix(::std::string* address_suffix);

  // .google.protobuf.UInt32Value suffix_len = 5;
  bool has_suffix_len() const;
  void clear_suffix_len();
  static const int kSuffixLenFieldNumber = 5;
  const ::google::protobuf::UInt32Value& suffix_len() const;
  ::google::protobuf::UInt32Value* mutable_suffix_len();
  ::google::protobuf::UInt32Value* release_suffix_len();
  void set_allocated_suffix_len(::google::protobuf::UInt32Value* suffix_len);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.FilterChainMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> sni_domains_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange > prefix_ranges_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange > source_prefix_ranges_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::UInt32Value > source_ports_;
  ::google::protobuf::internal::ArenaStringPtr address_suffix_;
  ::google::protobuf::UInt32Value* suffix_len_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2flds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilterChain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.FilterChain) */ {
 public:
  FilterChain();
  virtual ~FilterChain();

  FilterChain(const FilterChain& from);

  inline FilterChain& operator=(const FilterChain& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilterChain& default_instance();

  static inline const FilterChain* internal_default_instance() {
    return reinterpret_cast<const FilterChain*>(
               &_FilterChain_default_instance_);
  }

  void Swap(FilterChain* other);

  // implements Message ----------------------------------------------

  inline FilterChain* New() const PROTOBUF_FINAL { return New(NULL); }

  FilterChain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FilterChain& from);
  void MergeFrom(const FilterChain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FilterChain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.Filter filter_chain = 3;
  int filter_chain_size() const;
  void clear_filter_chain();
  static const int kFilterChainFieldNumber = 3;
  const ::envoy::api::v2::Filter& filter_chain(int index) const;
  ::envoy::api::v2::Filter* mutable_filter_chain(int index);
  ::envoy::api::v2::Filter* add_filter_chain();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Filter >*
      mutable_filter_chain();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Filter >&
      filter_chain() const;

  // .envoy.api.v2.FilterChainMatch filter_chain_match = 1;
  bool has_filter_chain_match() const;
  void clear_filter_chain_match();
  static const int kFilterChainMatchFieldNumber = 1;
  const ::envoy::api::v2::FilterChainMatch& filter_chain_match() const;
  ::envoy::api::v2::FilterChainMatch* mutable_filter_chain_match();
  ::envoy::api::v2::FilterChainMatch* release_filter_chain_match();
  void set_allocated_filter_chain_match(::envoy::api::v2::FilterChainMatch* filter_chain_match);

  // .envoy.api.v2.DownstreamTlsContext tls_context = 2;
  bool has_tls_context() const;
  void clear_tls_context();
  static const int kTlsContextFieldNumber = 2;
  const ::envoy::api::v2::DownstreamTlsContext& tls_context() const;
  ::envoy::api::v2::DownstreamTlsContext* mutable_tls_context();
  ::envoy::api::v2::DownstreamTlsContext* release_tls_context();
  void set_allocated_tls_context(::envoy::api::v2::DownstreamTlsContext* tls_context);

  // .google.protobuf.BoolValue use_proxy_proto = 4;
  bool has_use_proxy_proto() const;
  void clear_use_proxy_proto();
  static const int kUseProxyProtoFieldNumber = 4;
  const ::google::protobuf::BoolValue& use_proxy_proto() const;
  ::google::protobuf::BoolValue* mutable_use_proxy_proto();
  ::google::protobuf::BoolValue* release_use_proxy_proto();
  void set_allocated_use_proxy_proto(::google::protobuf::BoolValue* use_proxy_proto);

  // .envoy.api.v2.Metadata metadata = 5;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::envoy::api::v2::Metadata& metadata() const;
  ::envoy::api::v2::Metadata* mutable_metadata();
  ::envoy::api::v2::Metadata* release_metadata();
  void set_allocated_metadata(::envoy::api::v2::Metadata* metadata);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.FilterChain)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Filter > filter_chain_;
  ::envoy::api::v2::FilterChainMatch* filter_chain_match_;
  ::envoy::api::v2::DownstreamTlsContext* tls_context_;
  ::google::protobuf::BoolValue* use_proxy_proto_;
  ::envoy::api::v2::Metadata* metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2flds_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Listener : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:envoy.api.v2.Listener) */ {
 public:
  Listener();
  virtual ~Listener();

  Listener(const Listener& from);

  inline Listener& operator=(const Listener& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Listener& default_instance();

  static inline const Listener* internal_default_instance() {
    return reinterpret_cast<const Listener*>(
               &_Listener_default_instance_);
  }

  void Swap(Listener* other);

  // implements Message ----------------------------------------------

  inline Listener* New() const PROTOBUF_FINAL { return New(NULL); }

  Listener* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Listener& from);
  void MergeFrom(const Listener& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Listener* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .envoy.api.v2.FilterChain filter_chains = 2;
  int filter_chains_size() const;
  void clear_filter_chains();
  static const int kFilterChainsFieldNumber = 2;
  const ::envoy::api::v2::FilterChain& filter_chains(int index) const;
  ::envoy::api::v2::FilterChain* mutable_filter_chains(int index);
  ::envoy::api::v2::FilterChain* add_filter_chains();
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChain >*
      mutable_filter_chains();
  const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChain >&
      filter_chains() const;

  // .envoy.api.v2.UnresolvedAddress address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::envoy::api::v2::UnresolvedAddress& address() const;
  ::envoy::api::v2::UnresolvedAddress* mutable_address();
  ::envoy::api::v2::UnresolvedAddress* release_address();
  void set_allocated_address(::envoy::api::v2::UnresolvedAddress* address);

  // .google.protobuf.BoolValue use_original_dst = 3;
  bool has_use_original_dst() const;
  void clear_use_original_dst();
  static const int kUseOriginalDstFieldNumber = 3;
  const ::google::protobuf::BoolValue& use_original_dst() const;
  ::google::protobuf::BoolValue* mutable_use_original_dst();
  ::google::protobuf::BoolValue* release_use_original_dst();
  void set_allocated_use_original_dst(::google::protobuf::BoolValue* use_original_dst);

  // .google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 4;
  bool has_per_connection_buffer_limit_bytes() const;
  void clear_per_connection_buffer_limit_bytes();
  static const int kPerConnectionBufferLimitBytesFieldNumber = 4;
  const ::google::protobuf::UInt32Value& per_connection_buffer_limit_bytes() const;
  ::google::protobuf::UInt32Value* mutable_per_connection_buffer_limit_bytes();
  ::google::protobuf::UInt32Value* release_per_connection_buffer_limit_bytes();
  void set_allocated_per_connection_buffer_limit_bytes(::google::protobuf::UInt32Value* per_connection_buffer_limit_bytes);

  // .envoy.api.v2.Metadata metadata = 5;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::envoy::api::v2::Metadata& metadata() const;
  ::envoy::api::v2::Metadata* mutable_metadata();
  ::envoy::api::v2::Metadata* release_metadata();
  void set_allocated_metadata(::envoy::api::v2::Metadata* metadata);

  // @@protoc_insertion_point(class_scope:envoy.api.v2.Listener)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChain > filter_chains_;
  ::envoy::api::v2::UnresolvedAddress* address_;
  ::google::protobuf::BoolValue* use_original_dst_;
  ::google::protobuf::UInt32Value* per_connection_buffer_limit_bytes_;
  ::envoy::api::v2::Metadata* metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_api_2flds_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Filter

// .envoy.api.v2.Filter.Type type = 1;
inline void Filter::clear_type() {
  type_ = 0;
}
inline ::envoy::api::v2::Filter_Type Filter::type() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Filter.type)
  return static_cast< ::envoy::api::v2::Filter_Type >(type_);
}
inline void Filter::set_type(::envoy::api::v2::Filter_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:envoy.api.v2.Filter.type)
}

// string name = 2;
inline void Filter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Filter::name() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Filter.name)
  return name_.GetNoArena();
}
inline void Filter::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.Filter.name)
}
#if LANG_CXX11
inline void Filter::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.Filter.name)
}
#endif
inline void Filter::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.Filter.name)
}
inline void Filter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.Filter.name)
}
inline ::std::string* Filter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Filter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Filter::release_name() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Filter.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Filter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Filter.name)
}

// .google.protobuf.Struct config = 3;
inline bool Filter::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Filter::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::google::protobuf::Struct& Filter::config() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Filter.config)
  return config_ != NULL ? *config_
                         : *::google::protobuf::Struct::internal_default_instance();
}
inline ::google::protobuf::Struct* Filter::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Filter.config)
  return config_;
}
inline ::google::protobuf::Struct* Filter::release_config() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Filter.config)
  
  ::google::protobuf::Struct* temp = config_;
  config_ = NULL;
  return temp;
}
inline void Filter::set_allocated_config(::google::protobuf::Struct* config) {
  delete config_;
  if (config != NULL && config->GetArena() != NULL) {
    ::google::protobuf::Struct* new_config = new ::google::protobuf::Struct;
    new_config->CopyFrom(*config);
    config = new_config;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Filter.config)
}

// -------------------------------------------------------------------

// FilterChainMatch_CidrRange

// string address_prefix = 1;
inline void FilterChainMatch_CidrRange::clear_address_prefix() {
  address_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilterChainMatch_CidrRange::address_prefix() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChainMatch.CidrRange.address_prefix)
  return address_prefix_.GetNoArena();
}
inline void FilterChainMatch_CidrRange::set_address_prefix(const ::std::string& value) {
  
  address_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.FilterChainMatch.CidrRange.address_prefix)
}
#if LANG_CXX11
inline void FilterChainMatch_CidrRange::set_address_prefix(::std::string&& value) {
  
  address_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.FilterChainMatch.CidrRange.address_prefix)
}
#endif
inline void FilterChainMatch_CidrRange::set_address_prefix(const char* value) {
  
  address_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.FilterChainMatch.CidrRange.address_prefix)
}
inline void FilterChainMatch_CidrRange::set_address_prefix(const char* value, size_t size) {
  
  address_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.FilterChainMatch.CidrRange.address_prefix)
}
inline ::std::string* FilterChainMatch_CidrRange::mutable_address_prefix() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChainMatch.CidrRange.address_prefix)
  return address_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilterChainMatch_CidrRange::release_address_prefix() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.FilterChainMatch.CidrRange.address_prefix)
  
  return address_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilterChainMatch_CidrRange::set_allocated_address_prefix(::std::string* address_prefix) {
  if (address_prefix != NULL) {
    
  } else {
    
  }
  address_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_prefix);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.FilterChainMatch.CidrRange.address_prefix)
}

// .google.protobuf.UInt32Value prefix_len = 2;
inline bool FilterChainMatch_CidrRange::has_prefix_len() const {
  return this != internal_default_instance() && prefix_len_ != NULL;
}
inline void FilterChainMatch_CidrRange::clear_prefix_len() {
  if (GetArenaNoVirtual() == NULL && prefix_len_ != NULL) delete prefix_len_;
  prefix_len_ = NULL;
}
inline const ::google::protobuf::UInt32Value& FilterChainMatch_CidrRange::prefix_len() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChainMatch.CidrRange.prefix_len)
  return prefix_len_ != NULL ? *prefix_len_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
inline ::google::protobuf::UInt32Value* FilterChainMatch_CidrRange::mutable_prefix_len() {
  
  if (prefix_len_ == NULL) {
    prefix_len_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChainMatch.CidrRange.prefix_len)
  return prefix_len_;
}
inline ::google::protobuf::UInt32Value* FilterChainMatch_CidrRange::release_prefix_len() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.FilterChainMatch.CidrRange.prefix_len)
  
  ::google::protobuf::UInt32Value* temp = prefix_len_;
  prefix_len_ = NULL;
  return temp;
}
inline void FilterChainMatch_CidrRange::set_allocated_prefix_len(::google::protobuf::UInt32Value* prefix_len) {
  delete prefix_len_;
  if (prefix_len != NULL && prefix_len->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_prefix_len = new ::google::protobuf::UInt32Value;
    new_prefix_len->CopyFrom(*prefix_len);
    prefix_len = new_prefix_len;
  }
  prefix_len_ = prefix_len;
  if (prefix_len) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.FilterChainMatch.CidrRange.prefix_len)
}

// -------------------------------------------------------------------

// FilterChainMatch

// repeated string sni_domains = 1;
inline int FilterChainMatch::sni_domains_size() const {
  return sni_domains_.size();
}
inline void FilterChainMatch::clear_sni_domains() {
  sni_domains_.Clear();
}
inline const ::std::string& FilterChainMatch::sni_domains(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChainMatch.sni_domains)
  return sni_domains_.Get(index);
}
inline ::std::string* FilterChainMatch::mutable_sni_domains(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChainMatch.sni_domains)
  return sni_domains_.Mutable(index);
}
inline void FilterChainMatch::set_sni_domains(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:envoy.api.v2.FilterChainMatch.sni_domains)
  sni_domains_.Mutable(index)->assign(value);
}
inline void FilterChainMatch::set_sni_domains(int index, const char* value) {
  sni_domains_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.FilterChainMatch.sni_domains)
}
inline void FilterChainMatch::set_sni_domains(int index, const char* value, size_t size) {
  sni_domains_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.FilterChainMatch.sni_domains)
}
inline ::std::string* FilterChainMatch::add_sni_domains() {
  // @@protoc_insertion_point(field_add_mutable:envoy.api.v2.FilterChainMatch.sni_domains)
  return sni_domains_.Add();
}
inline void FilterChainMatch::add_sni_domains(const ::std::string& value) {
  sni_domains_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:envoy.api.v2.FilterChainMatch.sni_domains)
}
inline void FilterChainMatch::add_sni_domains(const char* value) {
  sni_domains_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:envoy.api.v2.FilterChainMatch.sni_domains)
}
inline void FilterChainMatch::add_sni_domains(const char* value, size_t size) {
  sni_domains_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:envoy.api.v2.FilterChainMatch.sni_domains)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FilterChainMatch::sni_domains() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.FilterChainMatch.sni_domains)
  return sni_domains_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FilterChainMatch::mutable_sni_domains() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.FilterChainMatch.sni_domains)
  return &sni_domains_;
}

// repeated .envoy.api.v2.FilterChainMatch.CidrRange prefix_ranges = 3;
inline int FilterChainMatch::prefix_ranges_size() const {
  return prefix_ranges_.size();
}
inline void FilterChainMatch::clear_prefix_ranges() {
  prefix_ranges_.Clear();
}
inline const ::envoy::api::v2::FilterChainMatch_CidrRange& FilterChainMatch::prefix_ranges(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChainMatch.prefix_ranges)
  return prefix_ranges_.Get(index);
}
inline ::envoy::api::v2::FilterChainMatch_CidrRange* FilterChainMatch::mutable_prefix_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChainMatch.prefix_ranges)
  return prefix_ranges_.Mutable(index);
}
inline ::envoy::api::v2::FilterChainMatch_CidrRange* FilterChainMatch::add_prefix_ranges() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.FilterChainMatch.prefix_ranges)
  return prefix_ranges_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange >*
FilterChainMatch::mutable_prefix_ranges() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.FilterChainMatch.prefix_ranges)
  return &prefix_ranges_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange >&
FilterChainMatch::prefix_ranges() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.FilterChainMatch.prefix_ranges)
  return prefix_ranges_;
}

// string address_suffix = 4;
inline void FilterChainMatch::clear_address_suffix() {
  address_suffix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilterChainMatch::address_suffix() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChainMatch.address_suffix)
  return address_suffix_.GetNoArena();
}
inline void FilterChainMatch::set_address_suffix(const ::std::string& value) {
  
  address_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:envoy.api.v2.FilterChainMatch.address_suffix)
}
#if LANG_CXX11
inline void FilterChainMatch::set_address_suffix(::std::string&& value) {
  
  address_suffix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:envoy.api.v2.FilterChainMatch.address_suffix)
}
#endif
inline void FilterChainMatch::set_address_suffix(const char* value) {
  
  address_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:envoy.api.v2.FilterChainMatch.address_suffix)
}
inline void FilterChainMatch::set_address_suffix(const char* value, size_t size) {
  
  address_suffix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:envoy.api.v2.FilterChainMatch.address_suffix)
}
inline ::std::string* FilterChainMatch::mutable_address_suffix() {
  
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChainMatch.address_suffix)
  return address_suffix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilterChainMatch::release_address_suffix() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.FilterChainMatch.address_suffix)
  
  return address_suffix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilterChainMatch::set_allocated_address_suffix(::std::string* address_suffix) {
  if (address_suffix != NULL) {
    
  } else {
    
  }
  address_suffix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_suffix);
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.FilterChainMatch.address_suffix)
}

// .google.protobuf.UInt32Value suffix_len = 5;
inline bool FilterChainMatch::has_suffix_len() const {
  return this != internal_default_instance() && suffix_len_ != NULL;
}
inline void FilterChainMatch::clear_suffix_len() {
  if (GetArenaNoVirtual() == NULL && suffix_len_ != NULL) delete suffix_len_;
  suffix_len_ = NULL;
}
inline const ::google::protobuf::UInt32Value& FilterChainMatch::suffix_len() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChainMatch.suffix_len)
  return suffix_len_ != NULL ? *suffix_len_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
inline ::google::protobuf::UInt32Value* FilterChainMatch::mutable_suffix_len() {
  
  if (suffix_len_ == NULL) {
    suffix_len_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChainMatch.suffix_len)
  return suffix_len_;
}
inline ::google::protobuf::UInt32Value* FilterChainMatch::release_suffix_len() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.FilterChainMatch.suffix_len)
  
  ::google::protobuf::UInt32Value* temp = suffix_len_;
  suffix_len_ = NULL;
  return temp;
}
inline void FilterChainMatch::set_allocated_suffix_len(::google::protobuf::UInt32Value* suffix_len) {
  delete suffix_len_;
  if (suffix_len != NULL && suffix_len->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_suffix_len = new ::google::protobuf::UInt32Value;
    new_suffix_len->CopyFrom(*suffix_len);
    suffix_len = new_suffix_len;
  }
  suffix_len_ = suffix_len;
  if (suffix_len) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.FilterChainMatch.suffix_len)
}

// repeated .envoy.api.v2.FilterChainMatch.CidrRange source_prefix_ranges = 6;
inline int FilterChainMatch::source_prefix_ranges_size() const {
  return source_prefix_ranges_.size();
}
inline void FilterChainMatch::clear_source_prefix_ranges() {
  source_prefix_ranges_.Clear();
}
inline const ::envoy::api::v2::FilterChainMatch_CidrRange& FilterChainMatch::source_prefix_ranges(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChainMatch.source_prefix_ranges)
  return source_prefix_ranges_.Get(index);
}
inline ::envoy::api::v2::FilterChainMatch_CidrRange* FilterChainMatch::mutable_source_prefix_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChainMatch.source_prefix_ranges)
  return source_prefix_ranges_.Mutable(index);
}
inline ::envoy::api::v2::FilterChainMatch_CidrRange* FilterChainMatch::add_source_prefix_ranges() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.FilterChainMatch.source_prefix_ranges)
  return source_prefix_ranges_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange >*
FilterChainMatch::mutable_source_prefix_ranges() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.FilterChainMatch.source_prefix_ranges)
  return &source_prefix_ranges_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChainMatch_CidrRange >&
FilterChainMatch::source_prefix_ranges() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.FilterChainMatch.source_prefix_ranges)
  return source_prefix_ranges_;
}

// repeated .google.protobuf.UInt32Value source_ports = 7;
inline int FilterChainMatch::source_ports_size() const {
  return source_ports_.size();
}
inline void FilterChainMatch::clear_source_ports() {
  source_ports_.Clear();
}
inline const ::google::protobuf::UInt32Value& FilterChainMatch::source_ports(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChainMatch.source_ports)
  return source_ports_.Get(index);
}
inline ::google::protobuf::UInt32Value* FilterChainMatch::mutable_source_ports(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChainMatch.source_ports)
  return source_ports_.Mutable(index);
}
inline ::google::protobuf::UInt32Value* FilterChainMatch::add_source_ports() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.FilterChainMatch.source_ports)
  return source_ports_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::UInt32Value >*
FilterChainMatch::mutable_source_ports() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.FilterChainMatch.source_ports)
  return &source_ports_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::UInt32Value >&
FilterChainMatch::source_ports() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.FilterChainMatch.source_ports)
  return source_ports_;
}

// -------------------------------------------------------------------

// FilterChain

// .envoy.api.v2.FilterChainMatch filter_chain_match = 1;
inline bool FilterChain::has_filter_chain_match() const {
  return this != internal_default_instance() && filter_chain_match_ != NULL;
}
inline void FilterChain::clear_filter_chain_match() {
  if (GetArenaNoVirtual() == NULL && filter_chain_match_ != NULL) delete filter_chain_match_;
  filter_chain_match_ = NULL;
}
inline const ::envoy::api::v2::FilterChainMatch& FilterChain::filter_chain_match() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChain.filter_chain_match)
  return filter_chain_match_ != NULL ? *filter_chain_match_
                         : *::envoy::api::v2::FilterChainMatch::internal_default_instance();
}
inline ::envoy::api::v2::FilterChainMatch* FilterChain::mutable_filter_chain_match() {
  
  if (filter_chain_match_ == NULL) {
    filter_chain_match_ = new ::envoy::api::v2::FilterChainMatch;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChain.filter_chain_match)
  return filter_chain_match_;
}
inline ::envoy::api::v2::FilterChainMatch* FilterChain::release_filter_chain_match() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.FilterChain.filter_chain_match)
  
  ::envoy::api::v2::FilterChainMatch* temp = filter_chain_match_;
  filter_chain_match_ = NULL;
  return temp;
}
inline void FilterChain::set_allocated_filter_chain_match(::envoy::api::v2::FilterChainMatch* filter_chain_match) {
  delete filter_chain_match_;
  filter_chain_match_ = filter_chain_match;
  if (filter_chain_match) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.FilterChain.filter_chain_match)
}

// .envoy.api.v2.DownstreamTlsContext tls_context = 2;
inline bool FilterChain::has_tls_context() const {
  return this != internal_default_instance() && tls_context_ != NULL;
}
inline void FilterChain::clear_tls_context() {
  if (GetArenaNoVirtual() == NULL && tls_context_ != NULL) delete tls_context_;
  tls_context_ = NULL;
}
inline const ::envoy::api::v2::DownstreamTlsContext& FilterChain::tls_context() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChain.tls_context)
  return tls_context_ != NULL ? *tls_context_
                         : *::envoy::api::v2::DownstreamTlsContext::internal_default_instance();
}
inline ::envoy::api::v2::DownstreamTlsContext* FilterChain::mutable_tls_context() {
  
  if (tls_context_ == NULL) {
    tls_context_ = new ::envoy::api::v2::DownstreamTlsContext;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChain.tls_context)
  return tls_context_;
}
inline ::envoy::api::v2::DownstreamTlsContext* FilterChain::release_tls_context() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.FilterChain.tls_context)
  
  ::envoy::api::v2::DownstreamTlsContext* temp = tls_context_;
  tls_context_ = NULL;
  return temp;
}
inline void FilterChain::set_allocated_tls_context(::envoy::api::v2::DownstreamTlsContext* tls_context) {
  delete tls_context_;
  tls_context_ = tls_context;
  if (tls_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.FilterChain.tls_context)
}

// repeated .envoy.api.v2.Filter filter_chain = 3;
inline int FilterChain::filter_chain_size() const {
  return filter_chain_.size();
}
inline void FilterChain::clear_filter_chain() {
  filter_chain_.Clear();
}
inline const ::envoy::api::v2::Filter& FilterChain::filter_chain(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChain.filter_chain)
  return filter_chain_.Get(index);
}
inline ::envoy::api::v2::Filter* FilterChain::mutable_filter_chain(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChain.filter_chain)
  return filter_chain_.Mutable(index);
}
inline ::envoy::api::v2::Filter* FilterChain::add_filter_chain() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.FilterChain.filter_chain)
  return filter_chain_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Filter >*
FilterChain::mutable_filter_chain() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.FilterChain.filter_chain)
  return &filter_chain_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::Filter >&
FilterChain::filter_chain() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.FilterChain.filter_chain)
  return filter_chain_;
}

// .google.protobuf.BoolValue use_proxy_proto = 4;
inline bool FilterChain::has_use_proxy_proto() const {
  return this != internal_default_instance() && use_proxy_proto_ != NULL;
}
inline void FilterChain::clear_use_proxy_proto() {
  if (GetArenaNoVirtual() == NULL && use_proxy_proto_ != NULL) delete use_proxy_proto_;
  use_proxy_proto_ = NULL;
}
inline const ::google::protobuf::BoolValue& FilterChain::use_proxy_proto() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChain.use_proxy_proto)
  return use_proxy_proto_ != NULL ? *use_proxy_proto_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
inline ::google::protobuf::BoolValue* FilterChain::mutable_use_proxy_proto() {
  
  if (use_proxy_proto_ == NULL) {
    use_proxy_proto_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChain.use_proxy_proto)
  return use_proxy_proto_;
}
inline ::google::protobuf::BoolValue* FilterChain::release_use_proxy_proto() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.FilterChain.use_proxy_proto)
  
  ::google::protobuf::BoolValue* temp = use_proxy_proto_;
  use_proxy_proto_ = NULL;
  return temp;
}
inline void FilterChain::set_allocated_use_proxy_proto(::google::protobuf::BoolValue* use_proxy_proto) {
  delete use_proxy_proto_;
  if (use_proxy_proto != NULL && use_proxy_proto->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_use_proxy_proto = new ::google::protobuf::BoolValue;
    new_use_proxy_proto->CopyFrom(*use_proxy_proto);
    use_proxy_proto = new_use_proxy_proto;
  }
  use_proxy_proto_ = use_proxy_proto;
  if (use_proxy_proto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.FilterChain.use_proxy_proto)
}

// .envoy.api.v2.Metadata metadata = 5;
inline bool FilterChain::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
inline void FilterChain::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) delete metadata_;
  metadata_ = NULL;
}
inline const ::envoy::api::v2::Metadata& FilterChain::metadata() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.FilterChain.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::envoy::api::v2::Metadata::internal_default_instance();
}
inline ::envoy::api::v2::Metadata* FilterChain::mutable_metadata() {
  
  if (metadata_ == NULL) {
    metadata_ = new ::envoy::api::v2::Metadata;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.FilterChain.metadata)
  return metadata_;
}
inline ::envoy::api::v2::Metadata* FilterChain::release_metadata() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.FilterChain.metadata)
  
  ::envoy::api::v2::Metadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void FilterChain::set_allocated_metadata(::envoy::api::v2::Metadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.FilterChain.metadata)
}

// -------------------------------------------------------------------

// Listener

// .envoy.api.v2.UnresolvedAddress address = 1;
inline bool Listener::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline void Listener::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
inline const ::envoy::api::v2::UnresolvedAddress& Listener::address() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Listener.address)
  return address_ != NULL ? *address_
                         : *::envoy::api::v2::UnresolvedAddress::internal_default_instance();
}
inline ::envoy::api::v2::UnresolvedAddress* Listener::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::envoy::api::v2::UnresolvedAddress;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Listener.address)
  return address_;
}
inline ::envoy::api::v2::UnresolvedAddress* Listener::release_address() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Listener.address)
  
  ::envoy::api::v2::UnresolvedAddress* temp = address_;
  address_ = NULL;
  return temp;
}
inline void Listener::set_allocated_address(::envoy::api::v2::UnresolvedAddress* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Listener.address)
}

// repeated .envoy.api.v2.FilterChain filter_chains = 2;
inline int Listener::filter_chains_size() const {
  return filter_chains_.size();
}
inline void Listener::clear_filter_chains() {
  filter_chains_.Clear();
}
inline const ::envoy::api::v2::FilterChain& Listener::filter_chains(int index) const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Listener.filter_chains)
  return filter_chains_.Get(index);
}
inline ::envoy::api::v2::FilterChain* Listener::mutable_filter_chains(int index) {
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Listener.filter_chains)
  return filter_chains_.Mutable(index);
}
inline ::envoy::api::v2::FilterChain* Listener::add_filter_chains() {
  // @@protoc_insertion_point(field_add:envoy.api.v2.Listener.filter_chains)
  return filter_chains_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChain >*
Listener::mutable_filter_chains() {
  // @@protoc_insertion_point(field_mutable_list:envoy.api.v2.Listener.filter_chains)
  return &filter_chains_;
}
inline const ::google::protobuf::RepeatedPtrField< ::envoy::api::v2::FilterChain >&
Listener::filter_chains() const {
  // @@protoc_insertion_point(field_list:envoy.api.v2.Listener.filter_chains)
  return filter_chains_;
}

// .google.protobuf.BoolValue use_original_dst = 3;
inline bool Listener::has_use_original_dst() const {
  return this != internal_default_instance() && use_original_dst_ != NULL;
}
inline void Listener::clear_use_original_dst() {
  if (GetArenaNoVirtual() == NULL && use_original_dst_ != NULL) delete use_original_dst_;
  use_original_dst_ = NULL;
}
inline const ::google::protobuf::BoolValue& Listener::use_original_dst() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Listener.use_original_dst)
  return use_original_dst_ != NULL ? *use_original_dst_
                         : *::google::protobuf::BoolValue::internal_default_instance();
}
inline ::google::protobuf::BoolValue* Listener::mutable_use_original_dst() {
  
  if (use_original_dst_ == NULL) {
    use_original_dst_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Listener.use_original_dst)
  return use_original_dst_;
}
inline ::google::protobuf::BoolValue* Listener::release_use_original_dst() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Listener.use_original_dst)
  
  ::google::protobuf::BoolValue* temp = use_original_dst_;
  use_original_dst_ = NULL;
  return temp;
}
inline void Listener::set_allocated_use_original_dst(::google::protobuf::BoolValue* use_original_dst) {
  delete use_original_dst_;
  if (use_original_dst != NULL && use_original_dst->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_use_original_dst = new ::google::protobuf::BoolValue;
    new_use_original_dst->CopyFrom(*use_original_dst);
    use_original_dst = new_use_original_dst;
  }
  use_original_dst_ = use_original_dst;
  if (use_original_dst) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Listener.use_original_dst)
}

// .google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 4;
inline bool Listener::has_per_connection_buffer_limit_bytes() const {
  return this != internal_default_instance() && per_connection_buffer_limit_bytes_ != NULL;
}
inline void Listener::clear_per_connection_buffer_limit_bytes() {
  if (GetArenaNoVirtual() == NULL && per_connection_buffer_limit_bytes_ != NULL) delete per_connection_buffer_limit_bytes_;
  per_connection_buffer_limit_bytes_ = NULL;
}
inline const ::google::protobuf::UInt32Value& Listener::per_connection_buffer_limit_bytes() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Listener.per_connection_buffer_limit_bytes)
  return per_connection_buffer_limit_bytes_ != NULL ? *per_connection_buffer_limit_bytes_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
inline ::google::protobuf::UInt32Value* Listener::mutable_per_connection_buffer_limit_bytes() {
  
  if (per_connection_buffer_limit_bytes_ == NULL) {
    per_connection_buffer_limit_bytes_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Listener.per_connection_buffer_limit_bytes)
  return per_connection_buffer_limit_bytes_;
}
inline ::google::protobuf::UInt32Value* Listener::release_per_connection_buffer_limit_bytes() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Listener.per_connection_buffer_limit_bytes)
  
  ::google::protobuf::UInt32Value* temp = per_connection_buffer_limit_bytes_;
  per_connection_buffer_limit_bytes_ = NULL;
  return temp;
}
inline void Listener::set_allocated_per_connection_buffer_limit_bytes(::google::protobuf::UInt32Value* per_connection_buffer_limit_bytes) {
  delete per_connection_buffer_limit_bytes_;
  if (per_connection_buffer_limit_bytes != NULL && per_connection_buffer_limit_bytes->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_per_connection_buffer_limit_bytes = new ::google::protobuf::UInt32Value;
    new_per_connection_buffer_limit_bytes->CopyFrom(*per_connection_buffer_limit_bytes);
    per_connection_buffer_limit_bytes = new_per_connection_buffer_limit_bytes;
  }
  per_connection_buffer_limit_bytes_ = per_connection_buffer_limit_bytes;
  if (per_connection_buffer_limit_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Listener.per_connection_buffer_limit_bytes)
}

// .envoy.api.v2.Metadata metadata = 5;
inline bool Listener::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
inline void Listener::clear_metadata() {
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) delete metadata_;
  metadata_ = NULL;
}
inline const ::envoy::api::v2::Metadata& Listener::metadata() const {
  // @@protoc_insertion_point(field_get:envoy.api.v2.Listener.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::envoy::api::v2::Metadata::internal_default_instance();
}
inline ::envoy::api::v2::Metadata* Listener::mutable_metadata() {
  
  if (metadata_ == NULL) {
    metadata_ = new ::envoy::api::v2::Metadata;
  }
  // @@protoc_insertion_point(field_mutable:envoy.api.v2.Listener.metadata)
  return metadata_;
}
inline ::envoy::api::v2::Metadata* Listener::release_metadata() {
  // @@protoc_insertion_point(field_release:envoy.api.v2.Listener.metadata)
  
  ::envoy::api::v2::Metadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void Listener::set_allocated_metadata(::envoy::api::v2::Metadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:envoy.api.v2.Listener.metadata)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v2
}  // namespace api
}  // namespace envoy

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::envoy::api::v2::Filter_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::envoy::api::v2::Filter_Type>() {
  return ::envoy::api::v2::Filter_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2flds_2eproto__INCLUDED
