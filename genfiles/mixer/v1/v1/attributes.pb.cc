// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/attributes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mixer/v1/attributes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace istio {
namespace mixer {
namespace v1 {
class Attributes_StringsEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes::Attributes_StringsEntry>
     _instance;
} _Attributes_StringsEntry_default_instance_;
class Attributes_Int64sEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes::Attributes_Int64sEntry>
     _instance;
} _Attributes_Int64sEntry_default_instance_;
class Attributes_DoublesEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes::Attributes_DoublesEntry>
     _instance;
} _Attributes_DoublesEntry_default_instance_;
class Attributes_BoolsEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes::Attributes_BoolsEntry>
     _instance;
} _Attributes_BoolsEntry_default_instance_;
class Attributes_TimestampsEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes::Attributes_TimestampsEntry>
     _instance;
} _Attributes_TimestampsEntry_default_instance_;
class Attributes_DurationsEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes::Attributes_DurationsEntry>
     _instance;
} _Attributes_DurationsEntry_default_instance_;
class Attributes_BytesEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes::Attributes_BytesEntry>
     _instance;
} _Attributes_BytesEntry_default_instance_;
class Attributes_StringMapsEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes::Attributes_StringMapsEntry>
     _instance;
} _Attributes_StringMapsEntry_default_instance_;
class AttributesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Attributes>
     _instance;
} _Attributes_default_instance_;
class StringMap_EntriesEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StringMap::StringMap_EntriesEntry>
     _instance;
} _StringMap_EntriesEntry_default_instance_;
class StringMapDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StringMap>
     _instance;
} _StringMap_default_instance_;

namespace protobuf_mixer_2fv1_2fattributes_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[11];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, strings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, int64s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, doubles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, bools_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, timestamps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, durations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Attributes, string_maps_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringMap, entries_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Attributes)},
  { 14, -1, sizeof(StringMap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_StringsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_Int64sEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_DoublesEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_BoolsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_TimestampsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_DurationsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_BytesEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_StringMapsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Attributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringMap_EntriesEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringMap_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mixer/v1/attributes.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[0].reflection = Attributes::Attributes_StringsEntry::CreateReflection(file_level_metadata[0].descriptor, _Attributes_StringsEntry_default_instance_._instance.get_mutable());
file_level_metadata[1].reflection = Attributes::Attributes_Int64sEntry::CreateReflection(file_level_metadata[1].descriptor, _Attributes_Int64sEntry_default_instance_._instance.get_mutable());
file_level_metadata[2].reflection = Attributes::Attributes_DoublesEntry::CreateReflection(file_level_metadata[2].descriptor, _Attributes_DoublesEntry_default_instance_._instance.get_mutable());
file_level_metadata[3].reflection = Attributes::Attributes_BoolsEntry::CreateReflection(file_level_metadata[3].descriptor, _Attributes_BoolsEntry_default_instance_._instance.get_mutable());
file_level_metadata[4].reflection = Attributes::Attributes_TimestampsEntry::CreateReflection(file_level_metadata[4].descriptor, _Attributes_TimestampsEntry_default_instance_._instance.get_mutable());
file_level_metadata[5].reflection = Attributes::Attributes_DurationsEntry::CreateReflection(file_level_metadata[5].descriptor, _Attributes_DurationsEntry_default_instance_._instance.get_mutable());
file_level_metadata[6].reflection = Attributes::Attributes_BytesEntry::CreateReflection(file_level_metadata[6].descriptor, _Attributes_BytesEntry_default_instance_._instance.get_mutable());
file_level_metadata[7].reflection = Attributes::Attributes_StringMapsEntry::CreateReflection(file_level_metadata[7].descriptor, _Attributes_StringMapsEntry_default_instance_._instance.get_mutable());
file_level_metadata[9].reflection = StringMap::StringMap_EntriesEntry::CreateReflection(file_level_metadata[9].descriptor, _StringMap_EntriesEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::gogoproto::protobuf_gogoproto_2fgogo_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _Attributes_StringsEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_StringsEntry_default_instance_);_Attributes_Int64sEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_Int64sEntry_default_instance_);_Attributes_DoublesEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_DoublesEntry_default_instance_);_Attributes_BoolsEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_BoolsEntry_default_instance_);_Attributes_TimestampsEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_TimestampsEntry_default_instance_);_Attributes_DurationsEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_DurationsEntry_default_instance_);_Attributes_BytesEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_BytesEntry_default_instance_);_Attributes_StringMapsEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_StringMapsEntry_default_instance_);_Attributes_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Attributes_default_instance_);_StringMap_EntriesEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StringMap_EntriesEntry_default_instance_);_StringMap_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StringMap_default_instance_);_Attributes_StringsEntry_default_instance_._instance.get_mutable()->set_default_instance(_Attributes_StringsEntry_default_instance_._instance.get_mutable());
  _Attributes_StringsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Attributes_Int64sEntry_default_instance_._instance.get_mutable()->set_default_instance(_Attributes_Int64sEntry_default_instance_._instance.get_mutable());
  _Attributes_Int64sEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Attributes_DoublesEntry_default_instance_._instance.get_mutable()->set_default_instance(_Attributes_DoublesEntry_default_instance_._instance.get_mutable());
  _Attributes_DoublesEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Attributes_BoolsEntry_default_instance_._instance.get_mutable()->set_default_instance(_Attributes_BoolsEntry_default_instance_._instance.get_mutable());
  _Attributes_BoolsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Attributes_TimestampsEntry_default_instance_._instance.get_mutable()->set_default_instance(_Attributes_TimestampsEntry_default_instance_._instance.get_mutable());
  _Attributes_TimestampsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Attributes_DurationsEntry_default_instance_._instance.get_mutable()->set_default_instance(_Attributes_DurationsEntry_default_instance_._instance.get_mutable());
  _Attributes_DurationsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Attributes_BytesEntry_default_instance_._instance.get_mutable()->set_default_instance(_Attributes_BytesEntry_default_instance_._instance.get_mutable());
  _Attributes_BytesEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Attributes_StringMapsEntry_default_instance_._instance.get_mutable()->set_default_instance(_Attributes_StringMapsEntry_default_instance_._instance.get_mutable());
  _Attributes_StringMapsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _StringMap_EntriesEntry_default_instance_._instance.get_mutable()->set_default_instance(_StringMap_EntriesEntry_default_instance_._instance.get_mutable());
  _StringMap_EntriesEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031mixer/v1/attributes.proto\022\016istio.mixer"
      ".v1\032\024gogoproto/gogo.proto\032\036google/protob"
      "uf/duration.proto\032\037google/protobuf/times"
      "tamp.proto\"\341\007\n\nAttributes\022\r\n\005words\030\001 \003(\t"
      "\0228\n\007strings\030\002 \003(\0132\'.istio.mixer.v1.Attri"
      "butes.StringsEntry\0226\n\006int64s\030\003 \003(\0132&.ist"
      "io.mixer.v1.Attributes.Int64sEntry\0228\n\007do"
      "ubles\030\004 \003(\0132\'.istio.mixer.v1.Attributes."
      "DoublesEntry\0224\n\005bools\030\005 \003(\0132%.istio.mixe"
      "r.v1.Attributes.BoolsEntry\022H\n\ntimestamps"
      "\030\006 \003(\0132*.istio.mixer.v1.Attributes.Times"
      "tampsEntryB\010\310\336\037\000\220\337\037\001\022F\n\tdurations\030\007 \003(\0132"
      ").istio.mixer.v1.Attributes.DurationsEnt"
      "ryB\010\310\336\037\000\230\337\037\001\0224\n\005bytes\030\010 \003(\0132%.istio.mixe"
      "r.v1.Attributes.BytesEntry\022E\n\013string_map"
      "s\030\t \003(\0132*.istio.mixer.v1.Attributes.Stri"
      "ngMapsEntryB\004\310\336\037\000\032.\n\014StringsEntry\022\013\n\003key"
      "\030\001 \001(\021\022\r\n\005value\030\002 \001(\021:\0028\001\032-\n\013Int64sEntry"
      "\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\003:\0028\001\032.\n\014Doub"
      "lesEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\001:\0028\001"
      "\032,\n\nBoolsEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001"
      "(\010:\0028\001\032M\n\017TimestampsEntry\022\013\n\003key\030\001 \001(\021\022)"
      "\n\005value\030\002 \001(\0132\032.google.protobuf.Timestam"
      "p:\0028\001\032K\n\016DurationsEntry\022\013\n\003key\030\001 \001(\021\022(\n\005"
      "value\030\002 \001(\0132\031.google.protobuf.Duration:\002"
      "8\001\032,\n\nBytesEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002"
      " \001(\014:\0028\001\032L\n\017StringMapsEntry\022\013\n\003key\030\001 \001(\021"
      "\022(\n\005value\030\002 \001(\0132\031.istio.mixer.v1.StringM"
      "ap:\0028\001\"t\n\tStringMap\0227\n\007entries\030\001 \003(\0132&.i"
      "stio.mixer.v1.StringMap.EntriesEntry\032.\n\014"
      "EntriesEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\021"
      ":\0028\001B\014\310\341\036\000\250\342\036\000\360\341\036\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1266);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mixer/v1/attributes.proto", &protobuf_RegisterTypes);
  ::gogoproto::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mixer_2fv1_2fattributes_2eproto


// ===================================================================

Attributes::Attributes_StringsEntry::Attributes_StringsEntry() {}
Attributes::Attributes_StringsEntry::Attributes_StringsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Attributes::Attributes_StringsEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[0];
}
void Attributes::Attributes_StringsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Attributes::Attributes_StringsEntry::MergeFrom(const Attributes_StringsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Attributes::Attributes_Int64sEntry::Attributes_Int64sEntry() {}
Attributes::Attributes_Int64sEntry::Attributes_Int64sEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Attributes::Attributes_Int64sEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[1];
}
void Attributes::Attributes_Int64sEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Attributes::Attributes_Int64sEntry::MergeFrom(const Attributes_Int64sEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Attributes::Attributes_DoublesEntry::Attributes_DoublesEntry() {}
Attributes::Attributes_DoublesEntry::Attributes_DoublesEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Attributes::Attributes_DoublesEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[2];
}
void Attributes::Attributes_DoublesEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Attributes::Attributes_DoublesEntry::MergeFrom(const Attributes_DoublesEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Attributes::Attributes_BoolsEntry::Attributes_BoolsEntry() {}
Attributes::Attributes_BoolsEntry::Attributes_BoolsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Attributes::Attributes_BoolsEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[3];
}
void Attributes::Attributes_BoolsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Attributes::Attributes_BoolsEntry::MergeFrom(const Attributes_BoolsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Attributes::Attributes_TimestampsEntry::Attributes_TimestampsEntry() {}
Attributes::Attributes_TimestampsEntry::Attributes_TimestampsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Attributes::Attributes_TimestampsEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[4];
}
void Attributes::Attributes_TimestampsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Attributes::Attributes_TimestampsEntry::MergeFrom(const Attributes_TimestampsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Attributes::Attributes_DurationsEntry::Attributes_DurationsEntry() {}
Attributes::Attributes_DurationsEntry::Attributes_DurationsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Attributes::Attributes_DurationsEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[5];
}
void Attributes::Attributes_DurationsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Attributes::Attributes_DurationsEntry::MergeFrom(const Attributes_DurationsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Attributes::Attributes_BytesEntry::Attributes_BytesEntry() {}
Attributes::Attributes_BytesEntry::Attributes_BytesEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Attributes::Attributes_BytesEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[6];
}
void Attributes::Attributes_BytesEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Attributes::Attributes_BytesEntry::MergeFrom(const Attributes_BytesEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Attributes::Attributes_StringMapsEntry::Attributes_StringMapsEntry() {}
Attributes::Attributes_StringMapsEntry::Attributes_StringMapsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Attributes::Attributes_StringMapsEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[7];
}
void Attributes::Attributes_StringMapsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Attributes::Attributes_StringMapsEntry::MergeFrom(const Attributes_StringMapsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attributes::kWordsFieldNumber;
const int Attributes::kStringsFieldNumber;
const int Attributes::kInt64SFieldNumber;
const int Attributes::kDoublesFieldNumber;
const int Attributes::kBoolsFieldNumber;
const int Attributes::kTimestampsFieldNumber;
const int Attributes::kDurationsFieldNumber;
const int Attributes::kBytesFieldNumber;
const int Attributes::kStringMapsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attributes::Attributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mixer_2fv1_2fattributes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.Attributes)
}
Attributes::Attributes(const Attributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      words_(from.words_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strings_.MergeFrom(from.strings_);
  int64s_.MergeFrom(from.int64s_);
  doubles_.MergeFrom(from.doubles_);
  bools_.MergeFrom(from.bools_);
  timestamps_.MergeFrom(from.timestamps_);
  durations_.MergeFrom(from.durations_);
  bytes_.MergeFrom(from.bytes_);
  string_maps_.MergeFrom(from.string_maps_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.Attributes)
}

void Attributes::SharedCtor() {
  _cached_size_ = 0;
}

Attributes::~Attributes() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.Attributes)
  SharedDtor();
}

void Attributes::SharedDtor() {
}

void Attributes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Attributes::descriptor() {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Attributes& Attributes::default_instance() {
  protobuf_mixer_2fv1_2fattributes_2eproto::InitDefaults();
  return *internal_default_instance();
}

Attributes* Attributes::New(::google::protobuf::Arena* arena) const {
  Attributes* n = new Attributes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Attributes::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  strings_.Clear();
  int64s_.Clear();
  doubles_.Clear();
  bools_.Clear();
  timestamps_.Clear();
  durations_.Clear();
  bytes_.Clear();
  string_maps_.Clear();
  _internal_metadata_.Clear();
}

bool Attributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.Attributes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string words = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_words()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->words(this->words_size() - 1).data(),
            static_cast<int>(this->words(this->words_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.Attributes.words"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, sint32> strings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Attributes_StringsEntry::Parser< ::google::protobuf::internal::MapField<
              Attributes_StringsEntry,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&strings_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, int64> int64s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          Attributes_Int64sEntry::Parser< ::google::protobuf::internal::MapField<
              Attributes_Int64sEntry,
              ::google::protobuf::int32, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 > > parser(&int64s_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, double> doubles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          Attributes_DoublesEntry::Parser< ::google::protobuf::internal::MapField<
              Attributes_DoublesEntry,
              ::google::protobuf::int32, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, double > > parser(&doubles_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, bool> bools = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          Attributes_BoolsEntry::Parser< ::google::protobuf::internal::MapField<
              Attributes_BoolsEntry,
              ::google::protobuf::int32, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, bool > > parser(&bools_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          Attributes_TimestampsEntry::Parser< ::google::protobuf::internal::MapField<
              Attributes_TimestampsEntry,
              ::google::protobuf::int32, ::google::protobuf::Timestamp,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp > > parser(&timestamps_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          Attributes_DurationsEntry::Parser< ::google::protobuf::internal::MapField<
              Attributes_DurationsEntry,
              ::google::protobuf::int32, ::google::protobuf::Duration,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration > > parser(&durations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, bytes> bytes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          Attributes_BytesEntry::Parser< ::google::protobuf::internal::MapField<
              Attributes_BytesEntry,
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&bytes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          Attributes_StringMapsEntry::Parser< ::google::protobuf::internal::MapField<
              Attributes_StringMapsEntry,
              ::google::protobuf::int32, ::istio::mixer::v1::StringMap,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap > > parser(&string_maps_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.Attributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.Attributes)
  return false;
#undef DO_
}

void Attributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string words = 1;
  for (int i = 0, n = this->words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->words(i).data(), static_cast<int>(this->words(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.Attributes.words");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->words(i), output);
  }

  // map<sint32, sint32> strings = 2;
  if (!this->strings().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->strings().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->strings().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->strings().begin();
          it != this->strings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_StringsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(strings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_StringsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->strings().begin();
          it != this->strings().end(); ++it) {
        entry.reset(strings_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // map<sint32, int64> int64s = 3;
  if (!this->int64s().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->int64s().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->int64s().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->int64s().begin();
          it != this->int64s().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_Int64sEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(int64s_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_Int64sEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->int64s().begin();
          it != this->int64s().end(); ++it) {
        entry.reset(int64s_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // map<sint32, double> doubles = 4;
  if (!this->doubles().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->doubles().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->doubles().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->doubles().begin();
          it != this->doubles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_DoublesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(doubles_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_DoublesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->doubles().begin();
          it != this->doubles().end(); ++it) {
        entry.reset(doubles_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // map<sint32, bool> bools = 5;
  if (!this->bools().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->bools().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->bools().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
          it = this->bools().begin();
          it != this->bools().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_BoolsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bools_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_BoolsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
          it = this->bools().begin();
          it != this->bools().end(); ++it) {
        entry.reset(bools_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  // map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
  if (!this->timestamps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->timestamps().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->timestamps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
          it = this->timestamps().begin();
          it != this->timestamps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_TimestampsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(timestamps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_TimestampsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
          it = this->timestamps().begin();
          it != this->timestamps().end(); ++it) {
        entry.reset(timestamps_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    }
  }

  // map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (!this->durations().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->durations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->durations().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
          it = this->durations().begin();
          it != this->durations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_DurationsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(durations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_DurationsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
          it = this->durations().begin();
          it != this->durations().end(); ++it) {
        entry.reset(durations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    }
  }

  // map<sint32, bytes> bytes = 8;
  if (!this->bytes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->bytes().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->bytes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->bytes().begin();
          it != this->bytes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_BytesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bytes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_BytesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->bytes().begin();
          it != this->bytes().end(); ++it) {
        entry.reset(bytes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    }
  }

  // map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
  if (!this->string_maps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->string_maps().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->string_maps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
          it = this->string_maps().begin();
          it != this->string_maps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_StringMapsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(string_maps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_StringMapsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
          it = this->string_maps().begin();
          it != this->string_maps().end(); ++it) {
        entry.reset(string_maps_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.Attributes)
}

::google::protobuf::uint8* Attributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string words = 1;
  for (int i = 0, n = this->words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->words(i).data(), static_cast<int>(this->words(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.Attributes.words");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->words(i), target);
  }

  // map<sint32, sint32> strings = 2;
  if (!this->strings().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->strings().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->strings().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->strings().begin();
          it != this->strings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_StringsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(strings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_StringsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->strings().begin();
          it != this->strings().end(); ++it) {
        entry.reset(strings_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // map<sint32, int64> int64s = 3;
  if (!this->int64s().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->int64s().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->int64s().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->int64s().begin();
          it != this->int64s().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_Int64sEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(int64s_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_Int64sEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->int64s().begin();
          it != this->int64s().end(); ++it) {
        entry.reset(int64s_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // map<sint32, double> doubles = 4;
  if (!this->doubles().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->doubles().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->doubles().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->doubles().begin();
          it != this->doubles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_DoublesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(doubles_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_DoublesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->doubles().begin();
          it != this->doubles().end(); ++it) {
        entry.reset(doubles_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // map<sint32, bool> bools = 5;
  if (!this->bools().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->bools().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->bools().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
          it = this->bools().begin();
          it != this->bools().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_BoolsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bools_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_BoolsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
          it = this->bools().begin();
          it != this->bools().end(); ++it) {
        entry.reset(bools_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  // map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
  if (!this->timestamps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->timestamps().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->timestamps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
          it = this->timestamps().begin();
          it != this->timestamps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_TimestampsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(timestamps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_TimestampsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
          it = this->timestamps().begin();
          it != this->timestamps().end(); ++it) {
        entry.reset(timestamps_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    }
  }

  // map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (!this->durations().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->durations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->durations().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
          it = this->durations().begin();
          it != this->durations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_DurationsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(durations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_DurationsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
          it = this->durations().begin();
          it != this->durations().end(); ++it) {
        entry.reset(durations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    }
  }

  // map<sint32, bytes> bytes = 8;
  if (!this->bytes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->bytes().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->bytes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->bytes().begin();
          it != this->bytes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_BytesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bytes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_BytesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->bytes().begin();
          it != this->bytes().end(); ++it) {
        entry.reset(bytes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    }
  }

  // map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
  if (!this->string_maps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->string_maps().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->string_maps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
          it = this->string_maps().begin();
          it != this->string_maps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Attributes_StringMapsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(string_maps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Attributes_StringMapsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
          it = this->string_maps().begin();
          it != this->string_maps().end(); ++it) {
        entry.reset(string_maps_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.Attributes)
  return target;
}

size_t Attributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.Attributes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string words = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->words_size());
  for (int i = 0, n = this->words_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->words(i));
  }

  // map<sint32, sint32> strings = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strings_size());
  {
    ::google::protobuf::scoped_ptr<Attributes_StringsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->strings().begin();
        it != this->strings().end(); ++it) {
      entry.reset(strings_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<sint32, int64> int64s = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->int64s_size());
  {
    ::google::protobuf::scoped_ptr<Attributes_Int64sEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
        it = this->int64s().begin();
        it != this->int64s().end(); ++it) {
      entry.reset(int64s_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<sint32, double> doubles = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->doubles_size());
  {
    ::google::protobuf::scoped_ptr<Attributes_DoublesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
        it = this->doubles().begin();
        it != this->doubles().end(); ++it) {
      entry.reset(doubles_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<sint32, bool> bools = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bools_size());
  {
    ::google::protobuf::scoped_ptr<Attributes_BoolsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
        it = this->bools().begin();
        it != this->bools().end(); ++it) {
      entry.reset(bools_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->timestamps_size());
  {
    ::google::protobuf::scoped_ptr<Attributes_TimestampsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
        it = this->timestamps().begin();
        it != this->timestamps().end(); ++it) {
      entry.reset(timestamps_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->durations_size());
  {
    ::google::protobuf::scoped_ptr<Attributes_DurationsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
        it = this->durations().begin();
        it != this->durations().end(); ++it) {
      entry.reset(durations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<sint32, bytes> bytes = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bytes_size());
  {
    ::google::protobuf::scoped_ptr<Attributes_BytesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->bytes().begin();
        it != this->bytes().end(); ++it) {
      entry.reset(bytes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->string_maps_size());
  {
    ::google::protobuf::scoped_ptr<Attributes_StringMapsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
        it = this->string_maps().begin();
        it != this->string_maps().end(); ++it) {
      entry.reset(string_maps_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Attributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  const Attributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Attributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.Attributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.Attributes)
    MergeFrom(*source);
  }
}

void Attributes::MergeFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  strings_.MergeFrom(from.strings_);
  int64s_.MergeFrom(from.int64s_);
  doubles_.MergeFrom(from.doubles_);
  bools_.MergeFrom(from.bools_);
  timestamps_.MergeFrom(from.timestamps_);
  durations_.MergeFrom(from.durations_);
  bytes_.MergeFrom(from.bytes_);
  string_maps_.MergeFrom(from.string_maps_);
}

void Attributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attributes::CopyFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes::IsInitialized() const {
  return true;
}

void Attributes::Swap(Attributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attributes::InternalSwap(Attributes* other) {
  using std::swap;
  words_.InternalSwap(&other->words_);
  strings_.Swap(&other->strings_);
  int64s_.Swap(&other->int64s_);
  doubles_.Swap(&other->doubles_);
  bools_.Swap(&other->bools_);
  timestamps_.Swap(&other->timestamps_);
  durations_.Swap(&other->durations_);
  bytes_.Swap(&other->bytes_);
  string_maps_.Swap(&other->string_maps_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Attributes::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Attributes

// repeated string words = 1;
int Attributes::words_size() const {
  return words_.size();
}
void Attributes::clear_words() {
  words_.Clear();
}
const ::std::string& Attributes::words(int index) const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.Attributes.words)
  return words_.Get(index);
}
::std::string* Attributes::mutable_words(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.Attributes.words)
  return words_.Mutable(index);
}
void Attributes::set_words(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.Attributes.words)
  words_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Attributes::set_words(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.Attributes.words)
  words_.Mutable(index)->assign(std::move(value));
}
#endif
void Attributes::set_words(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.Attributes.words)
}
void Attributes::set_words(int index, const char* value, size_t size) {
  words_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.Attributes.words)
}
::std::string* Attributes::add_words() {
  // @@protoc_insertion_point(field_add_mutable:istio.mixer.v1.Attributes.words)
  return words_.Add();
}
void Attributes::add_words(const ::std::string& value) {
  words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:istio.mixer.v1.Attributes.words)
}
#if LANG_CXX11
void Attributes::add_words(::std::string&& value) {
  words_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:istio.mixer.v1.Attributes.words)
}
#endif
void Attributes::add_words(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:istio.mixer.v1.Attributes.words)
}
void Attributes::add_words(const char* value, size_t size) {
  words_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:istio.mixer.v1.Attributes.words)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Attributes::words() const {
  // @@protoc_insertion_point(field_list:istio.mixer.v1.Attributes.words)
  return words_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Attributes::mutable_words() {
  // @@protoc_insertion_point(field_mutable_list:istio.mixer.v1.Attributes.words)
  return &words_;
}

// map<sint32, sint32> strings = 2;
int Attributes::strings_size() const {
  return strings_.size();
}
void Attributes::clear_strings() {
  strings_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
Attributes::strings() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.Attributes.strings)
  return strings_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
Attributes::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.Attributes.strings)
  return strings_.MutableMap();
}

// map<sint32, int64> int64s = 3;
int Attributes::int64s_size() const {
  return int64s_.size();
}
void Attributes::clear_int64s() {
  int64s_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >&
Attributes::int64s() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.Attributes.int64s)
  return int64s_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >*
Attributes::mutable_int64s() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.Attributes.int64s)
  return int64s_.MutableMap();
}

// map<sint32, double> doubles = 4;
int Attributes::doubles_size() const {
  return doubles_.size();
}
void Attributes::clear_doubles() {
  doubles_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, double >&
Attributes::doubles() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.Attributes.doubles)
  return doubles_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, double >*
Attributes::mutable_doubles() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.Attributes.doubles)
  return doubles_.MutableMap();
}

// map<sint32, bool> bools = 5;
int Attributes::bools_size() const {
  return bools_.size();
}
void Attributes::clear_bools() {
  bools_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
Attributes::bools() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.Attributes.bools)
  return bools_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, bool >*
Attributes::mutable_bools() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.Attributes.bools)
  return bools_.MutableMap();
}

// map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
int Attributes::timestamps_size() const {
  return timestamps_.size();
}
void Attributes::clear_timestamps() {
  timestamps_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >&
Attributes::timestamps() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.Attributes.timestamps)
  return timestamps_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >*
Attributes::mutable_timestamps() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.Attributes.timestamps)
  return timestamps_.MutableMap();
}

// map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
int Attributes::durations_size() const {
  return durations_.size();
}
void Attributes::clear_durations() {
  durations_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >&
Attributes::durations() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.Attributes.durations)
  return durations_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >*
Attributes::mutable_durations() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.Attributes.durations)
  return durations_.MutableMap();
}

// map<sint32, bytes> bytes = 8;
int Attributes::bytes_size() const {
  return bytes_.size();
}
void Attributes::clear_bytes() {
  bytes_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
Attributes::bytes() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.Attributes.bytes)
  return bytes_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
Attributes::mutable_bytes() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.Attributes.bytes)
  return bytes_.MutableMap();
}

// map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
int Attributes::string_maps_size() const {
  return string_maps_.size();
}
void Attributes::clear_string_maps() {
  string_maps_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >&
Attributes::string_maps() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.Attributes.string_maps)
  return string_maps_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >*
Attributes::mutable_string_maps() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.Attributes.string_maps)
  return string_maps_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

StringMap::StringMap_EntriesEntry::StringMap_EntriesEntry() {}
StringMap::StringMap_EntriesEntry::StringMap_EntriesEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata StringMap::StringMap_EntriesEntry::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[9];
}
void StringMap::StringMap_EntriesEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void StringMap::StringMap_EntriesEntry::MergeFrom(const StringMap_EntriesEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringMap::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringMap::StringMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mixer_2fv1_2fattributes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.StringMap)
}
StringMap::StringMap(const StringMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.StringMap)
}

void StringMap::SharedCtor() {
  _cached_size_ = 0;
}

StringMap::~StringMap() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.StringMap)
  SharedDtor();
}

void StringMap::SharedDtor() {
}

void StringMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringMap::descriptor() {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringMap& StringMap::default_instance() {
  protobuf_mixer_2fv1_2fattributes_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringMap* StringMap::New(::google::protobuf::Arena* arena) const {
  StringMap* n = new StringMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringMap::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool StringMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.StringMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<sint32, sint32> entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          StringMap_EntriesEntry::Parser< ::google::protobuf::internal::MapField<
              StringMap_EntriesEntry,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&entries_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.StringMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.StringMap)
  return false;
#undef DO_
}

void StringMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<sint32, sint32> entries = 1;
  if (!this->entries().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->entries().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->entries().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<StringMap_EntriesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(entries_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<StringMap_EntriesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it) {
        entry.reset(entries_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.StringMap)
}

::google::protobuf::uint8* StringMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<sint32, sint32> entries = 1;
  if (!this->entries().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->entries().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->entries().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<StringMap_EntriesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(entries_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<StringMap_EntriesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it) {
        entry.reset(entries_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.StringMap)
  return target;
}

size_t StringMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.StringMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<sint32, sint32> entries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->entries_size());
  {
    ::google::protobuf::scoped_ptr<StringMap_EntriesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->entries().begin();
        it != this->entries().end(); ++it) {
      entry.reset(entries_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.StringMap)
  GOOGLE_DCHECK_NE(&from, this);
  const StringMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.StringMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.StringMap)
    MergeFrom(*source);
  }
}

void StringMap::MergeFrom(const StringMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.StringMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void StringMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.StringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringMap::CopyFrom(const StringMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.StringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringMap::IsInitialized() const {
  return true;
}

void StringMap::Swap(StringMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringMap::InternalSwap(StringMap* other) {
  using std::swap;
  entries_.Swap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringMap::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringMap

// map<sint32, sint32> entries = 1;
int StringMap::entries_size() const {
  return entries_.size();
}
void StringMap::clear_entries() {
  entries_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
StringMap::entries() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.StringMap.entries)
  return entries_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
StringMap::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.StringMap.entries)
  return entries_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)
