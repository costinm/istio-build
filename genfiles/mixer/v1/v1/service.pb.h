// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/service.proto

#ifndef PROTOBUF_mixer_2fv1_2fservice_2eproto__INCLUDED
#define PROTOBUF_mixer_2fv1_2fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include "mixer/v1/check.pb.h"
#include "mixer/v1/report.pb.h"
// @@protoc_insertion_point(includes)
namespace istio {
namespace mixer {
namespace v1 {
}  // namespace v1
}  // namespace mixer
}  // namespace istio

namespace istio {
namespace mixer {
namespace v1 {

namespace protobuf_mixer_2fv1_2fservice_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mixer_2fv1_2fservice_2eproto

// ===================================================================


// ===================================================================

class Mixer_Stub;

class Mixer : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Mixer() {};
 public:
  virtual ~Mixer();

  typedef Mixer_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Check(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::v1::CheckRequest* request,
                       ::istio::mixer::v1::CheckResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Report(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::v1::ReportRequest* request,
                       ::istio::mixer::v1::ReportResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Mixer);
};

class Mixer_Stub : public Mixer {
 public:
  Mixer_Stub(::google::protobuf::RpcChannel* channel);
  Mixer_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Mixer_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Mixer ------------------------------------------

  void Check(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::v1::CheckRequest* request,
                       ::istio::mixer::v1::CheckResponse* response,
                       ::google::protobuf::Closure* done);
  void Report(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::v1::ReportRequest* request,
                       ::istio::mixer::v1::ReportResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Mixer_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mixer_2fv1_2fservice_2eproto__INCLUDED
