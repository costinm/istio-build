// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/check.proto

#ifndef PROTOBUF_mixer_2fv1_2fcheck_2eproto__INCLUDED
#define PROTOBUF_mixer_2fv1_2fcheck_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "gogoproto/gogo.pb.h"
#include <google/protobuf/duration.pb.h>
#include "google/rpc/status.pb.h"
#include "mixer/v1/attributes.pb.h"
// @@protoc_insertion_point(includes)
namespace istio {
namespace mixer {
namespace v1 {
class CheckRequest;
class CheckRequestDefaultTypeInternal;
extern CheckRequestDefaultTypeInternal _CheckRequest_default_instance_;
class CheckRequest_QuotaParams;
class CheckRequest_QuotaParamsDefaultTypeInternal;
extern CheckRequest_QuotaParamsDefaultTypeInternal _CheckRequest_QuotaParams_default_instance_;
class CheckRequest_QuotasEntry;
class CheckRequest_QuotasEntryDefaultTypeInternal;
extern CheckRequest_QuotasEntryDefaultTypeInternal _CheckRequest_QuotasEntry_default_instance_;
class CheckResponse;
class CheckResponseDefaultTypeInternal;
extern CheckResponseDefaultTypeInternal _CheckResponse_default_instance_;
class CheckResponse_PreconditionResult;
class CheckResponse_PreconditionResultDefaultTypeInternal;
extern CheckResponse_PreconditionResultDefaultTypeInternal _CheckResponse_PreconditionResult_default_instance_;
class CheckResponse_QuotaResult;
class CheckResponse_QuotaResultDefaultTypeInternal;
extern CheckResponse_QuotaResultDefaultTypeInternal _CheckResponse_QuotaResult_default_instance_;
class CheckResponse_QuotasEntry;
class CheckResponse_QuotasEntryDefaultTypeInternal;
extern CheckResponse_QuotasEntryDefaultTypeInternal _CheckResponse_QuotasEntry_default_instance_;
class ReferencedAttributes;
class ReferencedAttributesDefaultTypeInternal;
extern ReferencedAttributesDefaultTypeInternal _ReferencedAttributes_default_instance_;
class ReferencedAttributes_AttributeMatch;
class ReferencedAttributes_AttributeMatchDefaultTypeInternal;
extern ReferencedAttributes_AttributeMatchDefaultTypeInternal _ReferencedAttributes_AttributeMatch_default_instance_;
}  // namespace v1
}  // namespace mixer
}  // namespace istio

namespace istio {
namespace mixer {
namespace v1 {

namespace protobuf_mixer_2fv1_2fcheck_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mixer_2fv1_2fcheck_2eproto

enum ReferencedAttributes_Condition {
  ReferencedAttributes_Condition_CONDITION_UNSPECIFIED = 0,
  ReferencedAttributes_Condition_ABSENCE = 1,
  ReferencedAttributes_Condition_EXACT = 2,
  ReferencedAttributes_Condition_REGEX = 3,
  ReferencedAttributes_Condition_ReferencedAttributes_Condition_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReferencedAttributes_Condition_ReferencedAttributes_Condition_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReferencedAttributes_Condition_IsValid(int value);
const ReferencedAttributes_Condition ReferencedAttributes_Condition_Condition_MIN = ReferencedAttributes_Condition_CONDITION_UNSPECIFIED;
const ReferencedAttributes_Condition ReferencedAttributes_Condition_Condition_MAX = ReferencedAttributes_Condition_REGEX;
const int ReferencedAttributes_Condition_Condition_ARRAYSIZE = ReferencedAttributes_Condition_Condition_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReferencedAttributes_Condition_descriptor();
inline const ::std::string& ReferencedAttributes_Condition_Name(ReferencedAttributes_Condition value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReferencedAttributes_Condition_descriptor(), value);
}
inline bool ReferencedAttributes_Condition_Parse(
    const ::std::string& name, ReferencedAttributes_Condition* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReferencedAttributes_Condition>(
    ReferencedAttributes_Condition_descriptor(), name, value);
}
// ===================================================================

class CheckRequest_QuotaParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.CheckRequest.QuotaParams) */ {
 public:
  CheckRequest_QuotaParams();
  virtual ~CheckRequest_QuotaParams();

  CheckRequest_QuotaParams(const CheckRequest_QuotaParams& from);

  inline CheckRequest_QuotaParams& operator=(const CheckRequest_QuotaParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckRequest_QuotaParams(CheckRequest_QuotaParams&& from) noexcept
    : CheckRequest_QuotaParams() {
    *this = ::std::move(from);
  }

  inline CheckRequest_QuotaParams& operator=(CheckRequest_QuotaParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckRequest_QuotaParams& default_instance();

  static inline const CheckRequest_QuotaParams* internal_default_instance() {
    return reinterpret_cast<const CheckRequest_QuotaParams*>(
               &_CheckRequest_QuotaParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CheckRequest_QuotaParams* other);
  friend void swap(CheckRequest_QuotaParams& a, CheckRequest_QuotaParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckRequest_QuotaParams* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckRequest_QuotaParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckRequest_QuotaParams& from);
  void MergeFrom(const CheckRequest_QuotaParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckRequest_QuotaParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 amount = 1;
  void clear_amount();
  static const int kAmountFieldNumber = 1;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // bool best_effort = 2;
  void clear_best_effort();
  static const int kBestEffortFieldNumber = 2;
  bool best_effort() const;
  void set_best_effort(bool value);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.CheckRequest.QuotaParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 amount_;
  bool best_effort_;
  mutable int _cached_size_;
  friend struct protobuf_mixer_2fv1_2fcheck_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CheckRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.CheckRequest) */ {
 public:
  CheckRequest();
  virtual ~CheckRequest();

  CheckRequest(const CheckRequest& from);

  inline CheckRequest& operator=(const CheckRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckRequest(CheckRequest&& from) noexcept
    : CheckRequest() {
    *this = ::std::move(from);
  }

  inline CheckRequest& operator=(CheckRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckRequest& default_instance();

  static inline const CheckRequest* internal_default_instance() {
    return reinterpret_cast<const CheckRequest*>(
               &_CheckRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CheckRequest* other);
  friend void swap(CheckRequest& a, CheckRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckRequest& from);
  void MergeFrom(const CheckRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CheckRequest_QuotaParams QuotaParams;

  // accessors -------------------------------------------------------

  // map<string, .istio.mixer.v1.CheckRequest.QuotaParams> quotas = 4 [(.gogoproto.nullable) = false];
  int quotas_size() const;
  void clear_quotas();
  static const int kQuotasFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >&
      quotas() const;
  ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >*
      mutable_quotas();

  // string deduplication_id = 3;
  void clear_deduplication_id();
  static const int kDeduplicationIdFieldNumber = 3;
  const ::std::string& deduplication_id() const;
  void set_deduplication_id(const ::std::string& value);
  #if LANG_CXX11
  void set_deduplication_id(::std::string&& value);
  #endif
  void set_deduplication_id(const char* value);
  void set_deduplication_id(const char* value, size_t size);
  ::std::string* mutable_deduplication_id();
  ::std::string* release_deduplication_id();
  void set_allocated_deduplication_id(::std::string* deduplication_id);

  // .istio.mixer.v1.Attributes attributes = 1 [(.gogoproto.nullable) = false];
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::istio::mixer::v1::Attributes& attributes() const;
  ::istio::mixer::v1::Attributes* mutable_attributes();
  ::istio::mixer::v1::Attributes* release_attributes();
  void set_allocated_attributes(::istio::mixer::v1::Attributes* attributes);

  // uint32 global_word_count = 2;
  void clear_global_word_count();
  static const int kGlobalWordCountFieldNumber = 2;
  ::google::protobuf::uint32 global_word_count() const;
  void set_global_word_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.CheckRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class CheckRequest_QuotasEntry : public ::google::protobuf::internal::MapEntry<CheckRequest_QuotasEntry, 
      ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CheckRequest_QuotasEntry, 
      ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    CheckRequest_QuotasEntry();
    CheckRequest_QuotasEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CheckRequest_QuotasEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CheckRequest_QuotasEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CheckRequest_QuotasEntry,
      ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > quotas_;
  private:
  ::google::protobuf::internal::ArenaStringPtr deduplication_id_;
  ::istio::mixer::v1::Attributes* attributes_;
  ::google::protobuf::uint32 global_word_count_;
  mutable int _cached_size_;
  friend struct protobuf_mixer_2fv1_2fcheck_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckResponse_PreconditionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.CheckResponse.PreconditionResult) */ {
 public:
  CheckResponse_PreconditionResult();
  virtual ~CheckResponse_PreconditionResult();

  CheckResponse_PreconditionResult(const CheckResponse_PreconditionResult& from);

  inline CheckResponse_PreconditionResult& operator=(const CheckResponse_PreconditionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckResponse_PreconditionResult(CheckResponse_PreconditionResult&& from) noexcept
    : CheckResponse_PreconditionResult() {
    *this = ::std::move(from);
  }

  inline CheckResponse_PreconditionResult& operator=(CheckResponse_PreconditionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckResponse_PreconditionResult& default_instance();

  static inline const CheckResponse_PreconditionResult* internal_default_instance() {
    return reinterpret_cast<const CheckResponse_PreconditionResult*>(
               &_CheckResponse_PreconditionResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CheckResponse_PreconditionResult* other);
  friend void swap(CheckResponse_PreconditionResult& a, CheckResponse_PreconditionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckResponse_PreconditionResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckResponse_PreconditionResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckResponse_PreconditionResult& from);
  void MergeFrom(const CheckResponse_PreconditionResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckResponse_PreconditionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.rpc.Status status = 1 [(.gogoproto.nullable) = false];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* mutable_status();
  ::google::rpc::Status* release_status();
  void set_allocated_status(::google::rpc::Status* status);

  // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  bool has_valid_duration() const;
  void clear_valid_duration();
  static const int kValidDurationFieldNumber = 2;
  const ::google::protobuf::Duration& valid_duration() const;
  ::google::protobuf::Duration* mutable_valid_duration();
  ::google::protobuf::Duration* release_valid_duration();
  void set_allocated_valid_duration(::google::protobuf::Duration* valid_duration);

  // .istio.mixer.v1.Attributes attributes = 4 [(.gogoproto.nullable) = false];
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 4;
  const ::istio::mixer::v1::Attributes& attributes() const;
  ::istio::mixer::v1::Attributes* mutable_attributes();
  ::istio::mixer::v1::Attributes* release_attributes();
  void set_allocated_attributes(::istio::mixer::v1::Attributes* attributes);

  // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5 [(.gogoproto.nullable) = false];
  bool has_referenced_attributes() const;
  void clear_referenced_attributes();
  static const int kReferencedAttributesFieldNumber = 5;
  const ::istio::mixer::v1::ReferencedAttributes& referenced_attributes() const;
  ::istio::mixer::v1::ReferencedAttributes* mutable_referenced_attributes();
  ::istio::mixer::v1::ReferencedAttributes* release_referenced_attributes();
  void set_allocated_referenced_attributes(::istio::mixer::v1::ReferencedAttributes* referenced_attributes);

  // int32 valid_use_count = 3;
  void clear_valid_use_count();
  static const int kValidUseCountFieldNumber = 3;
  ::google::protobuf::int32 valid_use_count() const;
  void set_valid_use_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.CheckResponse.PreconditionResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::rpc::Status* status_;
  ::google::protobuf::Duration* valid_duration_;
  ::istio::mixer::v1::Attributes* attributes_;
  ::istio::mixer::v1::ReferencedAttributes* referenced_attributes_;
  ::google::protobuf::int32 valid_use_count_;
  mutable int _cached_size_;
  friend struct protobuf_mixer_2fv1_2fcheck_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckResponse_QuotaResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.CheckResponse.QuotaResult) */ {
 public:
  CheckResponse_QuotaResult();
  virtual ~CheckResponse_QuotaResult();

  CheckResponse_QuotaResult(const CheckResponse_QuotaResult& from);

  inline CheckResponse_QuotaResult& operator=(const CheckResponse_QuotaResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckResponse_QuotaResult(CheckResponse_QuotaResult&& from) noexcept
    : CheckResponse_QuotaResult() {
    *this = ::std::move(from);
  }

  inline CheckResponse_QuotaResult& operator=(CheckResponse_QuotaResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckResponse_QuotaResult& default_instance();

  static inline const CheckResponse_QuotaResult* internal_default_instance() {
    return reinterpret_cast<const CheckResponse_QuotaResult*>(
               &_CheckResponse_QuotaResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CheckResponse_QuotaResult* other);
  friend void swap(CheckResponse_QuotaResult& a, CheckResponse_QuotaResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckResponse_QuotaResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckResponse_QuotaResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckResponse_QuotaResult& from);
  void MergeFrom(const CheckResponse_QuotaResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckResponse_QuotaResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Duration valid_duration = 1 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  bool has_valid_duration() const;
  void clear_valid_duration();
  static const int kValidDurationFieldNumber = 1;
  const ::google::protobuf::Duration& valid_duration() const;
  ::google::protobuf::Duration* mutable_valid_duration();
  ::google::protobuf::Duration* release_valid_duration();
  void set_allocated_valid_duration(::google::protobuf::Duration* valid_duration);

  // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5 [(.gogoproto.nullable) = false];
  bool has_referenced_attributes() const;
  void clear_referenced_attributes();
  static const int kReferencedAttributesFieldNumber = 5;
  const ::istio::mixer::v1::ReferencedAttributes& referenced_attributes() const;
  ::istio::mixer::v1::ReferencedAttributes* mutable_referenced_attributes();
  ::istio::mixer::v1::ReferencedAttributes* release_referenced_attributes();
  void set_allocated_referenced_attributes(::istio::mixer::v1::ReferencedAttributes* referenced_attributes);

  // int64 granted_amount = 2;
  void clear_granted_amount();
  static const int kGrantedAmountFieldNumber = 2;
  ::google::protobuf::int64 granted_amount() const;
  void set_granted_amount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.CheckResponse.QuotaResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* valid_duration_;
  ::istio::mixer::v1::ReferencedAttributes* referenced_attributes_;
  ::google::protobuf::int64 granted_amount_;
  mutable int _cached_size_;
  friend struct protobuf_mixer_2fv1_2fcheck_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CheckResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.CheckResponse) */ {
 public:
  CheckResponse();
  virtual ~CheckResponse();

  CheckResponse(const CheckResponse& from);

  inline CheckResponse& operator=(const CheckResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckResponse(CheckResponse&& from) noexcept
    : CheckResponse() {
    *this = ::std::move(from);
  }

  inline CheckResponse& operator=(CheckResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckResponse& default_instance();

  static inline const CheckResponse* internal_default_instance() {
    return reinterpret_cast<const CheckResponse*>(
               &_CheckResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CheckResponse* other);
  friend void swap(CheckResponse& a, CheckResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckResponse& from);
  void MergeFrom(const CheckResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CheckResponse_PreconditionResult PreconditionResult;
  typedef CheckResponse_QuotaResult QuotaResult;

  // accessors -------------------------------------------------------

  // map<string, .istio.mixer.v1.CheckResponse.QuotaResult> quotas = 3 [(.gogoproto.nullable) = false];
  int quotas_size() const;
  void clear_quotas();
  static const int kQuotasFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >&
      quotas() const;
  ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >*
      mutable_quotas();

  // .istio.mixer.v1.CheckResponse.PreconditionResult precondition = 2 [(.gogoproto.nullable) = false];
  bool has_precondition() const;
  void clear_precondition();
  static const int kPreconditionFieldNumber = 2;
  const ::istio::mixer::v1::CheckResponse_PreconditionResult& precondition() const;
  ::istio::mixer::v1::CheckResponse_PreconditionResult* mutable_precondition();
  ::istio::mixer::v1::CheckResponse_PreconditionResult* release_precondition();
  void set_allocated_precondition(::istio::mixer::v1::CheckResponse_PreconditionResult* precondition);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.CheckResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class CheckResponse_QuotasEntry : public ::google::protobuf::internal::MapEntry<CheckResponse_QuotasEntry, 
      ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CheckResponse_QuotasEntry, 
      ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    CheckResponse_QuotasEntry();
    CheckResponse_QuotasEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CheckResponse_QuotasEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CheckResponse_QuotasEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CheckResponse_QuotasEntry,
      ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > quotas_;
  private:
  ::istio::mixer::v1::CheckResponse_PreconditionResult* precondition_;
  mutable int _cached_size_;
  friend struct protobuf_mixer_2fv1_2fcheck_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferencedAttributes_AttributeMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.ReferencedAttributes.AttributeMatch) */ {
 public:
  ReferencedAttributes_AttributeMatch();
  virtual ~ReferencedAttributes_AttributeMatch();

  ReferencedAttributes_AttributeMatch(const ReferencedAttributes_AttributeMatch& from);

  inline ReferencedAttributes_AttributeMatch& operator=(const ReferencedAttributes_AttributeMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReferencedAttributes_AttributeMatch(ReferencedAttributes_AttributeMatch&& from) noexcept
    : ReferencedAttributes_AttributeMatch() {
    *this = ::std::move(from);
  }

  inline ReferencedAttributes_AttributeMatch& operator=(ReferencedAttributes_AttributeMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferencedAttributes_AttributeMatch& default_instance();

  static inline const ReferencedAttributes_AttributeMatch* internal_default_instance() {
    return reinterpret_cast<const ReferencedAttributes_AttributeMatch*>(
               &_ReferencedAttributes_AttributeMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ReferencedAttributes_AttributeMatch* other);
  friend void swap(ReferencedAttributes_AttributeMatch& a, ReferencedAttributes_AttributeMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReferencedAttributes_AttributeMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  ReferencedAttributes_AttributeMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReferencedAttributes_AttributeMatch& from);
  void MergeFrom(const ReferencedAttributes_AttributeMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReferencedAttributes_AttributeMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string regex = 3;
  void clear_regex();
  static const int kRegexFieldNumber = 3;
  const ::std::string& regex() const;
  void set_regex(const ::std::string& value);
  #if LANG_CXX11
  void set_regex(::std::string&& value);
  #endif
  void set_regex(const char* value);
  void set_regex(const char* value, size_t size);
  ::std::string* mutable_regex();
  ::std::string* release_regex();
  void set_allocated_regex(::std::string* regex);

  // sint32 name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  ::google::protobuf::int32 name() const;
  void set_name(::google::protobuf::int32 value);

  // .istio.mixer.v1.ReferencedAttributes.Condition condition = 2;
  void clear_condition();
  static const int kConditionFieldNumber = 2;
  ::istio::mixer::v1::ReferencedAttributes_Condition condition() const;
  void set_condition(::istio::mixer::v1::ReferencedAttributes_Condition value);

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr regex_;
  ::google::protobuf::int32 name_;
  int condition_;
  mutable int _cached_size_;
  friend struct protobuf_mixer_2fv1_2fcheck_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferencedAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.v1.ReferencedAttributes) */ {
 public:
  ReferencedAttributes();
  virtual ~ReferencedAttributes();

  ReferencedAttributes(const ReferencedAttributes& from);

  inline ReferencedAttributes& operator=(const ReferencedAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReferencedAttributes(ReferencedAttributes&& from) noexcept
    : ReferencedAttributes() {
    *this = ::std::move(from);
  }

  inline ReferencedAttributes& operator=(ReferencedAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferencedAttributes& default_instance();

  static inline const ReferencedAttributes* internal_default_instance() {
    return reinterpret_cast<const ReferencedAttributes*>(
               &_ReferencedAttributes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ReferencedAttributes* other);
  friend void swap(ReferencedAttributes& a, ReferencedAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReferencedAttributes* New() const PROTOBUF_FINAL { return New(NULL); }

  ReferencedAttributes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReferencedAttributes& from);
  void MergeFrom(const ReferencedAttributes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReferencedAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReferencedAttributes_AttributeMatch AttributeMatch;

  typedef ReferencedAttributes_Condition Condition;
  static const Condition CONDITION_UNSPECIFIED =
    ReferencedAttributes_Condition_CONDITION_UNSPECIFIED;
  static const Condition ABSENCE =
    ReferencedAttributes_Condition_ABSENCE;
  static const Condition EXACT =
    ReferencedAttributes_Condition_EXACT;
  static const Condition REGEX =
    ReferencedAttributes_Condition_REGEX;
  static inline bool Condition_IsValid(int value) {
    return ReferencedAttributes_Condition_IsValid(value);
  }
  static const Condition Condition_MIN =
    ReferencedAttributes_Condition_Condition_MIN;
  static const Condition Condition_MAX =
    ReferencedAttributes_Condition_Condition_MAX;
  static const int Condition_ARRAYSIZE =
    ReferencedAttributes_Condition_Condition_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Condition_descriptor() {
    return ReferencedAttributes_Condition_descriptor();
  }
  static inline const ::std::string& Condition_Name(Condition value) {
    return ReferencedAttributes_Condition_Name(value);
  }
  static inline bool Condition_Parse(const ::std::string& name,
      Condition* value) {
    return ReferencedAttributes_Condition_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string words = 1;
  int words_size() const;
  void clear_words();
  static const int kWordsFieldNumber = 1;
  const ::std::string& words(int index) const;
  ::std::string* mutable_words(int index);
  void set_words(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_words(int index, ::std::string&& value);
  #endif
  void set_words(int index, const char* value);
  void set_words(int index, const char* value, size_t size);
  ::std::string* add_words();
  void add_words(const ::std::string& value);
  #if LANG_CXX11
  void add_words(::std::string&& value);
  #endif
  void add_words(const char* value);
  void add_words(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& words() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_words();

  // repeated .istio.mixer.v1.ReferencedAttributes.AttributeMatch attribute_matches = 2 [(.gogoproto.nullable) = false];
  int attribute_matches_size() const;
  void clear_attribute_matches();
  static const int kAttributeMatchesFieldNumber = 2;
  const ::istio::mixer::v1::ReferencedAttributes_AttributeMatch& attribute_matches(int index) const;
  ::istio::mixer::v1::ReferencedAttributes_AttributeMatch* mutable_attribute_matches(int index);
  ::istio::mixer::v1::ReferencedAttributes_AttributeMatch* add_attribute_matches();
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::ReferencedAttributes_AttributeMatch >*
      mutable_attribute_matches();
  const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::ReferencedAttributes_AttributeMatch >&
      attribute_matches() const;

  // @@protoc_insertion_point(class_scope:istio.mixer.v1.ReferencedAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> words_;
  ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::ReferencedAttributes_AttributeMatch > attribute_matches_;
  mutable int _cached_size_;
  friend struct protobuf_mixer_2fv1_2fcheck_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CheckRequest_QuotaParams

// int64 amount = 1;
inline void CheckRequest_QuotaParams::clear_amount() {
  amount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CheckRequest_QuotaParams::amount() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckRequest.QuotaParams.amount)
  return amount_;
}
inline void CheckRequest_QuotaParams::set_amount(::google::protobuf::int64 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.CheckRequest.QuotaParams.amount)
}

// bool best_effort = 2;
inline void CheckRequest_QuotaParams::clear_best_effort() {
  best_effort_ = false;
}
inline bool CheckRequest_QuotaParams::best_effort() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckRequest.QuotaParams.best_effort)
  return best_effort_;
}
inline void CheckRequest_QuotaParams::set_best_effort(bool value) {
  
  best_effort_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.CheckRequest.QuotaParams.best_effort)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CheckRequest

// .istio.mixer.v1.Attributes attributes = 1 [(.gogoproto.nullable) = false];
inline bool CheckRequest::has_attributes() const {
  return this != internal_default_instance() && attributes_ != NULL;
}
inline void CheckRequest::clear_attributes() {
  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) delete attributes_;
  attributes_ = NULL;
}
inline const ::istio::mixer::v1::Attributes& CheckRequest::attributes() const {
  const ::istio::mixer::v1::Attributes* p = attributes_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckRequest.attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mixer::v1::Attributes*>(
      &::istio::mixer::v1::_Attributes_default_instance_);
}
inline ::istio::mixer::v1::Attributes* CheckRequest::mutable_attributes() {
  
  if (attributes_ == NULL) {
    attributes_ = new ::istio::mixer::v1::Attributes;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckRequest.attributes)
  return attributes_;
}
inline ::istio::mixer::v1::Attributes* CheckRequest::release_attributes() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckRequest.attributes)
  
  ::istio::mixer::v1::Attributes* temp = attributes_;
  attributes_ = NULL;
  return temp;
}
inline void CheckRequest::set_allocated_attributes(::istio::mixer::v1::Attributes* attributes) {
  delete attributes_;
  attributes_ = attributes;
  if (attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckRequest.attributes)
}

// uint32 global_word_count = 2;
inline void CheckRequest::clear_global_word_count() {
  global_word_count_ = 0u;
}
inline ::google::protobuf::uint32 CheckRequest::global_word_count() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckRequest.global_word_count)
  return global_word_count_;
}
inline void CheckRequest::set_global_word_count(::google::protobuf::uint32 value) {
  
  global_word_count_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.CheckRequest.global_word_count)
}

// string deduplication_id = 3;
inline void CheckRequest::clear_deduplication_id() {
  deduplication_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckRequest::deduplication_id() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckRequest.deduplication_id)
  return deduplication_id_.GetNoArena();
}
inline void CheckRequest::set_deduplication_id(const ::std::string& value) {
  
  deduplication_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.CheckRequest.deduplication_id)
}
#if LANG_CXX11
inline void CheckRequest::set_deduplication_id(::std::string&& value) {
  
  deduplication_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.CheckRequest.deduplication_id)
}
#endif
inline void CheckRequest::set_deduplication_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deduplication_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.CheckRequest.deduplication_id)
}
inline void CheckRequest::set_deduplication_id(const char* value, size_t size) {
  
  deduplication_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.CheckRequest.deduplication_id)
}
inline ::std::string* CheckRequest::mutable_deduplication_id() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckRequest.deduplication_id)
  return deduplication_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckRequest::release_deduplication_id() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckRequest.deduplication_id)
  
  return deduplication_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckRequest::set_allocated_deduplication_id(::std::string* deduplication_id) {
  if (deduplication_id != NULL) {
    
  } else {
    
  }
  deduplication_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deduplication_id);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckRequest.deduplication_id)
}

// map<string, .istio.mixer.v1.CheckRequest.QuotaParams> quotas = 4 [(.gogoproto.nullable) = false];
inline int CheckRequest::quotas_size() const {
  return quotas_.size();
}
inline void CheckRequest::clear_quotas() {
  quotas_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >&
CheckRequest::quotas() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.CheckRequest.quotas)
  return quotas_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >*
CheckRequest::mutable_quotas() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.CheckRequest.quotas)
  return quotas_.MutableMap();
}

// -------------------------------------------------------------------

// CheckResponse_PreconditionResult

// .google.rpc.Status status = 1 [(.gogoproto.nullable) = false];
inline bool CheckResponse_PreconditionResult::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void CheckResponse_PreconditionResult::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
inline const ::google::rpc::Status& CheckResponse_PreconditionResult::status() const {
  const ::google::rpc::Status* p = status_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.PreconditionResult.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* CheckResponse_PreconditionResult::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckResponse.PreconditionResult.status)
  return status_;
}
inline ::google::rpc::Status* CheckResponse_PreconditionResult::release_status() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckResponse.PreconditionResult.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline void CheckResponse_PreconditionResult::set_allocated_status(::google::rpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckResponse.PreconditionResult.status)
}

// .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
inline bool CheckResponse_PreconditionResult::has_valid_duration() const {
  return this != internal_default_instance() && valid_duration_ != NULL;
}
inline void CheckResponse_PreconditionResult::clear_valid_duration() {
  if (GetArenaNoVirtual() == NULL && valid_duration_ != NULL) delete valid_duration_;
  valid_duration_ = NULL;
}
inline const ::google::protobuf::Duration& CheckResponse_PreconditionResult::valid_duration() const {
  const ::google::protobuf::Duration* p = valid_duration_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.PreconditionResult.valid_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* CheckResponse_PreconditionResult::mutable_valid_duration() {
  
  if (valid_duration_ == NULL) {
    valid_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckResponse.PreconditionResult.valid_duration)
  return valid_duration_;
}
inline ::google::protobuf::Duration* CheckResponse_PreconditionResult::release_valid_duration() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckResponse.PreconditionResult.valid_duration)
  
  ::google::protobuf::Duration* temp = valid_duration_;
  valid_duration_ = NULL;
  return temp;
}
inline void CheckResponse_PreconditionResult::set_allocated_valid_duration(::google::protobuf::Duration* valid_duration) {
  delete valid_duration_;
  if (valid_duration != NULL && valid_duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_valid_duration = new ::google::protobuf::Duration;
    new_valid_duration->CopyFrom(*valid_duration);
    valid_duration = new_valid_duration;
  }
  valid_duration_ = valid_duration;
  if (valid_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckResponse.PreconditionResult.valid_duration)
}

// int32 valid_use_count = 3;
inline void CheckResponse_PreconditionResult::clear_valid_use_count() {
  valid_use_count_ = 0;
}
inline ::google::protobuf::int32 CheckResponse_PreconditionResult::valid_use_count() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.PreconditionResult.valid_use_count)
  return valid_use_count_;
}
inline void CheckResponse_PreconditionResult::set_valid_use_count(::google::protobuf::int32 value) {
  
  valid_use_count_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.CheckResponse.PreconditionResult.valid_use_count)
}

// .istio.mixer.v1.Attributes attributes = 4 [(.gogoproto.nullable) = false];
inline bool CheckResponse_PreconditionResult::has_attributes() const {
  return this != internal_default_instance() && attributes_ != NULL;
}
inline void CheckResponse_PreconditionResult::clear_attributes() {
  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) delete attributes_;
  attributes_ = NULL;
}
inline const ::istio::mixer::v1::Attributes& CheckResponse_PreconditionResult::attributes() const {
  const ::istio::mixer::v1::Attributes* p = attributes_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.PreconditionResult.attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mixer::v1::Attributes*>(
      &::istio::mixer::v1::_Attributes_default_instance_);
}
inline ::istio::mixer::v1::Attributes* CheckResponse_PreconditionResult::mutable_attributes() {
  
  if (attributes_ == NULL) {
    attributes_ = new ::istio::mixer::v1::Attributes;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckResponse.PreconditionResult.attributes)
  return attributes_;
}
inline ::istio::mixer::v1::Attributes* CheckResponse_PreconditionResult::release_attributes() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckResponse.PreconditionResult.attributes)
  
  ::istio::mixer::v1::Attributes* temp = attributes_;
  attributes_ = NULL;
  return temp;
}
inline void CheckResponse_PreconditionResult::set_allocated_attributes(::istio::mixer::v1::Attributes* attributes) {
  delete attributes_;
  attributes_ = attributes;
  if (attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckResponse.PreconditionResult.attributes)
}

// .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5 [(.gogoproto.nullable) = false];
inline bool CheckResponse_PreconditionResult::has_referenced_attributes() const {
  return this != internal_default_instance() && referenced_attributes_ != NULL;
}
inline void CheckResponse_PreconditionResult::clear_referenced_attributes() {
  if (GetArenaNoVirtual() == NULL && referenced_attributes_ != NULL) delete referenced_attributes_;
  referenced_attributes_ = NULL;
}
inline const ::istio::mixer::v1::ReferencedAttributes& CheckResponse_PreconditionResult::referenced_attributes() const {
  const ::istio::mixer::v1::ReferencedAttributes* p = referenced_attributes_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.PreconditionResult.referenced_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mixer::v1::ReferencedAttributes*>(
      &::istio::mixer::v1::_ReferencedAttributes_default_instance_);
}
inline ::istio::mixer::v1::ReferencedAttributes* CheckResponse_PreconditionResult::mutable_referenced_attributes() {
  
  if (referenced_attributes_ == NULL) {
    referenced_attributes_ = new ::istio::mixer::v1::ReferencedAttributes;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckResponse.PreconditionResult.referenced_attributes)
  return referenced_attributes_;
}
inline ::istio::mixer::v1::ReferencedAttributes* CheckResponse_PreconditionResult::release_referenced_attributes() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckResponse.PreconditionResult.referenced_attributes)
  
  ::istio::mixer::v1::ReferencedAttributes* temp = referenced_attributes_;
  referenced_attributes_ = NULL;
  return temp;
}
inline void CheckResponse_PreconditionResult::set_allocated_referenced_attributes(::istio::mixer::v1::ReferencedAttributes* referenced_attributes) {
  delete referenced_attributes_;
  referenced_attributes_ = referenced_attributes;
  if (referenced_attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckResponse.PreconditionResult.referenced_attributes)
}

// -------------------------------------------------------------------

// CheckResponse_QuotaResult

// .google.protobuf.Duration valid_duration = 1 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
inline bool CheckResponse_QuotaResult::has_valid_duration() const {
  return this != internal_default_instance() && valid_duration_ != NULL;
}
inline void CheckResponse_QuotaResult::clear_valid_duration() {
  if (GetArenaNoVirtual() == NULL && valid_duration_ != NULL) delete valid_duration_;
  valid_duration_ = NULL;
}
inline const ::google::protobuf::Duration& CheckResponse_QuotaResult::valid_duration() const {
  const ::google::protobuf::Duration* p = valid_duration_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.QuotaResult.valid_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* CheckResponse_QuotaResult::mutable_valid_duration() {
  
  if (valid_duration_ == NULL) {
    valid_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckResponse.QuotaResult.valid_duration)
  return valid_duration_;
}
inline ::google::protobuf::Duration* CheckResponse_QuotaResult::release_valid_duration() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckResponse.QuotaResult.valid_duration)
  
  ::google::protobuf::Duration* temp = valid_duration_;
  valid_duration_ = NULL;
  return temp;
}
inline void CheckResponse_QuotaResult::set_allocated_valid_duration(::google::protobuf::Duration* valid_duration) {
  delete valid_duration_;
  if (valid_duration != NULL && valid_duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_valid_duration = new ::google::protobuf::Duration;
    new_valid_duration->CopyFrom(*valid_duration);
    valid_duration = new_valid_duration;
  }
  valid_duration_ = valid_duration;
  if (valid_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckResponse.QuotaResult.valid_duration)
}

// int64 granted_amount = 2;
inline void CheckResponse_QuotaResult::clear_granted_amount() {
  granted_amount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CheckResponse_QuotaResult::granted_amount() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.QuotaResult.granted_amount)
  return granted_amount_;
}
inline void CheckResponse_QuotaResult::set_granted_amount(::google::protobuf::int64 value) {
  
  granted_amount_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.CheckResponse.QuotaResult.granted_amount)
}

// .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5 [(.gogoproto.nullable) = false];
inline bool CheckResponse_QuotaResult::has_referenced_attributes() const {
  return this != internal_default_instance() && referenced_attributes_ != NULL;
}
inline void CheckResponse_QuotaResult::clear_referenced_attributes() {
  if (GetArenaNoVirtual() == NULL && referenced_attributes_ != NULL) delete referenced_attributes_;
  referenced_attributes_ = NULL;
}
inline const ::istio::mixer::v1::ReferencedAttributes& CheckResponse_QuotaResult::referenced_attributes() const {
  const ::istio::mixer::v1::ReferencedAttributes* p = referenced_attributes_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.QuotaResult.referenced_attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mixer::v1::ReferencedAttributes*>(
      &::istio::mixer::v1::_ReferencedAttributes_default_instance_);
}
inline ::istio::mixer::v1::ReferencedAttributes* CheckResponse_QuotaResult::mutable_referenced_attributes() {
  
  if (referenced_attributes_ == NULL) {
    referenced_attributes_ = new ::istio::mixer::v1::ReferencedAttributes;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckResponse.QuotaResult.referenced_attributes)
  return referenced_attributes_;
}
inline ::istio::mixer::v1::ReferencedAttributes* CheckResponse_QuotaResult::release_referenced_attributes() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckResponse.QuotaResult.referenced_attributes)
  
  ::istio::mixer::v1::ReferencedAttributes* temp = referenced_attributes_;
  referenced_attributes_ = NULL;
  return temp;
}
inline void CheckResponse_QuotaResult::set_allocated_referenced_attributes(::istio::mixer::v1::ReferencedAttributes* referenced_attributes) {
  delete referenced_attributes_;
  referenced_attributes_ = referenced_attributes;
  if (referenced_attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckResponse.QuotaResult.referenced_attributes)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CheckResponse

// .istio.mixer.v1.CheckResponse.PreconditionResult precondition = 2 [(.gogoproto.nullable) = false];
inline bool CheckResponse::has_precondition() const {
  return this != internal_default_instance() && precondition_ != NULL;
}
inline void CheckResponse::clear_precondition() {
  if (GetArenaNoVirtual() == NULL && precondition_ != NULL) delete precondition_;
  precondition_ = NULL;
}
inline const ::istio::mixer::v1::CheckResponse_PreconditionResult& CheckResponse::precondition() const {
  const ::istio::mixer::v1::CheckResponse_PreconditionResult* p = precondition_;
  // @@protoc_insertion_point(field_get:istio.mixer.v1.CheckResponse.precondition)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mixer::v1::CheckResponse_PreconditionResult*>(
      &::istio::mixer::v1::_CheckResponse_PreconditionResult_default_instance_);
}
inline ::istio::mixer::v1::CheckResponse_PreconditionResult* CheckResponse::mutable_precondition() {
  
  if (precondition_ == NULL) {
    precondition_ = new ::istio::mixer::v1::CheckResponse_PreconditionResult;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.CheckResponse.precondition)
  return precondition_;
}
inline ::istio::mixer::v1::CheckResponse_PreconditionResult* CheckResponse::release_precondition() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.CheckResponse.precondition)
  
  ::istio::mixer::v1::CheckResponse_PreconditionResult* temp = precondition_;
  precondition_ = NULL;
  return temp;
}
inline void CheckResponse::set_allocated_precondition(::istio::mixer::v1::CheckResponse_PreconditionResult* precondition) {
  delete precondition_;
  precondition_ = precondition;
  if (precondition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.CheckResponse.precondition)
}

// map<string, .istio.mixer.v1.CheckResponse.QuotaResult> quotas = 3 [(.gogoproto.nullable) = false];
inline int CheckResponse::quotas_size() const {
  return quotas_.size();
}
inline void CheckResponse::clear_quotas() {
  quotas_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >&
CheckResponse::quotas() const {
  // @@protoc_insertion_point(field_map:istio.mixer.v1.CheckResponse.quotas)
  return quotas_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >*
CheckResponse::mutable_quotas() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.v1.CheckResponse.quotas)
  return quotas_.MutableMap();
}

// -------------------------------------------------------------------

// ReferencedAttributes_AttributeMatch

// sint32 name = 1;
inline void ReferencedAttributes_AttributeMatch::clear_name() {
  name_ = 0;
}
inline ::google::protobuf::int32 ReferencedAttributes_AttributeMatch::name() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.ReferencedAttributes.AttributeMatch.name)
  return name_;
}
inline void ReferencedAttributes_AttributeMatch::set_name(::google::protobuf::int32 value) {
  
  name_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.ReferencedAttributes.AttributeMatch.name)
}

// .istio.mixer.v1.ReferencedAttributes.Condition condition = 2;
inline void ReferencedAttributes_AttributeMatch::clear_condition() {
  condition_ = 0;
}
inline ::istio::mixer::v1::ReferencedAttributes_Condition ReferencedAttributes_AttributeMatch::condition() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.ReferencedAttributes.AttributeMatch.condition)
  return static_cast< ::istio::mixer::v1::ReferencedAttributes_Condition >(condition_);
}
inline void ReferencedAttributes_AttributeMatch::set_condition(::istio::mixer::v1::ReferencedAttributes_Condition value) {
  
  condition_ = value;
  // @@protoc_insertion_point(field_set:istio.mixer.v1.ReferencedAttributes.AttributeMatch.condition)
}

// string regex = 3;
inline void ReferencedAttributes_AttributeMatch::clear_regex() {
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReferencedAttributes_AttributeMatch::regex() const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex)
  return regex_.GetNoArena();
}
inline void ReferencedAttributes_AttributeMatch::set_regex(const ::std::string& value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex)
}
#if LANG_CXX11
inline void ReferencedAttributes_AttributeMatch::set_regex(::std::string&& value) {
  
  regex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex)
}
#endif
inline void ReferencedAttributes_AttributeMatch::set_regex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex)
}
inline void ReferencedAttributes_AttributeMatch::set_regex(const char* value, size_t size) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex)
}
inline ::std::string* ReferencedAttributes_AttributeMatch::mutable_regex() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex)
  return regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReferencedAttributes_AttributeMatch::release_regex() {
  // @@protoc_insertion_point(field_release:istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex)
  
  return regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReferencedAttributes_AttributeMatch::set_allocated_regex(::std::string* regex) {
  if (regex != NULL) {
    
  } else {
    
  }
  regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regex);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex)
}

// -------------------------------------------------------------------

// ReferencedAttributes

// repeated string words = 1;
inline int ReferencedAttributes::words_size() const {
  return words_.size();
}
inline void ReferencedAttributes::clear_words() {
  words_.Clear();
}
inline const ::std::string& ReferencedAttributes::words(int index) const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.ReferencedAttributes.words)
  return words_.Get(index);
}
inline ::std::string* ReferencedAttributes::mutable_words(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.ReferencedAttributes.words)
  return words_.Mutable(index);
}
inline void ReferencedAttributes::set_words(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.ReferencedAttributes.words)
  words_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ReferencedAttributes::set_words(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mixer.v1.ReferencedAttributes.words)
  words_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ReferencedAttributes::set_words(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:istio.mixer.v1.ReferencedAttributes.words)
}
inline void ReferencedAttributes::set_words(int index, const char* value, size_t size) {
  words_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.v1.ReferencedAttributes.words)
}
inline ::std::string* ReferencedAttributes::add_words() {
  // @@protoc_insertion_point(field_add_mutable:istio.mixer.v1.ReferencedAttributes.words)
  return words_.Add();
}
inline void ReferencedAttributes::add_words(const ::std::string& value) {
  words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:istio.mixer.v1.ReferencedAttributes.words)
}
#if LANG_CXX11
inline void ReferencedAttributes::add_words(::std::string&& value) {
  words_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:istio.mixer.v1.ReferencedAttributes.words)
}
#endif
inline void ReferencedAttributes::add_words(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:istio.mixer.v1.ReferencedAttributes.words)
}
inline void ReferencedAttributes::add_words(const char* value, size_t size) {
  words_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:istio.mixer.v1.ReferencedAttributes.words)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReferencedAttributes::words() const {
  // @@protoc_insertion_point(field_list:istio.mixer.v1.ReferencedAttributes.words)
  return words_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReferencedAttributes::mutable_words() {
  // @@protoc_insertion_point(field_mutable_list:istio.mixer.v1.ReferencedAttributes.words)
  return &words_;
}

// repeated .istio.mixer.v1.ReferencedAttributes.AttributeMatch attribute_matches = 2 [(.gogoproto.nullable) = false];
inline int ReferencedAttributes::attribute_matches_size() const {
  return attribute_matches_.size();
}
inline void ReferencedAttributes::clear_attribute_matches() {
  attribute_matches_.Clear();
}
inline const ::istio::mixer::v1::ReferencedAttributes_AttributeMatch& ReferencedAttributes::attribute_matches(int index) const {
  // @@protoc_insertion_point(field_get:istio.mixer.v1.ReferencedAttributes.attribute_matches)
  return attribute_matches_.Get(index);
}
inline ::istio::mixer::v1::ReferencedAttributes_AttributeMatch* ReferencedAttributes::mutable_attribute_matches(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mixer.v1.ReferencedAttributes.attribute_matches)
  return attribute_matches_.Mutable(index);
}
inline ::istio::mixer::v1::ReferencedAttributes_AttributeMatch* ReferencedAttributes::add_attribute_matches() {
  // @@protoc_insertion_point(field_add:istio.mixer.v1.ReferencedAttributes.attribute_matches)
  return attribute_matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::ReferencedAttributes_AttributeMatch >*
ReferencedAttributes::mutable_attribute_matches() {
  // @@protoc_insertion_point(field_mutable_list:istio.mixer.v1.ReferencedAttributes.attribute_matches)
  return &attribute_matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mixer::v1::ReferencedAttributes_AttributeMatch >&
ReferencedAttributes::attribute_matches() const {
  // @@protoc_insertion_point(field_list:istio.mixer.v1.ReferencedAttributes.attribute_matches)
  return attribute_matches_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace mixer
}  // namespace istio

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::istio::mixer::v1::ReferencedAttributes_Condition> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::istio::mixer::v1::ReferencedAttributes_Condition>() {
  return ::istio::mixer::v1::ReferencedAttributes_Condition_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mixer_2fv1_2fcheck_2eproto__INCLUDED
