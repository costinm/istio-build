// Code generated by protoc-gen-go.
// source: proxy/v1/config/proxy_mesh.proto
// DO NOT EDIT!

package istio_proxy_v1_config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/duration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProxyMeshConfig_IngressControllerMode int32

const (
	// Disables Istio ingress controller.
	ProxyMeshConfig_OFF ProxyMeshConfig_IngressControllerMode = 0
	// Istio ingress controller will act on ingress resources that do not
	// contain any annotation or whose annotations match the value
	// specified in the ingress_class parameter described earlier. Use this
	// mode if Istio ingress controller will be the default ingress
	// controller for the entire kubernetes cluster.
	ProxyMeshConfig_DEFAULT ProxyMeshConfig_IngressControllerMode = 1
	// Istio ingress controller will only act on ingress resources whose
	// annotations match the value specified in the ingress_class parameter
	// described earlier. Use this mode if Istio ingress controller will be
	// a secondary ingress controller (e.g., in addition to a
	// cloud-provided ingress controller).
	ProxyMeshConfig_STRICT ProxyMeshConfig_IngressControllerMode = 2
)

var ProxyMeshConfig_IngressControllerMode_name = map[int32]string{
	0: "OFF",
	1: "DEFAULT",
	2: "STRICT",
}
var ProxyMeshConfig_IngressControllerMode_value = map[string]int32{
	"OFF":     0,
	"DEFAULT": 1,
	"STRICT":  2,
}

func (x ProxyMeshConfig_IngressControllerMode) String() string {
	return proto.EnumName(ProxyMeshConfig_IngressControllerMode_name, int32(x))
}
func (ProxyMeshConfig_IngressControllerMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{0, 0}
}

type ProxyMeshConfig_AuthPolicy int32

const (
	// Do not encrypt Envoy to Envoy traffic.
	ProxyMeshConfig_NONE ProxyMeshConfig_AuthPolicy = 0
	// Envoy to Envoy traffic is wrapped into mutual TLS connections.
	ProxyMeshConfig_MUTUAL_TLS ProxyMeshConfig_AuthPolicy = 1
)

var ProxyMeshConfig_AuthPolicy_name = map[int32]string{
	0: "NONE",
	1: "MUTUAL_TLS",
}
var ProxyMeshConfig_AuthPolicy_value = map[string]int32{
	"NONE":       0,
	"MUTUAL_TLS": 1,
}

func (x ProxyMeshConfig_AuthPolicy) String() string {
	return proto.EnumName(ProxyMeshConfig_AuthPolicy_name, int32(x))
}
func (ProxyMeshConfig_AuthPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{0, 1}
}

// ProxyMeshConfig defines variables shared by all Envoy instances in the
// Istio service mesh.
type ProxyMeshConfig struct {
	// Address of the egress Envoy service (e.g. _istio-egress:80_).
	EgressProxyAddress string `protobuf:"bytes,1,opt,name=egress_proxy_address,json=egressProxyAddress" json:"egress_proxy_address,omitempty"`
	// Address of the discovery service exposing SDS, CDS, RDS (e.g. _istio-manager:8080_).
	DiscoveryAddress string `protobuf:"bytes,2,opt,name=discovery_address,json=discoveryAddress" json:"discovery_address,omitempty"`
	// Address of the mixer service (e.g. _istio-mixer:9090_).
	MixerAddress string `protobuf:"bytes,3,opt,name=mixer_address,json=mixerAddress" json:"mixer_address,omitempty"`
	// Address of the Zipkin service (e.g. _zipkin:9411_).
	ZipkinAddress string `protobuf:"bytes,4,opt,name=zipkin_address,json=zipkinAddress" json:"zipkin_address,omitempty"`
	// IP Address and Port of a statsd UDP listener (e.g. _10.75.241.127:9125_).
	StatsdUdpAddress string `protobuf:"bytes,12,opt,name=statsd_udp_address,json=statsdUdpAddress" json:"statsd_udp_address,omitempty"`
	// Port on which Envoy should listen for incoming connections from
	// other services.
	ProxyListenPort int32 `protobuf:"varint,5,opt,name=proxy_listen_port,json=proxyListenPort" json:"proxy_listen_port,omitempty"`
	// Port on which Envoy should listen for administrative commands.
	ProxyAdminPort int32 `protobuf:"varint,6,opt,name=proxy_admin_port,json=proxyAdminPort" json:"proxy_admin_port,omitempty"`
	// The time in seconds that Envoy will drain connections during a hot
	// restart. MUST be >=1s (e.g., _1s/1m/1h_)
	DrainDuration *google_protobuf1.Duration `protobuf:"bytes,7,opt,name=drain_duration,json=drainDuration" json:"drain_duration,omitempty"`
	// The time in seconds that Envoy will wait before shutting down the
	// parent process during a hot restart. MUST be >=1s (e.g., _1s/1m/1h_).
	// MUST BE greater than _drain_duration_ parameter.
	ParentShutdownDuration *google_protobuf1.Duration `protobuf:"bytes,8,opt,name=parent_shutdown_duration,json=parentShutdownDuration" json:"parent_shutdown_duration,omitempty"`
	// istio_service_cluster defines the name for the service_cluster that is
	// shared by all Envoy instances. This setting corresponds to
	// _--service-cluster_ flag in Envoy.  In a typical Envoy deployment, the
	// _service-cluster_ flag is used to identify the caller, for
	// source-based routing scenarios.
	//
	//
	// Since Istio does not assign a local service/service version to each
	// Envoy instance, the name is same for all of them.  However, the
	// source/caller's identity (e.g., IP address) is encoded in the
	// _--service-node_ flag when launching Envoy.  When the RDS service
	// receives API calls from Envoy, it uses the value of the _service-node_
	// flag to compute routes that are relative to the service instances
	// located at that IP address.
	IstioServiceCluster string `protobuf:"bytes,9,opt,name=istio_service_cluster,json=istioServiceCluster" json:"istio_service_cluster,omitempty"`
	// Polling interval for service discovery. (MUST BE >=1ms)
	DiscoveryRefreshDelay *google_protobuf1.Duration `protobuf:"bytes,10,opt,name=discovery_refresh_delay,json=discoveryRefreshDelay" json:"discovery_refresh_delay,omitempty"`
	// Connection timeout used by Envoy. (MUST BE >=1ms)
	ConnectTimeout *google_protobuf1.Duration `protobuf:"bytes,11,opt,name=connect_timeout,json=connectTimeout" json:"connect_timeout,omitempty"`
	// Class of ingress resources to be processed by Istio ingress
	// controller.  This corresponds to the value of
	// "kubernetes.io/ingress.class" annotation.
	IngressClass string `protobuf:"bytes,20,opt,name=ingress_class,json=ingressClass" json:"ingress_class,omitempty"`
	// Name of the kubernetes service used for the istio ingress controller.
	IngressService string `protobuf:"bytes,21,opt,name=ingress_service,json=ingressService" json:"ingress_service,omitempty"`
	// Defines whether to use Istio ingress controller for annotated or all ingress resources.
	IngressControllerMode ProxyMeshConfig_IngressControllerMode `protobuf:"varint,22,opt,name=ingress_controller_mode,json=ingressControllerMode,enum=istio.proxy.v1.config.ProxyMeshConfig_IngressControllerMode" json:"ingress_controller_mode,omitempty"`
	// Authentication policy defines the global switch to control authentication
	// for Envoy-to-Envoy communication.
	AuthPolicy ProxyMeshConfig_AuthPolicy `protobuf:"varint,100,opt,name=auth_policy,json=authPolicy,enum=istio.proxy.v1.config.ProxyMeshConfig_AuthPolicy" json:"auth_policy,omitempty"`
	// Path to the secrets used by the authentication policy.
	AuthCertsPath string `protobuf:"bytes,101,opt,name=auth_certs_path,json=authCertsPath" json:"auth_certs_path,omitempty"`
}

func (m *ProxyMeshConfig) Reset()                    { *m = ProxyMeshConfig{} }
func (m *ProxyMeshConfig) String() string            { return proto.CompactTextString(m) }
func (*ProxyMeshConfig) ProtoMessage()               {}
func (*ProxyMeshConfig) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ProxyMeshConfig) GetEgressProxyAddress() string {
	if m != nil {
		return m.EgressProxyAddress
	}
	return ""
}

func (m *ProxyMeshConfig) GetDiscoveryAddress() string {
	if m != nil {
		return m.DiscoveryAddress
	}
	return ""
}

func (m *ProxyMeshConfig) GetMixerAddress() string {
	if m != nil {
		return m.MixerAddress
	}
	return ""
}

func (m *ProxyMeshConfig) GetZipkinAddress() string {
	if m != nil {
		return m.ZipkinAddress
	}
	return ""
}

func (m *ProxyMeshConfig) GetStatsdUdpAddress() string {
	if m != nil {
		return m.StatsdUdpAddress
	}
	return ""
}

func (m *ProxyMeshConfig) GetProxyListenPort() int32 {
	if m != nil {
		return m.ProxyListenPort
	}
	return 0
}

func (m *ProxyMeshConfig) GetProxyAdminPort() int32 {
	if m != nil {
		return m.ProxyAdminPort
	}
	return 0
}

func (m *ProxyMeshConfig) GetDrainDuration() *google_protobuf1.Duration {
	if m != nil {
		return m.DrainDuration
	}
	return nil
}

func (m *ProxyMeshConfig) GetParentShutdownDuration() *google_protobuf1.Duration {
	if m != nil {
		return m.ParentShutdownDuration
	}
	return nil
}

func (m *ProxyMeshConfig) GetIstioServiceCluster() string {
	if m != nil {
		return m.IstioServiceCluster
	}
	return ""
}

func (m *ProxyMeshConfig) GetDiscoveryRefreshDelay() *google_protobuf1.Duration {
	if m != nil {
		return m.DiscoveryRefreshDelay
	}
	return nil
}

func (m *ProxyMeshConfig) GetConnectTimeout() *google_protobuf1.Duration {
	if m != nil {
		return m.ConnectTimeout
	}
	return nil
}

func (m *ProxyMeshConfig) GetIngressClass() string {
	if m != nil {
		return m.IngressClass
	}
	return ""
}

func (m *ProxyMeshConfig) GetIngressService() string {
	if m != nil {
		return m.IngressService
	}
	return ""
}

func (m *ProxyMeshConfig) GetIngressControllerMode() ProxyMeshConfig_IngressControllerMode {
	if m != nil {
		return m.IngressControllerMode
	}
	return ProxyMeshConfig_OFF
}

func (m *ProxyMeshConfig) GetAuthPolicy() ProxyMeshConfig_AuthPolicy {
	if m != nil {
		return m.AuthPolicy
	}
	return ProxyMeshConfig_NONE
}

func (m *ProxyMeshConfig) GetAuthCertsPath() string {
	if m != nil {
		return m.AuthCertsPath
	}
	return ""
}

func init() {
	proto.RegisterType((*ProxyMeshConfig)(nil), "istio.proxy.v1.config.ProxyMeshConfig")
	proto.RegisterEnum("istio.proxy.v1.config.ProxyMeshConfig_IngressControllerMode", ProxyMeshConfig_IngressControllerMode_name, ProxyMeshConfig_IngressControllerMode_value)
	proto.RegisterEnum("istio.proxy.v1.config.ProxyMeshConfig_AuthPolicy", ProxyMeshConfig_AuthPolicy_name, ProxyMeshConfig_AuthPolicy_value)
}

func init() { proto.RegisterFile("proxy/v1/config/proxy_mesh.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 601 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x5d, 0x4f, 0xdb, 0x3e,
	0x14, 0xc6, 0x09, 0xef, 0x9c, 0x42, 0x1a, 0xfc, 0xa7, 0xe0, 0xff, 0x2e, 0xa6, 0x8a, 0x69, 0xac,
	0xda, 0xa6, 0x74, 0xb0, 0xab, 0x49, 0xbb, 0x58, 0x57, 0x40, 0x42, 0x2a, 0xd0, 0xa5, 0xed, 0xb5,
	0x15, 0x62, 0xd3, 0x58, 0x4b, 0xe2, 0xc8, 0x76, 0x3a, 0xd8, 0xf7, 0xdb, 0xf7, 0x9a, 0x62, 0x27,
	0x61, 0x9a, 0x90, 0xba, 0xbb, 0xf8, 0x79, 0x7e, 0xcf, 0x39, 0x39, 0x7e, 0x81, 0x6e, 0x2e, 0xc5,
	0xc3, 0x63, 0x7f, 0x71, 0xda, 0x8f, 0x44, 0x76, 0xcf, 0xe7, 0x7d, 0xb3, 0x26, 0x29, 0x53, 0xb1,
	0x9f, 0x4b, 0xa1, 0x05, 0xea, 0x70, 0xa5, 0xb9, 0xf0, 0x8d, 0xee, 0x2f, 0x4e, 0x7d, 0xcb, 0xbd,
	0x78, 0x39, 0x17, 0x62, 0x9e, 0xb0, 0xbe, 0x81, 0xee, 0x8a, 0xfb, 0x3e, 0x2d, 0x64, 0xa8, 0xb9,
	0xc8, 0x6c, 0xec, 0xf8, 0xd7, 0x36, 0xb4, 0xc7, 0x65, 0xe6, 0x9a, 0xa9, 0x78, 0x68, 0x32, 0xe8,
	0x03, 0x1c, 0xb0, 0xb9, 0x64, 0x4a, 0x11, 0xdb, 0x25, 0xa4, 0xb4, 0x5c, 0x61, 0xa7, 0xeb, 0xf4,
	0x76, 0x02, 0x64, 0x3d, 0x13, 0x1a, 0x58, 0x07, 0xbd, 0x83, 0x7d, 0xca, 0x55, 0x24, 0x16, 0x4c,
	0x3e, 0xe1, 0xab, 0x06, 0xf7, 0x1a, 0xa3, 0x86, 0x5f, 0xc1, 0x5e, 0xca, 0x1f, 0x98, 0x6c, 0xc0,
	0x35, 0x03, 0xee, 0x1a, 0xb1, 0x86, 0x5e, 0x83, 0xfb, 0x93, 0xe7, 0xdf, 0x79, 0xd6, 0x50, 0xeb,
	0x86, 0xda, 0xb3, 0x6a, 0x8d, 0xbd, 0x07, 0xa4, 0x74, 0xa8, 0x15, 0x25, 0x05, 0xcd, 0x1b, 0x74,
	0xd7, 0x76, 0xb6, 0xce, 0x8c, 0xe6, 0x35, 0xfd, 0x16, 0xf6, 0xed, 0x44, 0x09, 0x57, 0x9a, 0x65,
	0x24, 0x17, 0x52, 0xe3, 0x8d, 0xae, 0xd3, 0xdb, 0x08, 0xda, 0xc6, 0x18, 0x19, 0x7d, 0x2c, 0xa4,
	0x46, 0x3d, 0xf0, 0xea, 0xe9, 0x53, 0x5e, 0xa1, 0x9b, 0x06, 0x75, 0x73, 0x3b, 0x7a, 0xca, 0x2d,
	0xf9, 0x05, 0x5c, 0x2a, 0x43, 0x9e, 0x91, 0x7a, 0x6b, 0xf1, 0x56, 0xd7, 0xe9, 0xb5, 0xce, 0xfe,
	0xf7, 0xed, 0xde, 0xfb, 0xf5, 0xde, 0xfb, 0xe7, 0x15, 0x10, 0xec, 0x99, 0x40, 0xbd, 0x44, 0x13,
	0xc0, 0x79, 0x28, 0x59, 0xa6, 0x89, 0x8a, 0x0b, 0x4d, 0xc5, 0x8f, 0x3f, 0x6a, 0x6d, 0x2f, 0xab,
	0x75, 0x68, 0xa3, 0x93, 0x2a, 0xd9, 0x14, 0x3d, 0x03, 0x7b, 0x25, 0x88, 0x62, 0x72, 0xc1, 0x23,
	0x46, 0xa2, 0xa4, 0x50, 0x9a, 0x49, 0xbc, 0x63, 0x76, 0xe7, 0x3f, 0x63, 0x4e, 0xac, 0x37, 0xb4,
	0x16, 0xfa, 0x06, 0x47, 0x4f, 0xe7, 0x28, 0xd9, 0xbd, 0x64, 0x2a, 0x26, 0x94, 0x25, 0xe1, 0x23,
	0x86, 0x65, 0xff, 0xd1, 0x69, 0x92, 0x81, 0x0d, 0x9e, 0x97, 0x39, 0xf4, 0x15, 0xda, 0x91, 0xc8,
	0x32, 0x16, 0x69, 0xa2, 0x79, 0xca, 0x44, 0xa1, 0x71, 0x6b, 0x59, 0x29, 0xb7, 0x4a, 0x4c, 0x6d,
	0xa0, 0xbc, 0x31, 0x3c, 0xb3, 0x37, 0x32, 0x4a, 0x42, 0xa5, 0xf0, 0x81, 0xbd, 0x31, 0x95, 0x38,
	0x2c, 0x35, 0xf4, 0x06, 0xda, 0x35, 0x54, 0x4d, 0x8c, 0x3b, 0x06, 0x73, 0x2b, 0xb9, 0x9a, 0x15,
	0x69, 0x38, 0x6a, 0xaa, 0x89, 0x4c, 0x4b, 0x91, 0x24, 0x4c, 0x92, 0x54, 0x50, 0x86, 0x0f, 0xbb,
	0x4e, 0xcf, 0x3d, 0xfb, 0xec, 0x3f, 0xfb, 0x96, 0xfc, 0xbf, 0xde, 0x89, 0x7f, 0x55, 0xb5, 0x6f,
	0x8a, 0x5c, 0x0b, 0xca, 0x82, 0x0e, 0x7f, 0x4e, 0x46, 0x01, 0xb4, 0xc2, 0x42, 0xc7, 0x24, 0x17,
	0x09, 0x8f, 0x1e, 0x31, 0x35, 0x9d, 0x4e, 0xff, 0xb1, 0xd3, 0xa0, 0xd0, 0xf1, 0xd8, 0x04, 0x03,
	0x08, 0x9b, 0x6f, 0x74, 0x02, 0x6d, 0x53, 0x33, 0x62, 0x52, 0x2b, 0x92, 0x87, 0x3a, 0xc6, 0xcc,
	0xbe, 0x92, 0x52, 0x1e, 0x96, 0xea, 0x38, 0xd4, 0xf1, 0xf1, 0x27, 0xe8, 0x3c, 0xfb, 0xaf, 0x68,
	0x0b, 0xd6, 0x6e, 0x2f, 0x2f, 0xbd, 0x15, 0xd4, 0x82, 0xad, 0xf3, 0x8b, 0xcb, 0xc1, 0x6c, 0x34,
	0xf5, 0x1c, 0x04, 0xb0, 0x39, 0x99, 0x06, 0x57, 0xc3, 0xa9, 0xb7, 0x7a, 0x7c, 0x02, 0xf0, 0xd4,
	0x1c, 0x6d, 0xc3, 0xfa, 0xcd, 0xed, 0xcd, 0x85, 0xb7, 0x82, 0x5c, 0x80, 0xeb, 0xd9, 0x74, 0x36,
	0x18, 0x91, 0xe9, 0x68, 0xe2, 0x39, 0x77, 0x9b, 0xe6, 0x14, 0x3f, 0xfe, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x7e, 0xce, 0xb9, 0x4d, 0xa9, 0x04, 0x00, 0x00,
}
